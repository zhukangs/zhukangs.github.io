<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Promise</title>
		<link>https://blog.gookm.cn/posts/</link>
		<description>Recent content in Posts on Promise</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-hans</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Sat, 05 Mar 2022 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://blog.gookm.cn/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Laravel 使用JWT API 授权🚀</title>
			<link>https://blog.gookm.cn/posts/2022/20220305-api-jwt/</link>
			<pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2022/20220305-api-jwt/</guid>
			<description>什么是JWT Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。作者：Dearmadman链接：https://www.jianshu.com/p/576dbf44b2ae来源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
关于JWT讲解与分析：https://learnku.com/articles/17883
安装 composer 安装 lcobucci/jwt ，我这里默认安装的是最新版 4.1 。
composer require lcobucci/jwt 封装 在 app\Helpers 目录下新建 Jwt.php 文件，封装 Jwt 类。
&amp;lt;?php /** * Created by PhpStorm. * User: zhukang * Date: 2019/8/22 * Time: 16:39 */ namespace App\Helpers; use Illuminate\Support\Facades\Redis; use Lcobucci\Clock\SystemClock; use Lcobucci\JWT\Configuration; use Lcobucci\JWT\Exception; use Lcobucci\JWT\Signer\Hmac\Sha256; use Lcobucci\JWT\Signer\Key\InMemory; use Lcobucci\JWT\Token\Plain; use Lcobucci\JWT\Validation\Constraint\IdentifiedBy; use Lcobucci\JWT\Validation\Constraint\IssuedBy; use Lcobucci\JWT\Validation\Constraint\PermittedFor; use Lcobucci\JWT\Validation\Constraint\SignedWith; use Lcobucci\JWT\Validation\Constraint\ValidAt; use Lcobucci\JWT\Validation\RequiredConstraintsViolated; trait Jwt { protected $issuedBy;//签发人 protected $permittedFor;//受众 protected $identifiedBy;//jwt编号 protected $issuedAt;//签发时间 protected $expiresAt;//过期时间 protected $jwt_secret; //秘钥 public function __construct() { //获取jwt配置信息 $jwt_configs = config(&amp;#39;jwt&amp;#39;); $this-&amp;gt;issuedBy = $jwt_configs[&amp;#39;issuedBy&amp;#39;]; $this-&amp;gt;permittedFor = $jwt_configs[&amp;#39;permittedFor&amp;#39;]; $this-&amp;gt;identifiedBy = $jwt_configs[&amp;#39;identifiedBy&amp;#39;]; $this-&amp;gt;issuedAt = $jwt_configs[&amp;#39;issuedAt&amp;#39;]; $this-&amp;gt;expiresAt = $this-&amp;gt;issuedAt-&amp;gt;modify($jwt_configs[&amp;#39;expiresAt&amp;#39;]); $this-&amp;gt;jwt_secret = $jwt_configs[&amp;#39;jwt_secret&amp;#39;]; } /** * @Description:生成jwt配置对象 * @return Configuration * @Author:zhukang * @Date:2022/4/7 16:05 */ public function createJwtObject() { return Configuration::forSymmetricSigner( new Sha256(), InMemory::base64Encoded($this-&amp;gt;jwt_secret) ); } /** * @Description:生成token * @param array $bind 需要在jwt载体(payload)中加入的数据 [&amp;#39;userid&amp;#39;=&amp;gt;1,&amp;#39;xxxx&amp;#39;=&amp;gt;xxxx] * @return string \Lcobucci\JWT\Token * @Author:zhukang * @Date:2022/4/7 16:04 */ public function getToken(array $bind = []) { $jwt_object = $this-&amp;gt;createJwtObject(); $jwt_obj = $jwt_object-&amp;gt;builder() -&amp;gt;issuedBy($this-&amp;gt;issuedBy) -&amp;gt;permittedFor($this-&amp;gt;permittedFor) -&amp;gt;identifiedBy($this-&amp;gt;identifiedBy) -&amp;gt;issuedAt($this-&amp;gt;issuedAt) -&amp;gt;canOnlyBeUsedAfter($this-&amp;gt;issuedAt) -&amp;gt;expiresAt($this-&amp;gt;expiresAt); if (is_array($bind) &amp;amp;&amp;amp; !</description>
			<content type="html"><![CDATA[<p><img src="https://qiniu.zkilm.cn/blog/posts/2022/20220305-api-jwt.jpg" alt="封面！"></p>
<h3 id="什么是jwt">什么是JWT</h3>
<blockquote>
<p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（<a href="https://link.jianshu.com?t=https://tools.ietf.org/html/rfc7519">(RFC 7519</a>).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。作者：Dearmadman链接：https://www.jianshu.com/p/576dbf44b2ae来源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
<p>关于JWT讲解与分析：https://learnku.com/articles/17883</p>
<h3 id="安装">安装</h3>
<p><code>composer</code> 安装 <code>lcobucci/jwt</code> ，我这里默认安装的是最新版 <code>4.1</code> 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">composer</span> <span class="k">require</span> <span class="nx">lcobucci</span><span class="o">/</span><span class="nx">jwt</span>
</span></span></code></pre></div><h3 id="封装">封装</h3>
<p>在  <code>app\Helpers</code> 目录下新建 <code>Jwt.php</code> 文件，封装 <code>Jwt</code> 类。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd"> * Created by PhpStorm.
</span></span></span><span class="line"><span class="cl"><span class="sd"> * User: zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd"> * Date: 2019/8/22
</span></span></span><span class="line"><span class="cl"><span class="sd"> * Time: 16:39
</span></span></span><span class="line"><span class="cl"><span class="sd"> */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Helpers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Redis</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\Clock\SystemClock</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Configuration</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Signer\Hmac\Sha256</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Signer\Key\InMemory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Token\Plain</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\Constraint\IdentifiedBy</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\Constraint\IssuedBy</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\Constraint\PermittedFor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\Constraint\SignedWith</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\Constraint\ValidAt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Lcobucci\JWT\Validation\RequiredConstraintsViolated</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">trait</span> <span class="nx">Jwt</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$issuedBy</span><span class="p">;</span><span class="c1">//签发人
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="nv">$permittedFor</span><span class="p">;</span><span class="c1">//受众
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="nv">$identifiedBy</span><span class="p">;</span><span class="c1">//jwt编号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="nv">$issuedAt</span><span class="p">;</span><span class="c1">//签发时间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="nv">$expiresAt</span><span class="p">;</span><span class="c1">//过期时间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="nv">$jwt_secret</span><span class="p">;</span> <span class="c1">//秘钥
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//获取jwt配置信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$jwt_configs</span>        <span class="o">=</span> <span class="nx">config</span><span class="p">(</span><span class="s1">&#39;jwt&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedBy</span>     <span class="o">=</span> <span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;issuedBy&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">permittedFor</span> <span class="o">=</span> <span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;permittedFor&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">identifiedBy</span> <span class="o">=</span> <span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;identifiedBy&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedAt</span>     <span class="o">=</span> <span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;issuedAt&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">expiresAt</span>    <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedAt</span><span class="o">-&gt;</span><span class="na">modify</span><span class="p">(</span><span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;expiresAt&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">jwt_secret</span>   <span class="o">=</span> <span class="nv">$jwt_configs</span><span class="p">[</span><span class="s1">&#39;jwt_secret&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:生成jwt配置对象
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return Configuration
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:05
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">createJwtObject</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">Configuration</span><span class="o">::</span><span class="na">forSymmetricSigner</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="k">new</span> <span class="nx">Sha256</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">            <span class="nx">InMemory</span><span class="o">::</span><span class="na">base64Encoded</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">jwt_secret</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:生成token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $bind 需要在jwt载体(payload)中加入的数据  [&#39;userid&#39;=&gt;1,&#39;xxxx&#39;=&gt;xxxx]
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return string \Lcobucci\JWT\Token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:04
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getToken</span><span class="p">(</span><span class="k">array</span> <span class="nv">$bind</span> <span class="o">=</span> <span class="p">[])</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createJwtObject</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_obj</span>    <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">builder</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">issuedBy</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedBy</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">permittedFor</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">permittedFor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">identifiedBy</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">identifiedBy</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">issuedAt</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedAt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">canOnlyBeUsedAfter</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedAt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">expiresAt</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">expiresAt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">is_array</span><span class="p">(</span><span class="nv">$bind</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="k">empty</span><span class="p">(</span><span class="nv">$bind</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">foreach</span> <span class="p">(</span><span class="nv">$bind</span> <span class="k">as</span> <span class="nv">$k</span> <span class="o">=&gt;</span> <span class="nv">$v</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$jwt_obj</span><span class="o">-&gt;</span><span class="na">withClaim</span><span class="p">(</span><span class="nv">$k</span><span class="p">,</span> <span class="nv">$v</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//签名算法和签名秘钥得到token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">return</span> <span class="nv">$jwt_obj</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">(</span><span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">signer</span><span class="p">(),</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">signingKey</span><span class="p">())</span><span class="o">-&gt;</span><span class="na">toString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:验证token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:04
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyToken</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createJwtObject</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">parser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">parse</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\Exception</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_jwt_id</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">IdentifiedBy</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">identifiedBy</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">setValidationConstraints</span><span class="p">(</span><span class="nv">$validate_jwt_id</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_issued</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">IssuedBy</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">issuedBy</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">setValidationConstraints</span><span class="p">(</span><span class="nv">$validate_issued</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_aud</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PermittedFor</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">permittedFor</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">setValidationConstraints</span><span class="p">(</span><span class="nv">$validate_aud</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//验证是否过期
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$timezone</span>        <span class="o">=</span> <span class="k">new</span> <span class="nx">\DateTimeZone</span><span class="p">(</span><span class="s1">&#39;PRC&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$time</span>            <span class="o">=</span> <span class="k">new</span> <span class="nx">SystemClock</span><span class="p">(</span><span class="nv">$timezone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_jwt_at</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ValidAt</span><span class="p">(</span><span class="nv">$time</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">setValidationConstraints</span><span class="p">(</span><span class="nv">$validate_jwt_at</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_contents</span> <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">validationConstraints</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">validator</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">assert</span><span class="p">(</span><span class="nv">$token</span><span class="p">,</span> <span class="o">...</span><span class="nv">$validate_contents</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">RequiredConstraintsViolated</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:解析token里面的载体数据信息
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:03
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getTokenContent</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createJwtObject</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$token</span>  <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">parser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">parse</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$claims</span> <span class="o">=</span> <span class="nx">json_decode</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$token</span><span class="o">-&gt;</span><span class="na">claims</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toString</span><span class="p">()),</span> <span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\Exception</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">405001</span><span class="p">,</span> <span class="s1">&#39;非法token值！&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$claims</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:验证token是否在刷新有效期内
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:03
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyRefresh</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createJwtObject</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">parser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">parse</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\Exception</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$claims</span> <span class="o">=</span> <span class="nx">json_decode</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$token</span><span class="o">-&gt;</span><span class="na">claims</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toString</span><span class="p">()),</span> <span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 签发时间大于当前服务器时间验证失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;iat&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;iat&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">time</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$claims</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 生效时间大于当前服务器时间验证失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;nbf&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;nbf&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">time</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 当前服务器时间大于过期时间验证失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">isset</span><span class="p">(</span><span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;exp&#39;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nx">time</span><span class="p">()</span> <span class="o">&gt;</span> <span class="nv">$claims</span><span class="p">[</span><span class="s1">&#39;exp&#39;</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:验证签名
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:17
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifySign</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">createJwtObject</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">parser</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">parse</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">\Exception</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_jwt_signer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SignedWith</span><span class="p">(</span><span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">signer</span><span class="p">(),</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">signingKey</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">setValidationConstraints</span><span class="p">(</span><span class="nv">$validate_jwt_signer</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validate_contents</span> <span class="o">=</span> <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">validationConstraints</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$jwt_object</span><span class="o">-&gt;</span><span class="na">validator</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">assert</span><span class="p">(</span><span class="nv">$token</span><span class="p">,</span> <span class="o">...</span><span class="nv">$validate_contents</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">RequiredConstraintsViolated</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">405001</span><span class="p">,</span> <span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">()]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:使Token失效
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return string
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:18
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">invalidate</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:将token加入黑名单
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $token
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/7 16:19
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">addBlacklist</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$token_redis_ex</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTokenContent</span><span class="p">(</span><span class="nv">$token</span><span class="p">)[</span><span class="s1">&#39;exp&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="nx">time</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 设置成功返回true 失败false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$result</span> <span class="o">=</span> <span class="nx">Redis</span><span class="o">::</span><span class="na">setex</span><span class="p">(</span><span class="nv">$token</span><span class="p">,</span> <span class="nv">$token_redis_ex</span><span class="p">,</span> <span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="配置">配置</h3>
<p>在 <code>config</code> 目录下，新建 <code>Jwt</code>配置文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    |--------------------------------------------------------------------------
</span></span></span><span class="line"><span class="cl"><span class="cm">    | Jwt Configuration
</span></span></span><span class="line"><span class="cl"><span class="cm">    |--------------------------------------------------------------------------
</span></span></span><span class="line"><span class="cl"><span class="cm">    |
</span></span></span><span class="line"><span class="cl"><span class="cm">    | lcobucci/jwt is a framework-agnostic PHP library that allows you to
</span></span></span><span class="line"><span class="cl"><span class="cm">    | issue, parse, and validate JSON Web Tokens based on the RFC 7519.
</span></span></span><span class="line"><span class="cl"><span class="cm">    |
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//签发人
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;issuedBy&#39;</span>     <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;APP_NAME&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//受众
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;permittedFor&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;client-user&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//jwt编号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;identifiedBy&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//签发时间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;issuedAt&#39;</span>     <span class="o">=&gt;</span> <span class="k">new</span> <span class="nx">DateTimeImmutable</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//过期时间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;expiresAt&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;+1 hour&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//秘钥
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;jwt_secret&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;zhukangshuai&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h3 id="使用">使用</h3>
<p>在 <code>app\Http\Middleware</code> 目录下，新建 <code>AuthApi.php</code> 文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Middleware</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\Jwt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\User</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Closure</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Redis</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">AuthApi</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">Jwt</span><span class="p">,</span> <span class="nx">ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Description:Handle an incoming request.
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $request
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param Closure $next
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return \Illuminate\Http\JsonResponse|mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Author:zhukang
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @Date:2022/4/8 10:53
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Closure</span> <span class="nv">$next</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//获取token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">bearerToken</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//判断token知否为空
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$token</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4001</span><span class="p">,</span> <span class="s1">&#39;Token is missing!&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//判断redis是否还存在该token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">Redis</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4002</span><span class="p">,</span> <span class="s1">&#39;Login authorization has expired!&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//验证token签名是否合法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">is_array</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifySign</span><span class="p">(</span><span class="nv">$token</span><span class="p">))</span> <span class="o">||</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifySign</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span> <span class="o">!==</span> <span class="k">true</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4004</span><span class="p">,</span> <span class="s1">&#39;The token is invalid, please replace it.&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//判断该token所绑定的用户ID是否真实存在
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$info</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTokenContent</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$user</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="nv">$info</span><span class="p">[</span><span class="s1">&#39;user_id&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$user</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4004</span><span class="p">,</span> <span class="s1">&#39;The token is invalid, please replace it.&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 验证token是否有效
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$verify_res</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyToken</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$verify_res</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 验证token是否在刷新有效期内
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nv">$legal</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyRefresh</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$legal</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4003</span><span class="p">,</span> <span class="s1">&#39;Login authorization has expired!&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nv">$user_data</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTokenContent</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span><span class="c1">// 获取原token中的数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nv">$token</span>     <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">(</span><span class="nv">$user_data</span><span class="p">);</span><span class="c1">// 重新生成token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;token:&#39;</span> <span class="o">.</span> <span class="nv">$token</span><span class="p">);</span><span class="c1">// 设置响应头
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4004</span><span class="p">,</span> <span class="s1">&#39;The token is invalid, please replace it.&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//判断账户状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$user</span><span class="p">)</span> <span class="o">||</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">status</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">([</span><span class="mi">4044</span><span class="p">,</span> <span class="s1">&#39;Account anomaly, please contact CS!&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$next</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>在 <code>AuthController</code> 中使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">loginByTwo</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  	<span class="o">...</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getToken</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;user_id&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;email&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">email</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">success</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;token&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;expires_at&#39;</span> <span class="o">=&gt;</span> <span class="nx">floor</span><span class="p">((</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTokenContent</span><span class="p">(</span><span class="nv">$token</span><span class="p">))[</span><span class="s1">&#39;exp&#39;</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">      <span class="s1">&#39;user&#39;</span>       <span class="o">=&gt;</span> <span class="nv">$user</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>响应结果</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;success&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;code&#34;</span><span class="p">:</span> <span class="mi">200001</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;message&#34;</span><span class="p">:</span> <span class="s2">&#34;操作成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;token&#34;</span><span class="p">:</span> <span class="s2">&#34;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJMYXJhdmVsIiwiYXVkIjoiY2xpZW50LXVzZXIiLCJqdGkiOiJhZG1pbiIsImlhdCI6MTY0OTM4ODMyMi44Mzg1NzIsIm5iZiI6MTY0OTM4ODMyMi44Mzg1NzIsImV4cCI6MTY0OTM5MTkyMi44Mzg1NzIsInVzZXJfaWQiOjEsImVtYWlsIjoiemtwaHBlckAxNjMuY29tIn0.x8G_yyi7l8wvdhAPCiAIUo8HY6IjnXcuHzw7yGvEUUc&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;expires_at&#34;</span><span class="p">:</span> <span class="mi">1649391922</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;user&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;zhukang&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zkphper@163.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;created_at&#34;</span><span class="p">:</span> <span class="s2">&#34;2022-03-29 15:36:49&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;error&#34;</span><span class="p">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel 使用 Sanctum API 授权</title>
			<link>https://blog.gookm.cn/posts/2022/20220218-api-sanctum/</link>
			<pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2022/20220218-api-sanctum/</guid>
			<description>介绍 Laravel Sanctum 为 SPA（单页应用程序）、移动应用程序和基于令牌的、简单的 API 提供轻量级身份验证系统。Sanctum 允许应用程序的每个用户为他们的帐户生成多个 API 令牌。这些令牌可以被授予指定允许令牌执行哪些操作的能力 / 范围。
相关文档：https://learnku.com/docs/laravel/9.x/sanctum/12272
安装 安装 Laravel Sanctum
composer require laravel/sanctum Artisan 命令发布 Sanctum 的配置和迁移文件
php artisan vendor:publish --provider=&amp;#34;Laravel\Sanctum\SanctumServiceProvider&amp;#34; Sanctum 将创建一个数据库表来存储 API 令牌
php artisan migrate 将 Sanctum 的中间件添加到您应用的 app/Http/Kernel.php 文件中的 api 中间件组中
&amp;#39;api&amp;#39; =&amp;gt; [ \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class, &amp;#39;throttle:api&amp;#39;, \Illuminate\Routing\Middleware\SubstituteBindings::class, ], 配置 重写默认模型
执行迁移命令得时候会生成app\Models\PersonalAccessToken.php文件，尽管通常不需要，但您可以自由扩展 Sanctum 内部使用的 PersonalAccessToken 模型。由于生成的表名叫 personal_access_tokens，开发中我们习惯用户表名叫 users，所以我们可以将表名修改为 user_tokens 。
创建 UserToken 模型文件：
php artisan make:model UserToken 模型文件 UserToken.php 内容如下：</description>
			<content type="html"><![CDATA[<p><img src="https://qiniu.zkilm.cn/blog/posts/2022/20220218-api-sanctum.jpg" alt="封面"></p>
<h3 id="介绍">介绍</h3>
<blockquote>
<p><a href="https://github.com/laravel/sanctum">Laravel Sanctum</a> 为 SPA（单页应用程序）、移动应用程序和基于令牌的、简单的 API 提供轻量级身份验证系统。Sanctum 允许应用程序的每个用户为他们的帐户生成多个 API 令牌。这些令牌可以被授予指定允许令牌执行哪些操作的能力 / 范围。</p>
</blockquote>
<p>相关文档：https://learnku.com/docs/laravel/9.x/sanctum/12272</p>
<h3 id="安装">安装</h3>
<ul>
<li>
<p>安装 Laravel Sanctum</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">composer</span> <span class="k">require</span> <span class="nx">laravel</span><span class="o">/</span><span class="nx">sanctum</span>
</span></span></code></pre></div></li>
<li>
<p>Artisan 命令发布 Sanctum 的配置和迁移文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">vendor</span><span class="o">:</span><span class="nx">publish</span> <span class="o">--</span><span class="nx">provider</span><span class="o">=</span><span class="s2">&#34;Laravel\Sanctum\SanctumServiceProvider&#34;</span>
</span></span></code></pre></div></li>
<li>
<p>Sanctum 将创建一个数据库表来存储 API 令牌</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">migrate</span>
</span></span></code></pre></div></li>
<li>
<p>将 Sanctum 的中间件添加到您应用的 <code>app/Http/Kernel.php</code> 文件中的 <code>api</code> 中间件组中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;api&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="nx">\Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;throttle:api&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">\Illuminate\Routing\Middleware\SubstituteBindings</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div></li>
</ul>
<h3 id="配置">配置</h3>
<ul>
<li>
<p>重写默认模型</p>
<p>执行迁移命令得时候会生成app\Models\PersonalAccessToken.php文件，尽管通常不需要，但您可以自由扩展 Sanctum 内部使用的 <code>PersonalAccessToken</code> 模型。由于生成的表名叫 <code>personal_access_tokens</code>，开发中我们习惯用户表名叫 <code>users</code>，所以我们可以将表名修改为 <code>user_tokens</code> 。</p>
<p>创建 UserToken 模型文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">model</span> <span class="nx">UserToken</span>
</span></span></code></pre></div><p>模型文件 <code>UserToken.php</code> 内容如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Models</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Sanctum\PersonalAccessToken</span> <span class="k">as</span> <span class="nx">SanctumPersonalAccessToken</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">DateTimeInterface</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">UserToken</span> <span class="k">extends</span> <span class="nx">SanctumPersonalAccessToken</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 转换时间格式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">protected</span> <span class="k">function</span> <span class="nf">serializeDate</span><span class="p">(</span><span class="nx">DateTimeInterface</span> <span class="nv">$dateTime</span><span class="p">)</span><span class="o">:</span> <span class="nx">string</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$dateTime</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>然后在<code>app/Providers/AuthServiceProvider.php</code> 文件中设置模型名称，您可以通过 Sanctum 提供的 <code>usePersonalAccessTokenModel</code> 方法设置 Sanctum 使用您的访问令牌模型名称。 通常，您应该在应用程序的服务提供器的 <code>boot</code> 方法中调用此方法：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\UserToken</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Sanctum\Sanctum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd"> * 引导应用程序服务。
</span></span></span><span class="line"><span class="cl"><span class="sd"> *
</span></span></span><span class="line"><span class="cl"><span class="sd"> * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd"> */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">registerPolicies</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 设置访问令牌模型名称
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">Sanctum</span><span class="o">::</span><span class="na">usePersonalAccessTokenModel</span><span class="p">(</span><span class="nx">UserToken</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这样重写默认模型就完成了。</p>
</li>
<li>
<p>要开始为用户颁发令牌，你的 User 模型应使用 <code>Laravel\Sanctum\HasApiTokens</code> trait：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Sanctum\HasApiTokens</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">User</span> <span class="k">extends</span> <span class="nx">Authenticatable</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">HasApiTokens</span><span class="p">,</span> <span class="nx">HasFactory</span><span class="p">,</span> <span class="nx">Notifiable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>创建令牌</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/tokens/create&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">createToken</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">token_name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;token&#39;</span> <span class="o">=&gt;</span> <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">plainTextToken</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div></li>
</ul>
<h3 id="自定义验证">自定义验证</h3>
<p>我们在实际开发中，验证规则可能会需要做一些自定义的操作，所以我们可以通过回调函数来进行自定义验证，里面的就可以写一些我们自定义的逻辑内容。</p>
<ul>
<li>
<p>指定验证访问令牌的回调</p>
<p>在 <code>app/Providers/AuthServiceProvider.php</code> 文件中，调用 <code>authenticateAccessTokensUsing</code> 方法指定验证访问令牌的回调。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\UserToken</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Sanctum\Sanctum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd"> * 引导应用程序服务。
</span></span></span><span class="line"><span class="cl"><span class="sd"> *
</span></span></span><span class="line"><span class="cl"><span class="sd"> * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd"> */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">registerPolicies</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 验证访问令牌的回调
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">Sanctum</span><span class="o">::</span><span class="na">authenticateAccessTokensUsing</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span> <span class="k">function</span> <span class="p">(</span><span class="nx">PersonalAccessToken</span> <span class="nv">$accessToken</span><span class="p">,</span> <span class="nx">bool</span> <span class="nv">$isValid</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 你的自定义逻辑
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><blockquote>
<p><code>$accessToken</code> 为 token 信息，tokenable 包含了用户基本信息，token 过期时 tokenable 字段就不会再返回</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">#attributes: array:9 [
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s2">&#34;id&#34;</span> <span class="o">=&gt;</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;tokenable_type&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;App\Models\User&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;tokenable_id&#34;</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;name&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;token&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;23c8f6b3ad9dc564f626caf36fa435679353c47b15ffb071e5fcacdccb5ee705&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;abilities&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;[&#34;</span><span class="o">*</span><span class="s2">&#34;]&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;last_used_at&#34;</span> <span class="o">=&gt;</span> <span class="k">null</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;created_at&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;2022-04-08 16:07:59&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;updated_at&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;2022-04-08 16:07:59&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span></code></pre></div><p><code>$isValid</code> 为 token 有效状态，当 token 未过期时返回 true，否则就返回 false</p>
</blockquote>
</li>
<li>
<p>自定义令牌有效期</p>
<p>Sanctum 可以在 <code>config/sanctum.php</code> 配置文件中通过 <code>expiration</code> 来设置过期时间，单位为分钟，但无法灵活地设置过期时间。</p>
<p>设置短期令牌：</p>
<p>1.创建令牌时，对令牌设置令牌能力 <code>server:limited</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">createToken</span><span class="p">(</span><span class="s1">&#39;token-name&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;server:limited&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">plainTextToken</span><span class="p">;</span>
</span></span></code></pre></div><p>2.在 <code>app/Providers/AuthServiceProvider.php</code> 文件中根据令牌能力设置过期时间</p>
<p><code>如果令牌有效，就将 token 过期时间设置为自定义的过期时间，下面 now ()-&gt;subMinutes (5) 表示有效期为 5 分钟</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"> <span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">registerPolicies</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">     <span class="c1">// 验证访问令牌的回调
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>     <span class="nx">Sanctum</span><span class="o">::</span><span class="na">authenticateAccessTokensUsing</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">         <span class="k">static</span> <span class="k">function</span> <span class="p">(</span><span class="nx">PersonalAccessToken</span> <span class="nv">$accessToken</span><span class="p">,</span> <span class="nx">bool</span> <span class="nv">$isValid</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">             <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$accessToken</span><span class="o">-&gt;</span><span class="na">can</span><span class="p">(</span><span class="s1">&#39;server:limited&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="nv">$isValid</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">             <span class="p">}</span>
</span></span><span class="line"><span class="cl">             <span class="k">return</span> <span class="nv">$isValid</span> <span class="o">&amp;&amp;</span> <span class="nv">$accessToken</span><span class="o">-&gt;</span><span class="na">created_at</span><span class="o">-&gt;</span><span class="na">gt</span><span class="p">(</span><span class="nx">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subMinutes</span><span class="p">(</span><span class="mi">5</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">         <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">);</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>设置一次性访问令牌</p>
<p>1.创建令牌时，对令牌设置令牌能力 <code>server:once</code></p>
<pre tabindex="0"><code>$user-&gt;createToken(&#39;token-name&#39;, [&#39;server:once&#39;])-&gt;plainTextToken;
</code></pre><p>2.在 <code>app/Providers/AuthServiceProvider.php</code> 文件中根据令牌能力设置过期时间</p>
<p><code>如果令牌有效，并且未登陆过，就将 token 设置为失效，即可实现一次性令牌效果</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"> <span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">registerPolicies</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">     <span class="c1">// 验证访问令牌的回调
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>     <span class="nx">Sanctum</span><span class="o">::</span><span class="na">authenticateAccessTokensUsing</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">         <span class="k">static</span> <span class="k">function</span> <span class="p">(</span><span class="nx">PersonalAccessToken</span> <span class="nv">$accessToken</span><span class="p">,</span> <span class="nx">bool</span> <span class="nv">$isValid</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">             <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$accessToken</span><span class="o">-&gt;</span><span class="na">can</span><span class="p">(</span><span class="s1">&#39;server:once&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="nv">$isValid</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">             <span class="p">}</span>
</span></span><span class="line"><span class="cl">             <span class="k">return</span> <span class="nv">$isValid</span> <span class="o">&amp;&amp;</span> <span class="nv">$accessToken</span><span class="o">-&gt;</span><span class="na">last_used_at</span> <span class="o">===</span>  <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">         <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">);</span>
</span></span><span class="line"><span class="cl"> <span class="p">}</span>
</span></span></code></pre></div></li>
</ul>
<h3 id="用法">用法</h3>
<ul>
<li>
<p>为需要token验证的路由加上中间件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">middleware</span><span class="p">([</span><span class="s1">&#39;auth:sanctum&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">group</span><span class="p">(</span><span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/user/info&#39;</span><span class="p">,</span> <span class="p">[</span><span class="nx">UserController</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div></li>
</ul>
<h3 id="问题">问题</h3>
<ul>
<li>
<p>未授权跳登录路由问题(<code>app/Exception/Handler.php</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Throwable</span> <span class="nv">$exception</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="o">...</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 未授权异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">AuthenticationException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_HTTP_UNAUTHORIZED</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="o">...</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nv">$exception</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></div></li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>Laravel 开发 API 初始搭建</title>
			<link>https://blog.gookm.cn/posts/2022/20220115-api-init/</link>
			<pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2022/20220115-api-init/</guid>
			<description>前言 使用 Laravel 开发过不少项目，大部分还是前后端分离的，所以今天就总结归纳下在开发API项目时，Laravel 的前期框架搭建过程！
环境 PHP 8.0.5 (cli) MySQL 8.0.25-0ubuntu0.20.04.1 (Ubuntu) Nginx nginx/1.18.0 (Ubuntu) IDE PhpStorm2020.2 搭建 安装
//默认安装最新版本 composer create-project laravel/laravel newapi //指定版本 composer create-project --prefer-dist laravel/laravel newapi &amp;#34;6.0.*&amp;#34; 配置
数据库（配置根目录下 .env 文件）
DB_CONNECTION=mysql // host地址 DB_HOST=127.0.0.1 // 端口号 DB_PORT=3306 // 数据库名 DB_DATABASE=laravel9 // 用户名 DB_USERNAME=root // 密码 DB_PASSWORD= 时区（配置 config/app.php 文件）
&amp;#39;timezone&amp;#39; =&amp;gt; &amp;#39;PRC&amp;#39;, // 大陆时间 安装扩展包
只列出项目必备的几个，如果有需要可以从下面链接里看一下
下载量最高的 100 个 Laravel 扩展包推荐
代码提示工具(https://github.com/barryvdh/laravel-ide-helper)
//在 dev 环境安装 composer require barryvdh/laravel-ide-helper --dev 语言包(https://github.</description>
			<content type="html"><![CDATA[<p><img src="https://qiniu.zkilm.cn/blog/cover/blue-light.png" alt="封面！"></p>
<h3 id="前言">前言</h3>
<p>使用 <code>Laravel</code> 开发过不少项目，大部分还是前后端分离的，所以今天就总结归纳下在开发API项目时，<code>Laravel</code> 的前期框架搭建过程！</p>
<h3 id="环境">环境</h3>
<ul>
<li>PHP 8.0.5 (cli)</li>
<li>MySQL  8.0.25-0ubuntu0.20.04.1 (Ubuntu)</li>
<li>Nginx  nginx/1.18.0 (Ubuntu)</li>
<li>IDE PhpStorm2020.2</li>
</ul>
<h3 id="搭建">搭建</h3>
<ol>
<li>
<p>安装</p>
<pre tabindex="0"><code>//默认安装最新版本
composer create-project laravel/laravel newapi
//指定版本
composer create-project --prefer-dist laravel/laravel newapi &#34;6.0.*&#34;
</code></pre></li>
<li>
<p>配置</p>
<ul>
<li>
<p>数据库（配置根目录下 <code>.env</code> 文件）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">DB_CONNECTION</span><span class="o">=</span><span class="nx">mysql</span>
</span></span><span class="line"><span class="cl"><span class="c1">// host地址
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">DB_HOST</span><span class="o">=</span><span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 端口号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">DB_PORT</span><span class="o">=</span><span class="mi">3306</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 数据库名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">DB_DATABASE</span><span class="o">=</span><span class="nx">laravel9</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 用户名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">DB_USERNAME</span><span class="o">=</span><span class="nx">root</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 密码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">DB_PASSWORD</span><span class="o">=</span>
</span></span></code></pre></div></li>
<li>
<p>时区（配置 <code>config/app.php</code> 文件）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;PRC&#39;</span><span class="p">,</span> <span class="c1">// 大陆时间
</span></span></span></code></pre></div></li>
</ul>
</li>
<li>
<p>安装扩展包</p>
<p>只列出项目必备的几个，如果有需要可以从下面链接里看一下</p>
<p><a href="https://learnku.com/laravel/t/2530/the-highest-amount-of-downloads-of-the-100-laravel-extensions-recommended">下载量最高的 100 个 Laravel 扩展包推荐</a></p>
<ul>
<li>
<p>代码提示工具(<a href="https://github.com/barryvdh/laravel-ide-helper">https://github.com/barryvdh/laravel-ide-helper</a>)</p>
<pre tabindex="0"><code>//在 dev 环境安装
composer require barryvdh/laravel-ide-helper --dev
</code></pre></li>
<li>
<p>语言包(<a href="https://github.com/overtrue/laravel-lang">https://github.com/overtrue/laravel-lang</a>)</p>
<pre tabindex="0"><code>//一些配置流程参考链接文档
composer require overtrue/laravel-lang:~6.0
</code></pre></li>
<li>
<p>开发调试利器(<a href="https://github.com/barryvdh/laravel-debugbar">https://github.com/barryvdh/laravel-debugbar</a>)</p>
<pre tabindex="0"><code>//在 dev 环境安装
composer require barryvdh/laravel-debugbar --dev
</code></pre></li>
</ul>
</li>
</ol>
<h3 id="封装api接口响应">封装API接口响应</h3>
<p>这里是采用的自定义，没有用 <code>Dingo</code>。我们先在 <code>app</code> 下新建 <code>Helpers</code> 目录。</p>
<ol>
<li>
<p>封装 API 返回的统一消息（ApiResponse）</p>
<p>在 <code>app/Helpers</code> 目录下创建 <code>ApiResponse.php</code> 文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Helpers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ResponseEnum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Exceptions\BusinessException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\JsonResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Pagination\LengthAwarePaginator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Collection</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">trait</span> <span class="nx">ApiResponse</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 成功
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $data
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $codeResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return JsonResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">success</span><span class="p">(</span><span class="nv">$data</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$codeResponse</span><span class="o">=</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">HTTP_OK</span><span class="p">)</span><span class="o">:</span> <span class="nx">JsonResponse</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">jsonResponse</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="nv">$codeResponse</span><span class="p">,</span> <span class="nv">$data</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 失败
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $codeResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $data
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $error
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return JsonResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">fail</span><span class="p">(</span><span class="nv">$codeResponse</span><span class="o">=</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">HTTP_ERROR</span><span class="p">,</span> <span class="nv">$data</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$error</span><span class="o">=</span><span class="k">null</span><span class="p">)</span><span class="o">:</span> <span class="nx">JsonResponse</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">jsonResponse</span><span class="p">(</span><span class="s1">&#39;fail&#39;</span><span class="p">,</span> <span class="nv">$codeResponse</span><span class="p">,</span> <span class="nv">$data</span><span class="p">,</span> <span class="nv">$error</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * json响应
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $status
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $codeResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $data
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $error
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return JsonResponse
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">function</span> <span class="nf">jsonResponse</span><span class="p">(</span><span class="nv">$status</span><span class="p">,</span> <span class="nv">$codeResponse</span><span class="p">,</span> <span class="nv">$data</span><span class="p">,</span> <span class="nv">$error</span><span class="p">)</span><span class="o">:</span> <span class="nx">JsonResponse</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">list</span><span class="p">(</span><span class="nv">$code</span><span class="p">,</span> <span class="nv">$message</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$codeResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;status&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$status</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;code&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nv">$message</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;data&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$data</span> <span class="o">??</span> <span class="k">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;error&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$error</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></div><pre><code>/**
 * 成功分页返回
 * @param $page
 * @return JsonResponse
 */
protected function successPaginate($page): JsonResponse
{
    return $this-&gt;success($this-&gt;paginate($page));
}

private function paginate($page)
{
    if ($page instanceof LengthAwarePaginator){
        return [
            'total'  =&gt; $page-&gt;total(),
            'page'   =&gt; $page-&gt;currentPage(),
            'limit'  =&gt; $page-&gt;perPage(),
            'pages'  =&gt; $page-&gt;lastPage(),
            'list'   =&gt; $page-&gt;items()
        ];
    }
    if ($page instanceof Collection){
        $page = $page-&gt;toArray();
    }
    if (!is_array($page)){
        return $page;
    }
    $total = count($page);
    return [
        'total'  =&gt; $total, //数据总数
        'page'   =&gt; 1, // 当前页码
        'limit'  =&gt; $total, // 每页的数据条数
        'pages'  =&gt; 1, // 最后一页的页码
        'list'   =&gt; $page // 数据
    ];
}

/**
 * 业务异常返回
 * @param array $codeResponse
 * @param string $info
 * @throws BusinessException
 */
public function throwBusinessException(array $codeResponse=ResponseEnum::HTTP_ERROR, string $info = '')
{
    throw new BusinessException($codeResponse, $info);
}
</code></pre>
<p>}</p>
<pre tabindex="0"><code></code></pre></li>
<li>
<p>封装统一状态码（ResponseEnum）</p>
<p>在 <code>app/Helpers</code> 目录下创建 <code>ResponseEnum.php</code> 文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Helpers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">ResponseEnum</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 001 ~ 099 表示系统状态；100 ~ 199 表示授权业务；200 ~ 299 表示用户业务
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 100开头的表示 信息提示，这类状态表示临时的响应
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 100 - 继续
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 101 - 切换协议
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 200表示服务器成功地接受了客户端请求
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">HTTP_OK</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200001</span><span class="p">,</span> <span class="s1">&#39;操作成功&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">HTTP_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200002</span><span class="p">,</span> <span class="s1">&#39;操作失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">HTTP_ACTION_COUNT_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200302</span><span class="p">,</span> <span class="s1">&#39;操作频繁&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_LOGIN_SUCCESS</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200200</span><span class="p">,</span> <span class="s1">&#39;登录成功&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_LOGIN_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200201</span><span class="p">,</span> <span class="s1">&#39;登录失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_LOGOUT_SUCCESS</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200202</span><span class="p">,</span> <span class="s1">&#39;退出登录成功&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_LOGOUT_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200203</span><span class="p">,</span> <span class="s1">&#39;退出登录失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_REGISTER_SUCCESS</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200104</span><span class="p">,</span> <span class="s1">&#39;注册成功&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_SERVICE_REGISTER_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">200105</span><span class="p">,</span> <span class="s1">&#39;注册失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">USER_ACCOUNT_REGISTERED</span> <span class="o">=</span> <span class="p">[</span><span class="mi">23001</span><span class="p">,</span> <span class="s1">&#39;账号已注册&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 300开头的表示服务器重定向,指向的别的地方，客户端浏览器必须采取更多操作来实现请求
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 302 - 对象已移动。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 304 - 未修改。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 307 - 临时重定向。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 400开头的表示客户端错误请求错误，请求不到数据，或者找不到等等
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 400 - 错误的请求
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">CLIENT_NOT_FOUND_HTTP_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">400001</span><span class="p">,</span> <span class="s1">&#39;请求失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">CLIENT_PARAMETER_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">400200</span><span class="p">,</span> <span class="s1">&#39;参数错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">CLIENT_CREATED_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">400201</span><span class="p">,</span> <span class="s1">&#39;数据已存在&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">CLIENT_DELETED_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">400202</span><span class="p">,</span> <span class="s1">&#39;数据不存在&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 401 - 访问被拒绝
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">CLIENT_HTTP_UNAUTHORIZED</span> <span class="o">=</span> <span class="p">[</span><span class="mi">401001</span><span class="p">,</span> <span class="s1">&#39;授权失败，请先登录&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">CLIENT_HTTP_UNAUTHORIZED_EXPIRED</span> <span class="o">=</span> <span class="p">[</span><span class="mi">401200</span><span class="p">,</span> <span class="s1">&#39;账号信息已过期，请重新登录&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">CLIENT_HTTP_UNAUTHORIZED_BLACKLISTED</span> <span class="o">=</span> <span class="p">[</span><span class="mi">401201</span><span class="p">,</span> <span class="s1">&#39;账号在其他设备登录，请重新登录&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 403 - 禁止访问
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 404 - 没有找到文件或目录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">CLIENT_NOT_FOUND_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">404001</span><span class="p">,</span> <span class="s1">&#39;没有找到该页面&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 405 - 用来访问本页面的 HTTP 谓词不被允许（方法不被允许）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">CLIENT_METHOD_HTTP_TYPE_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">405001</span><span class="p">,</span> <span class="s1">&#39;HTTP请求类型错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 406 - 客户端浏览器不接受所请求页面的 MIME 类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 407 - 要求进行代理身份验证
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 412 - 前提条件失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 413 – 请求实体太大
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 414 - 请求 URI 太长
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 415 – 不支持的媒体类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 416 – 所请求的范围无法满足
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 417 – 执行失败
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 423 – 锁定的错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 500开头的表示服务器错误，服务器因为代码，或者什么原因终止运行
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 服务端操作错误码：500 ~ 599 开头，后拼接 3 位
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// 500 - 内部服务器错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">SYSTEM_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500001</span><span class="p">,</span> <span class="s1">&#39;服务器错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SYSTEM_UNAVAILABLE</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500002</span><span class="p">,</span> <span class="s1">&#39;服务器正在维护，暂不可用&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SYSTEM_CACHE_CONFIG_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500003</span><span class="p">,</span> <span class="s1">&#39;缓存配置错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SYSTEM_CACHE_MISSED_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500004</span><span class="p">,</span> <span class="s1">&#39;缓存未命中&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SYSTEM_CONFIG_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500005</span><span class="p">,</span> <span class="s1">&#39;系统配置错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 业务操作错误码（外部服务或内部服务调用）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="no">SERVICE_REGISTER_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500101</span><span class="p">,</span> <span class="s1">&#39;注册失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SERVICE_LOGIN_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500102</span><span class="p">,</span> <span class="s1">&#39;登录失败&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SERVICE_LOGIN_ACCOUNT_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500103</span><span class="p">,</span> <span class="s1">&#39;账号或密码错误&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="no">SERVICE_USER_INTEGRAL_ERROR</span> <span class="o">=</span> <span class="p">[</span><span class="mi">500200</span><span class="p">,</span> <span class="s1">&#39;积分不足&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//501 - 页眉值指定了未实现的配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//502 - Web 服务器用作网关或代理服务器时收到了无效响应
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//503 - 服务不可用。这个错误代码为 IIS 6.0 所专用
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//504 - 网关超时
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//505 - HTTP 版本不受支持
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="cm">/*-------------------------------------------------------------------------------------------*/</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>创建业务异常捕获 Exception 文件</p>
<p>在 <code>app/Exceptions</code> 目录下创建 <code>BusinessException.php</code> 文件用于业务异常的抛出</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Exceptions</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">BusinessException</span> <span class="k">extends</span> <span class="nx">Exception</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 业务异常构造函数
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $codeResponse 状态码
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $info 自定义返回信息，不为空时会替换掉codeResponse 里面的message文字信息
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="k">array</span> <span class="nv">$codeResponse</span><span class="p">,</span> <span class="nv">$info</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nv">$code</span><span class="p">,</span> <span class="nv">$message</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$codeResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$info</span> <span class="o">?:</span> <span class="nv">$message</span><span class="p">,</span> <span class="nv">$code</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>自定义返回异常</p>
<p>修改 <code>app/Exceptions</code> 目录下的 <code>Handler.php</code> 文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Exceptions</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ResponseEnum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Auth\AuthenticationException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Foundation\Exceptions\Handler</span> <span class="k">as</span> <span class="nx">ExceptionHandler</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Validation\ValidationException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Symfony\Component\HttpKernel\Exception\NotFoundHttpException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Throwable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Handler</span> <span class="k">extends</span> <span class="nx">ExceptionHandler</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * A list of the exception types that are not reported.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var array&lt;int, class-string&lt;Throwable&gt;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$dontReport</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * A list of the inputs that are never flashed for validation exceptions.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var array&lt;int, string&gt;
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$dontFlash</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;current_password&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password_confirmation&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Register the exception handling callbacks for the application.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">register</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">reportable</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nx">Throwable</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Throwable</span> <span class="nv">$exception</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 如果是生产环境则返回500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;app.debug&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">SYSTEM_ERROR</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 请求类型错误异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">MethodNotAllowedHttpException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_METHOD_HTTP_TYPE_ERROR</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 参数校验错误异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">ValidationException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_PARAMETER_ERROR</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 路由不存在异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">NotFoundHttpException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_NOT_FOUND_ERROR</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 未授权异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">AuthenticationException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_HTTP_UNAUTHORIZED</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 自定义错误异常抛出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">BusinessException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;status&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;fail&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;code&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$exception</span><span class="o">-&gt;</span><span class="na">getCode</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="nv">$exception</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;data&#39;</span>    <span class="o">=&gt;</span> <span class="k">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;error&#39;</span>  <span class="o">=&gt;</span> <span class="k">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nv">$exception</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>创建控制器基类</p>
<p>在 <code>app/Http/controller</code> 目录下创建一个 <code>BaseController.php</code> 作为 Api 的基类，然后在 <code>BaseController.php</code> 这个基类中继承 Controller，并引入封装 API 返回的统一消息（ApiResponse）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">BaseController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// API接口响应
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">use</span> <span class="nx">ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//返回成功信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">success</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//返回失败信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">fail</span><span class="p">(</span><span class="nv">$codeResponse</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//抛出异常
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nv">$codeResponse</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//分页
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">successPaginate</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span></span></code></pre></div></li>
</ol>
<h3 id="统一表单参数输入校验">统一表单参数输入校验</h3>
<ol>
<li>
<p>创建</p>
<p>在 <code>App\Helpers</code> 目录下创建 <code>VerifyRequestInput.php</code> 文件，并引入 <code>ApiResponse</code> ，这样可以更便捷地校验表单参数，其中 <code>verifyData</code> 方法可以自定义校验字段及规则</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Helpers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ResponseEnum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Exceptions\BusinessException</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Validation\Rule</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">trait</span> <span class="nx">VerifyRequestInput</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证ID
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyId</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="s1">&#39;integer|digits_between:1,20&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证是否为整数
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyInteger</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="s1">&#39;integer&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证是否为数字
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyNumeric</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="s1">&#39;numeric&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证是否为字符串
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyString</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证是否为布尔值
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyBoolean</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="s1">&#39;boolean&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 验证是否为枚举
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param null $default
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $enum
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyEnum</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="o">=</span><span class="k">null</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$enum</span><span class="o">=</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="nx">Rule</span><span class="o">::</span><span class="na">in</span><span class="p">(</span><span class="nv">$enum</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 自定义校验参数
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $key string 字段
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $default string 默认值
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $rule string 验证规则
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed|null
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @throws BusinessException
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">verifyData</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">,</span> <span class="nv">$rule</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$value</span> <span class="o">=</span> <span class="nx">request</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">input</span><span class="p">(</span><span class="nv">$key</span><span class="p">,</span> <span class="nv">$default</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validator</span> <span class="o">=</span> <span class="nx">\Validator</span><span class="o">::</span><span class="na">make</span><span class="p">([</span><span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">],</span> <span class="p">[</span><span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$rule</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">is_null</span><span class="p">(</span><span class="nv">$value</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_PARAMETER_ERROR</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">fails</span><span class="p">()){</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">throwBusinessException</span><span class="p">(</span><span class="nx">ResponseEnum</span><span class="o">::</span><span class="na">CLIENT_PARAMETER_ERROR</span><span class="p">,</span> <span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">errors</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>使用</p>
<p>需要在 <code>App\Http\Controllers\BaseController</code> 这个控制器基类中引入 <code>VerifyRequestInput</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\VerifyRequestInput</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 验证表单参数输入请求
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">use</span> <span class="nx">VerifyRequestInput</span><span class="p">;</span>
</span></span></code></pre></div></li>
<li>
<p>案例</p>
<p>有一个 <code>index</code> 方法，我们在获取参数时使用 <code>verifyId</code> 来校验请求的参数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">verifyId</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>测试</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">http</span><span class="o">://</span><span class="nx">newapi</span><span class="o">.</span><span class="nx">test</span><span class="o">/</span><span class="nx">api</span><span class="o">/</span><span class="nx">user</span><span class="o">/</span><span class="nx">index</span><span class="o">?</span><span class="nx">id</span><span class="o">=</span><span class="nx">asds</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;status&#34;</span><span class="o">:</span> <span class="s2">&#34;fail&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;code&#34;</span><span class="o">:</span> <span class="mi">400200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;message&#34;</span><span class="o">:</span> <span class="s2">&#34;The id must be an integer.&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;data&#34;</span><span class="o">:</span> <span class="k">null</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;error&#34;</span><span class="o">:</span> <span class="k">null</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
</ol>
<h3 id="创建服务层-service">创建服务层 Service</h3>
<p>如果项目比较小，接口较少，业务逻辑放在 controller 和 model 层就可以。否则就需要创建一个 Service 层来存放一些较复杂些的业务逻辑。</p>
<ol>
<li>
<p>在 <code>app</code> 目录下，创建名叫 <code>Services</code> 的文件夹</p>
</li>
<li>
<p>在新创建的 <code>Services</code> 目录下创建基类 <code>BaseService.php</code> ，采用单例模式避免对内存造成浪费，也方便调用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Services</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Helpers\ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">BaseService</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 引入api统一返回消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">use</span> <span class="nx">ApiResponse</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">static</span> <span class="nv">$instance</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">getInstance</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="k">static</span><span class="o">::</span><span class="nv">$instance</span> <span class="nx">instanceof</span> <span class="k">static</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">self</span><span class="o">::</span><span class="nv">$instance</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">static</span><span class="o">::</span><span class="nv">$instance</span> <span class="o">=</span> <span class="k">new</span> <span class="k">static</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">self</span><span class="o">::</span><span class="nv">$instance</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(){}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="fm">__clone</span><span class="p">(){}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>使用</p>
<ul>
<li>
<p>在 Service 层创建一个 <code>UserService.php</code> 的文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Services</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Services\BaseService</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">UserService</span> <span class="k">extends</span> <span class="nx">BaseService</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 获取用户信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getUserInfo</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;nickname&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span> <span class="o">=&gt;</span> <span class="mi">18</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>在控制器 <code>UserController</code> 中增加一个 <code>info</code> 方法，并调用服务层中的 getUserInfo () 方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Services\UserService</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">info</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$user</span> <span class="o">=</span> <span class="nx">UserService</span><span class="o">::</span><span class="na">getInstance</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getUserInfo</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">success</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div></li>
<li>
<p>返回</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;status&#34;</span><span class="o">:</span> <span class="s2">&#34;success&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;code&#34;</span><span class="o">:</span> <span class="mi">200001</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;message&#34;</span><span class="o">:</span> <span class="s2">&#34;操作成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;data&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;id&#34;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;promise&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;email&#34;</span><span class="o">:</span> <span class="s2">&#34;phper@163.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;token&#34;</span><span class="o">:</span> <span class="s2">&#34;4|vPaja1IIpyoRmvAGxF5dgpqiuwWVbQBrumFg5pQW&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;error&#34;</span><span class="o">:</span> <span class="k">null</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>​</p>
</li>
</ul>
</li>
</ol>
]]></content>
		</item>
		
		<item>
			<title>RSA加解密🔒</title>
			<link>https://blog.gookm.cn/posts/2021/20211215-rsa/</link>
			<pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20211215-rsa/</guid>
			<description>生成RSA公私钥 代码 class RsaHandler { /** * 过期时间 * @var int|mixed */ protected $expire; /** * 密钥密码 * @var string */ protected $pass_phrase; /** * 密钥保存路径 * @var string */ protected $path; /** * 私钥 * @var string */ protected $private_key; /** * 时间戳 * @var integer */ protected $time; /** * 基础配置 * @var string[] */ public $dn = [ &amp;#34;countryName&amp;#34; =&amp;gt; &amp;#34;CN&amp;#34;, &amp;#34;stateOrProvinceName&amp;#34; =&amp;gt; &amp;#34;ChongQing&amp;#34;, &amp;#34;localityName&amp;#34; =&amp;gt; &amp;#34;China&amp;#34;, &amp;#34;organizationName&amp;#34; =&amp;gt; &amp;#34;The Brain Room Limited&amp;#34;, &amp;#34;organizationalUnitName&amp;#34; =&amp;gt; &amp;#34;PHP Documentation Team&amp;#34;, &amp;#34;commonName&amp;#34; =&amp;gt; &amp;#34;Rancy Bruce&amp;#34;, &amp;#34;emailAddress&amp;#34; =&amp;gt; &amp;#34;rancy@rancy.</description>
			<content type="html"><![CDATA[<h3 id="生成rsa公私钥">生成RSA公私钥</h3>
<ul>
<li>代码</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">RsaHandler</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 过期时间
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var int|mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$expire</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 密钥密码
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var string
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$pass_phrase</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 密钥保存路径
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var string
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$path</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 私钥
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var string
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$private_key</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 时间戳
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var integer
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$time</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 基础配置
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var string[]
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$dn</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;countryName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;CN&#34;</span><span class="p">,</span> <span class="s2">&#34;stateOrProvinceName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;ChongQing&#34;</span><span class="p">,</span> <span class="s2">&#34;localityName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;China&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;organizationName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;The Brain Room Limited&#34;</span><span class="p">,</span> <span class="s2">&#34;organizationalUnitName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;PHP Documentation Team&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;commonName&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;Rancy Bruce&#34;</span><span class="p">,</span> <span class="s2">&#34;emailAddress&#34;</span> <span class="o">=&gt;</span> <span class="s2">&#34;rancy@rancy.top&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 密钥配置
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//指定应该使用多少位来生成私钥  512 1024  2048  4096等
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s2">&#34;private_key_bits&#34;</span> <span class="o">=&gt;</span> <span class="mi">1024</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//选择在创建CSR时应该使用哪些扩展。可选值有 OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH, OPENSSL_KEYTYPE_RSA 或 OPENSSL_KEYTYPE_EC. 默认值是 OPENSSL_KEYTYPE_RSA.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s2">&#34;private_key_type&#34;</span> <span class="o">=&gt;</span> <span class="nx">OPENSSL_KEYTYPE_RSA</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * OpensslServer constructor.
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $path 保存路径
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param int $expire 有效期天数
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $pass_phrase 密钥密码
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$path</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$expire</span> <span class="o">=</span> <span class="mi">365</span><span class="p">,</span> <span class="nv">$pass_phrase</span> <span class="o">=</span> <span class="s1">&#39;rancy&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span> <span class="o">=</span> <span class="nv">$path</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">expire</span> <span class="o">=</span> <span class="nv">$expire</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pass_phrase</span> <span class="o">=</span> <span class="nv">$pass_phrase</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">time</span> <span class="o">=</span> <span class="nx">time</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 生成密钥对
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">generate</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 生成公钥私钥资源
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$res</span> <span class="o">=</span> <span class="nx">openssl_pkey_new</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 导出私钥 $this-&gt;private_key
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">openssl_pkey_export</span><span class="p">(</span><span class="nv">$res</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">private_key</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pass_phrase</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//  导出公钥 $pubKey
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$pubKey</span> <span class="o">=</span> <span class="nx">openssl_pkey_get_details</span><span class="p">(</span><span class="nv">$res</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//var_dump($this-&gt;private_key);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">//var_dump($pubKey);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="nx">file_put_contents</span><span class="p">(</span><span class="nx">public_path</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="si">}</span><span class="s2">/</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">time</span><span class="si">}</span><span class="s2">_private.key&#34;</span><span class="p">),</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">private_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">file_put_contents</span><span class="p">(</span><span class="nx">public_path</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="si">}</span><span class="s2">/</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">time</span><span class="si">}</span><span class="s2">_public.key&#34;</span><span class="p">),</span> <span class="nv">$pubKey</span><span class="p">[</span><span class="s2">&#34;key&#34;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 签名证书
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">cert</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//基于$dn生成新的 CSR （证书签名请求）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$csr</span> <span class="o">=</span> <span class="nx">openssl_csr_new</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">dn</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">private_key</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//根据配置自己对证书进行签名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$csr_sign</span> <span class="o">=</span> <span class="nx">openssl_csr_sign</span><span class="p">(</span><span class="nv">$csr</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">private_key</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">expire</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//将公钥证书存储到一个变量 $csr_key，由 PEM 编码格式命名。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">openssl_x509_export</span><span class="p">(</span><span class="nv">$csr_sign</span><span class="p">,</span> <span class="nv">$csr_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//将私钥存储到名为的出 PKCS12 文件格式的字符串。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">openssl_pkcs12_export</span><span class="p">(</span><span class="nv">$csr_sign</span><span class="p">,</span> <span class="nv">$private_pkcs12</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">private_key</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pass_phrase</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//var_dump($csr_key);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">//var_dump($private_pkcs12);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="nx">file_put_contents</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="si">}</span><span class="s2">/</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">time</span><span class="si">}</span><span class="s2">_cert.cer&#34;</span><span class="p">,</span> <span class="nv">$csr_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">file_put_contents</span><span class="p">(</span><span class="s2">&#34;</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="si">}</span><span class="s2">/</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">time</span><span class="si">}</span><span class="s2">_private.pfx&#34;</span><span class="p">,</span> <span class="nv">$private_pkcs12</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>调用</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">generateRsa</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$openssl</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">RsaHandler</span><span class="p">(</span><span class="s1">&#39;certs&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$openssl</span><span class="o">-&gt;</span><span class="na">generate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$openssl</span><span class="o">-&gt;</span><span class="na">cert</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="rsa加解密">RSA加解密</h3>
<ul>
<li>代码</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Rsa</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="nv">$_config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;public_key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;private_key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$private_key_filepath</span><span class="p">,</span> <span class="nv">$public_key_filepath</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_config</span><span class="p">[</span><span class="s1">&#39;private_key&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getContents</span><span class="p">(</span><span class="nv">$private_key_filepath</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_config</span><span class="p">[</span><span class="s1">&#39;public_key&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getContents</span><span class="p">(</span><span class="nv">$public_key_filepath</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 获取文件内容
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param $file_path string
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool|string
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">function</span> <span class="nf">_getContents</span><span class="p">(</span><span class="nv">$file_path</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">file_exists</span><span class="p">(</span><span class="nv">$file_path</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span> <span class="p">(</span><span class="s1">&#39;密钥或公钥的文件路径错误&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">file_get_contents</span><span class="p">(</span><span class="nv">$file_path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 获取私钥
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool|resource     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span> 
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">function</span> <span class="nf">_getPrivateKey</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$priv_key</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_config</span><span class="p">[</span><span class="s1">&#39;private_key&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nx">openssl_pkey_get_private</span><span class="p">(</span><span class="nv">$priv_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 获取公钥
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool|resource     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>    
</span></span><span class="line"><span class="cl">    <span class="k">private</span> <span class="k">function</span> <span class="nf">_getPublicKey</span><span class="p">()</span> <span class="p">{</span>        
</span></span><span class="line"><span class="cl">        <span class="nv">$public_key</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_config</span><span class="p">[</span><span class="s1">&#39;public_key&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">openssl_pkey_get_public</span><span class="p">(</span><span class="nv">$public_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 私钥加密
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $data     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return null|string     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">privEncrypt</span><span class="p">(</span><span class="nv">$data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">is_string</span><span class="p">(</span><span class="nv">$data</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>       
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">openssl_private_encrypt</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$encrypted</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getPrivateKey</span><span class="p">())</span> <span class="o">?</span> <span class="nx">base64_encode</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">)</span> <span class="o">:</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 公钥加密     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $data     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return null|string     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">publicEncrypt</span><span class="p">(</span><span class="nv">$data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">is_string</span><span class="p">(</span><span class="nv">$data</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>        
</span></span><span class="line"><span class="cl">        <span class="p">}</span>        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">openssl_public_encrypt</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$encrypted</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getPublicKey</span><span class="p">())</span> <span class="o">?</span> <span class="nx">base64_encode</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">)</span> <span class="o">:</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 私钥解密     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $encrypted     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return null     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">privDecrypt</span><span class="p">(</span><span class="nv">$encrypted</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">is_string</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>        
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="nx">openssl_private_decrypt</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">),</span> <span class="nv">$decrypted</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getPrivateKey</span><span class="p">()))</span> <span class="o">?</span> <span class="nv">$decrypted</span> <span class="o">:</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>    
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @uses 公钥解密     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string $encrypted     
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return null     
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">publicDecrypt</span><span class="p">(</span><span class="nv">$encrypted</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">is_string</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>        
</span></span><span class="line"><span class="cl">        <span class="p">}</span>        
</span></span><span class="line"><span class="cl">           <span class="k">return</span> <span class="p">(</span><span class="nx">openssl_public_decrypt</span><span class="p">(</span><span class="nx">base64_decode</span><span class="p">(</span><span class="nv">$encrypted</span><span class="p">),</span> <span class="nv">$decrypted</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_getPublicKey</span><span class="p">()))</span> <span class="o">?</span> <span class="nv">$decrypted</span> <span class="o">:</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>调用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$private_key</span> <span class="o">=</span> <span class="s1">&#39;private_key.pem&#39;</span><span class="p">;</span> <span class="c1">// 私钥路径
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$public_key</span> <span class="o">=</span> <span class="s1">&#39;rsa_public_key.pem&#39;</span><span class="p">;</span> <span class="c1">// 公钥路径
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$rsa</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Rsa</span><span class="p">(</span><span class="nv">$private_key</span><span class="p">,</span> <span class="nv">$public_key</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$origin_data</span> <span class="o">=</span> <span class="s1">&#39;这是一条测试数据&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$ecryption_data</span> <span class="o">=</span> <span class="nv">$rsa</span><span class="o">-&gt;</span><span class="na">privEncrypt</span><span class="p">(</span><span class="nv">$origin_data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$decryption_data</span> <span class="o">=</span> <span class="nv">$rsa</span><span class="o">-&gt;</span><span class="na">publicDecrypt</span><span class="p">(</span><span class="nv">$ecryption_data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="s1">&#39;私钥加密后的数据为：&#39;</span> <span class="o">.</span> <span class="nv">$ecryption_data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="s1">&#39;公钥解密后的数据为: &#39;</span> <span class="o">.</span> <span class="nv">$decryption_data</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">PHP_EOL</span><span class="p">;</span>
</span></span></code></pre></div><blockquote>
<p>说明：公钥、私钥都可以加密，也都可以解密。其中：用公钥加密需要私钥解密，称为“加密”。由于私钥是不公开的，确保了内容的保密，没有私钥无法获得内容；用私钥加密需要公钥解密，称为“签名”。由于公钥是公开的，任何人都可以解密内容，但只能用发布者的公钥解密，验证了内容是该发布者发出的。</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>Laravel 表单验证封装💪</title>
			<link>https://blog.gookm.cn/posts/2021/20211119-laravel-formrequest/</link>
			<pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20211119-laravel-formrequest/</guid>
			<description>新建「表单验证基类」 新建「表单验证基类」 app/Http/Requests/FormRequest.php &amp;lt;?php namespace App\Http\Requests; use Illuminate\Foundation\Http\FormRequest as BaseFormRequest; class FormRequest extends BaseFormRequest { use SceneValidator; /** * Determine if the user is authorized to make this request. * * @return bool */ public function authorize() { return true; } } 新建场景验证类 新建 app/Http/Requests/SceneValidator.php &amp;lt;?php namespace App\Http\Requests; use Illuminate\Contracts\Validation\{Factory, Validator}; trait SceneValidator { protected $scene = null; protected $onlyRule = []; protected $autoValidate = true; /** * Validate. * * @param string|array $scene */ public function validate($scene = &amp;#39;&amp;#39;) { if (!</description>
			<content type="html"><![CDATA[<h3 id="新建表单验证基类">新建「表单验证基类」</h3>
<ul>
<li>新建「表单验证基类」 <code>app/Http/Requests/FormRequest.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"> <span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Requests</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Foundation\Http\FormRequest</span> <span class="k">as</span> <span class="nx">BaseFormRequest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">FormRequest</span> <span class="k">extends</span> <span class="nx">BaseFormRequest</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">SceneValidator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Determine if the user is authorized to make this request.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return bool
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">authorize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="新建场景验证类">新建场景验证类</h3>
<ul>
<li>新建 <code>app/Http/Requests/SceneValidator.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Requests</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Contracts\Validation\</span><span class="p">{</span><span class="nx">Factory</span><span class="p">,</span> <span class="nx">Validator</span><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">trait</span> <span class="nx">SceneValidator</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$scene</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$onlyRule</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$autoValidate</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Validate.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param string|array $scene
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">validate</span><span class="p">(</span><span class="nv">$scene</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">autoValidate</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nx">is_array</span><span class="p">(</span><span class="nv">$scene</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">onlyRule</span> <span class="o">=</span> <span class="nv">$scene</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">scene</span> <span class="o">=</span> <span class="nv">$scene</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handleValidate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 覆盖 ValidatesWhenResolvedTrait-&gt;validateResolved
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">validateResolved</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">method_exists</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;autoValidate&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">autoValidate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">([</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;autoValidate&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">autoValidate</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handleValidate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Handle validate.
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="nf">handleValidate</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">parent</span><span class="o">::</span><span class="na">validateResolved</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 定义 FormRequest-&gt;getValidatorInstance 下 validator 验证器
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param Factory $factory
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return Validator
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">validator</span><span class="p">(</span><span class="nx">Factory</span> <span class="nv">$factory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$validationData</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">isMethod</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">)</span> <span class="o">?</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">()</span> <span class="o">:</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$factory</span><span class="o">-&gt;</span><span class="na">make</span><span class="p">(</span><span class="nv">$validationData</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getRules</span><span class="p">(),</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">messages</span><span class="p">(),</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">attributes</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Get rules.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getRules</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handleScene</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">([</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;rules&#39;</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Handle scene.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $rules
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="nf">handleScene</span><span class="p">(</span><span class="k">array</span> <span class="nv">$rules</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">onlyRule</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handleRules</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">onlyRule</span><span class="p">,</span> <span class="nv">$rules</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">empty</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">scene</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">method_exists</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;scene&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$scene</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">container</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">([</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;scene&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nx">array_key_exists</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">scene</span><span class="p">,</span> <span class="nv">$scene</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">handleRules</span><span class="p">(</span><span class="nv">$scene</span><span class="p">[</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">scene</span><span class="p">],</span> <span class="nv">$rules</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$rules</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Handle rules.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $sceneRules
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param array $rules
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="nf">handleRules</span><span class="p">(</span><span class="k">array</span> <span class="nv">$sceneRules</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$rules</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$result</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$sceneRules</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nx">is_numeric</span><span class="p">(</span><span class="nv">$key</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">array_key_exists</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nv">$rules</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$result</span><span class="p">[</span><span class="nv">$value</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$rules</span><span class="p">[</span><span class="nv">$value</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$result</span><span class="p">[</span><span class="nv">$key</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="新建请求类">新建「请求类」</h3>
<ul>
<li>新建「请求类」 <code>app/Http/Requests/PermissionRequest.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Requests</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Validation\Rule</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">PermissionRequest</span> <span class="k">extends</span> <span class="nx">FormRequest</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$autoValidate</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Get the validation rules that apply to the request.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">rules</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//全部的验证规则
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="s1">&#39;between:2,16&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;int&#39;</span><span class="p">,</span> <span class="nx">Rule</span><span class="o">::</span><span class="na">in</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">])],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;user_ids&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;array&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;role_id&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;integer&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;user_id&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;integer&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;action_codes&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;array&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Get custom attributes for validator errors.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">attributes</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;角色名称&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;角色类型&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;user_ids&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;用户ID集&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;role_id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;角色ID&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;user_id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;用户ID&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;action_codes&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;行为编码集&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * scene.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">scene</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleCreate&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;type&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleMemberAdd&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;user_ids&#39;</span><span class="p">,</span> <span class="s1">&#39;role_id&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleMemberDel&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;role_id&#39;</span><span class="p">,</span> <span class="s1">&#39;user_id&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleMemberList&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;role_id&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleActionEdit&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;role_id&#39;</span><span class="p">,</span> <span class="s1">&#39;action_codes&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;roleActionList&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;role_id&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;allActionMarkList&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;role_id&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="编辑控制器">编辑控制器</h3>
<ul>
<li>编辑 <code>app/Http/Controllers/PermissionController.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Http\Requests\PermissionRequest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">roleCreate</span><span class="p">(</span><span class="nx">PermissionRequest</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//参数验证
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="s1">&#39;roleCreate&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="o">...</span>
</span></span></code></pre></div><h3 id="编辑配置文件">编辑配置文件</h3>
<ul>
<li>编辑 <code>config/app.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="s1">&#39;locale&#39;</span><span class="w"> </span><span class="l">=&gt; &#39;zn&#39;,</span><span class="w">
</span></span></span></code></pre></div><ul>
<li>或安装 <code>overtrue/laravel-lang</code> - 语言包</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">composer require &#34;overtrue/laravel-lang:~3.0&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 1. 配置 config/app.php</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">Illuminate\Translation\TranslationServiceProvider::class</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">替换</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">Overtrue\LaravelLang\TranslationServiceProvider::class</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># 2. 配置 config/app.php</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="s1">&#39;locale&#39;</span><span class="w"> </span><span class="l">=&gt; &#39;zh-CN&#39;</span><span class="w">
</span></span></span></code></pre></div><h3 id="编辑异常处理文件">编辑异常处理文件</h3>
<ul>
<li>
<p>编辑 <code>app/Exception/Handler.php</code></p>
</li>
<li>
<p>Laravel 6.*</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">report</span><span class="p">(</span><span class="nx">Exception</span> <span class="nv">$exception</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">parent</span><span class="o">::</span><span class="na">report</span><span class="p">(</span><span class="nv">$exception</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Exception</span> <span class="nv">$exception</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$commonHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">CommonHandler</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 验证错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">is</span><span class="p">(</span><span class="s2">&#34;api/*&#34;</span><span class="p">))</span> <span class="p">{</span><span class="c1">// 我们仅仅处理 api的异常，所以这里要排除下其他前缀路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">//如果抛出的异常是 DefineValidationException 的实例，我们就可以确定该异常是表单验证异常
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">\Illuminate\Validation\ValidationException</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="c1">// 下面是你需要包装的数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nv">$message</span> <span class="o">=</span> <span class="nv">$exception</span><span class="o">-&gt;</span><span class="na">validator</span><span class="o">-&gt;</span><span class="na">errors</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span><span class="c1">// 更好的获取错误的方法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">authMessage</span><span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="nv">$message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//处理请求方法异常
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">MethodNotAllowedHttpException</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">authMessage</span><span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="nv">$$exception</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//处理内部错误异常
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">((</span><span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">FatalThrowableError</span> <span class="o">||</span> <span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">\ErrorException</span> <span class="o">||</span> <span class="nv">$exception</span> <span class="nx">instanceof</span> <span class="nx">QueryException</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;APP_ENV&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="s1">&#39;local&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">authMessage</span><span class="p">(</span><span class="mi">400</span><span class="p">,</span> <span class="nv">$$exception</span><span class="o">-&gt;</span><span class="na">getMessage</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="k">parent</span><span class="o">::</span><span class="na">render</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nv">$exception</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>Laravel 8.*</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">register</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">reportable</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nx">Throwable</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">//捕捉表单验证错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">renderable</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nx">ValidationException</span> <span class="nv">$exception</span><span class="p">,</span> <span class="nv">$request</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$message</span> <span class="o">=</span> <span class="nv">$exception</span><span class="o">-&gt;</span><span class="na">validator</span><span class="o">-&gt;</span><span class="na">errors</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span><span class="c1">// 更好的获取错误的方法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;status&#39;</span> <span class="o">=&gt;</span> <span class="mi">40000</span><span class="p">,</span> <span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$message</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="p">[]]);</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="post-请求测试">POST 请求测试</h3>
<ul>
<li>POST 请求 <code>/permission/role/create</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="mi">40000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;msg&#34;</span><span class="p">:</span> <span class="s2">&#34;角色名称 必须在 2 到 16 个字符之间&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>监控服务器异常与重启</title>
			<link>https://blog.gookm.cn/posts/2021/20210909-restart-lnmp/</link>
			<pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20210909-restart-lnmp/</guid>
			<description>在一些特定的场景下，我们希望通过脚本去自动监控服务器的状态是否出现异常，如果出现异常，则自动进行重启，替代人手去重启。
PHP与Nginx 查看服务进程数 通过查看服务器相关进程数，来判断服务器是否正常运行，脚本 service-restart.sh 如下：
# ! /bin/sh ###查看fpm服务是否运行 phpfpm_procnum=`ps -ef|grep &amp;#34;php-fpm&amp;#34;|grep -v grep|wc -l` if [ $phpfpm_procnum -eq 0 ] then echo &amp;#34;restart php-fpm...&amp;#34; systemctl restart php-fpm &amp;gt;&amp;gt; /var/log/listen_service_start.log 2&amp;gt;&amp;amp;1 fi ###查看nginx服务是否运行 nginx_procnum=`ps -ef|grep &amp;#34;nginx&amp;#34;|grep -v grep|wc -l` if [ $nginx_procnum -eq 0 ] then echo &amp;#34;restart nginx...&amp;#34; systemctl restart nginx &amp;gt;&amp;gt; /var/log/listen_service_start.log 2&amp;gt;&amp;amp;1 fi 查看服务器响应 通过 curl 服务器地址，根据响应信息判断是否出现异常，脚本 nginx404.php 如下：
&amp;lt;?php $url = &amp;#39;https://test.com&amp;#39;; $cmd = &amp;#39;systemctl restart php-fpm&amp;#39;; for ($i = 0; $i &amp;lt; 5; $i++) { $exec = &amp;#34;curl connect-timeout 3 -I $url 2&amp;gt;/dev/null&amp;#34;; $res = shell_exec($exec); if (stripos($res, &amp;#39;404 Not Found&amp;#39;) !</description>
			<content type="html"><![CDATA[<p>在一些特定的场景下，我们希望通过脚本去自动监控服务器的状态是否出现异常，如果出现异常，则自动进行重启，替代人手去重启。</p>
<h2 id="php与nginx">PHP与Nginx</h2>
<h3 id="查看服务进程数">查看服务进程数</h3>
<p>通过查看服务器相关进程数，来判断服务器是否正常运行，脚本 <code>service-restart.sh</code> 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># ! /bin/sh</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="c1">###查看fpm服务是否运行</span>
</span></span><span class="line"><span class="cl"><span class="nv">phpfpm_procnum</span><span class="o">=</span><span class="sb">`</span>ps -ef<span class="p">|</span>grep <span class="s2">&#34;php-fpm&#34;</span><span class="p">|</span>grep -v grep<span class="p">|</span>wc -l<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$phpfpm_procnum</span> -eq <span class="m">0</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="k">then</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;restart php-fpm...&#34;</span>
</span></span><span class="line"><span class="cl">        systemctl restart php-fpm &gt;&gt; /var/log/listen_service_start.log 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="c1">###查看nginx服务是否运行</span>
</span></span><span class="line"><span class="cl"><span class="nv">nginx_procnum</span><span class="o">=</span><span class="sb">`</span>ps -ef<span class="p">|</span>grep <span class="s2">&#34;nginx&#34;</span><span class="p">|</span>grep -v grep<span class="p">|</span>wc -l<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$nginx_procnum</span> -eq <span class="m">0</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="k">then</span> 
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;restart nginx...&#34;</span>
</span></span><span class="line"><span class="cl">        systemctl restart nginx &gt;&gt; /var/log/listen_service_start.log 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></div><h3 id="查看服务器响应">查看服务器响应</h3>
<p>通过 <code>curl</code> 服务器地址，根据响应信息判断是否出现异常，脚本 <code>nginx404.php</code> 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="o">=</span> <span class="s1">&#39;https://test.com&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$cmd</span> <span class="o">=</span> <span class="s1">&#39;systemctl restart php-fpm&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$exec</span> <span class="o">=</span> <span class="s2">&#34;curl connect-timeout 3 -I </span><span class="si">$url</span><span class="s2"> 2&gt;/dev/null&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$res</span> <span class="o">=</span> <span class="nx">shell_exec</span><span class="p">(</span><span class="nv">$exec</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">stripos</span><span class="p">(</span><span class="nv">$res</span><span class="p">,</span> <span class="s1">&#39;404 Not Found&#39;</span><span class="p">)</span> <span class="o">!==</span> <span class="k">false</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">shell_exec</span><span class="p">(</span><span class="nv">$cmd</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">exit</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="supervisor">Supervisor</h2>
<h3 id="判断命令响应状态">判断命令响应状态</h3>
<p>通过执行查看 <code>Supervisor</code> 的状态命令，判断是否为 <code>RUNNING</code>，脚本 <code>check-supervisor.sh</code> 如下</p>
<p><strong>重启指定</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>    
</span></span><span class="line"><span class="cl">smart-retail-api_00<span class="o">=</span><span class="sb">`</span>supervisorctl status smart-retail-api:smart-retail-api_00<span class="sb">`</span>
</span></span><span class="line"><span class="cl">smart-retail-api_00<span class="o">=</span><span class="sb">`</span>supervisorctl status smart-retail-api:smart-retail-api_01<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$smart</span><span class="s2">-retail-api_00&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;RUNNING&#34;</span> <span class="o">]]</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;smart-retail-api_00 RUNNING&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;smart-retail-api:smart-retail-api_00 starting...&#34;</span>
</span></span><span class="line"><span class="cl">    supervisorctl start smart-retail-api:smart-retail-api_00
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$smart</span><span class="s2">-retail-api_01&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;RUNNING&#34;</span> <span class="o">]]</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;smart-retail-api_01 RUNNING&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;smart-retail-api:smart-retail-api_00 starting...&#34;</span>
</span></span><span class="line"><span class="cl">    supervisorctl start smart-retail-api:smart-retail-api_01
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></div><p><strong>重启全部</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>    
</span></span><span class="line"><span class="cl"><span class="nv">supervisor_status</span><span class="o">=</span><span class="sb">`</span>supervisorctl status<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$supervisor_status</span><span class="s2">&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;FATAL&#34;</span> <span class="o">]]</span> <span class="o">||</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$supervisor_status</span><span class="s2">&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;STOPPED&#34;</span> <span class="o">]]</span>
</span></span><span class="line"><span class="cl"><span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;supervisor restarting all...&#34;</span>
</span></span><span class="line"><span class="cl">    supervisorctl restart all
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;supervisor RUNNING&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></div><h2 id="配置任务调度">配置任务调度</h2>
<p><strong>每分钟检测</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">crontab -e
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">* * * * * bash /root/service-restart.sh
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>百万级数据导入 Elasticsearch 😌</title>
			<link>https://blog.gookm.cn/posts/2021/20210901-python-es/</link>
			<pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20210901-python-es/</guid>
			<description>涉及知识点 Python 读取CSV文件 Elasticsearch 导入json文件 本文目标 完成超过100M的SCV文件上传到ES 导语 如何将100w条记录同步到Es？
Kibana 有个 Data Visualizer 可以直接上传 CSV 文件，但是有个限制是文件不能大于100M。
那么对于大于100M的 CSV 文件我们该如何进行上传到ES呢？
我这里采用的解决方案是通过Es的 Bulk API 进行导入。
参考地址：https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html
但是 Bulk API 对上传的JSON文件大小也会有限制，限制为50M，所以我们会对JSON文件进行拆分，保证每个单JSON文件不超过50M。
整体包括两个步骤：
步骤一：对总CSV文件进行json格式化，格式化为指定的json格式，需要符合Bulk API的上传要求 步骤二：对json文件进行拆分存储，保证单json文件大小不超过50M Py脚本 Python 代码如下(test.py)：
import csv from collections import defaultdict, OrderedDict import json import time import argparse import os parser = argparse.ArgumentParser(description=&amp;#39;自定义CLI传参&amp;#39;) parser.add_argument(&amp;#39;--csv_filename&amp;#39;, &amp;#39;-cf&amp;#39;, help=&amp;#39;csv_filename 选取指定CSV文件名，必要参数&amp;#39;, required=True) parser.add_argument(&amp;#39;--json_dirname&amp;#39;, &amp;#39;-jd&amp;#39;, help=&amp;#39;json_dirname 将作为JSON文件目录名，必要参数&amp;#39;, required=True) args = parser.parse_args() start_time=time.time() csv_filename=args.csv_filename csv_filename=csv_filename.strip() json_dirname=args.json_dirname json_dirname=json_dirname.</description>
			<content type="html"><![CDATA[<h3 id="涉及知识点">涉及知识点</h3>
<ul>
<li><code>Python</code> 读取CSV文件</li>
<li><code>Elasticsearch</code> 导入json文件</li>
</ul>
<h3 id="本文目标">本文目标</h3>
<ul>
<li>完成超过100M的SCV文件上传到ES</li>
</ul>
<h3 id="导语">导语</h3>
<p>如何将<strong>100w</strong>条记录同步到Es？</p>
<p><code>Kibana</code> 有个 <code>Data Visualizer</code> 可以直接上传 <code>CSV</code> 文件，但是有个限制是文件不能大于100M。</p>
<p>那么对于大于100M的 <code>CSV</code> 文件我们该如何进行上传到ES呢？</p>
<p>我这里采用的解决方案是通过Es的 <code>Bulk API</code> 进行导入。</p>
<p>参考地址：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html</a></p>
<p>但是 <code>Bulk API</code> 对上传的JSON文件大小也会有限制，限制为50M，所以我们会对JSON文件进行拆分，保证每个单JSON文件不超过50M。</p>
<p>整体包括两个步骤：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">步骤一：对总CSV文件进行json格式化，格式化为指定的json格式，需要符合Bulk API的上传要求
</span></span><span class="line"><span class="cl">步骤二：对json文件进行拆分存储，保证单json文件大小不超过50M
</span></span></code></pre></div><h3 id="py脚本">Py脚本</h3>
<p><code>Python</code> 代码如下(test.py)：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">import</span> <span class="nx">csv</span>
</span></span><span class="line"><span class="cl"><span class="nx">from</span> <span class="nx">collections</span> <span class="nx">import</span> <span class="nx">defaultdict</span><span class="p">,</span> <span class="nx">OrderedDict</span>
</span></span><span class="line"><span class="cl"><span class="nx">import</span> <span class="nx">json</span>
</span></span><span class="line"><span class="cl"><span class="nx">import</span> <span class="nx">time</span>
</span></span><span class="line"><span class="cl"><span class="nx">import</span> <span class="nx">argparse</span>
</span></span><span class="line"><span class="cl"><span class="nx">import</span> <span class="nx">os</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">parser</span> <span class="o">=</span> <span class="nx">argparse</span><span class="o">.</span><span class="nx">ArgumentParser</span><span class="p">(</span><span class="nx">description</span><span class="o">=</span><span class="s1">&#39;自定义CLI传参&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">parser</span><span class="o">.</span><span class="nx">add_argument</span><span class="p">(</span><span class="s1">&#39;--csv_filename&#39;</span><span class="p">,</span> <span class="s1">&#39;-cf&#39;</span><span class="p">,</span> <span class="nx">help</span><span class="o">=</span><span class="s1">&#39;csv_filename 选取指定CSV文件名，必要参数&#39;</span><span class="p">,</span> <span class="nx">required</span><span class="o">=</span><span class="k">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">parser</span><span class="o">.</span><span class="nx">add_argument</span><span class="p">(</span><span class="s1">&#39;--json_dirname&#39;</span><span class="p">,</span> <span class="s1">&#39;-jd&#39;</span><span class="p">,</span> <span class="nx">help</span><span class="o">=</span><span class="s1">&#39;json_dirname 将作为JSON文件目录名，必要参数&#39;</span><span class="p">,</span> <span class="nx">required</span><span class="o">=</span><span class="k">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">args</span> <span class="o">=</span> <span class="nx">parser</span><span class="o">.</span><span class="nx">parse_args</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">start_time</span><span class="o">=</span><span class="nx">time</span><span class="o">.</span><span class="nx">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nx">csv_filename</span><span class="o">=</span><span class="nx">args</span><span class="o">.</span><span class="nx">csv_filename</span>
</span></span><span class="line"><span class="cl"><span class="nx">csv_filename</span><span class="o">=</span><span class="nx">csv_filename</span><span class="o">.</span><span class="nx">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nx">json_dirname</span><span class="o">=</span><span class="nx">args</span><span class="o">.</span><span class="nx">json_dirname</span>
</span></span><span class="line"><span class="cl"><span class="nx">json_dirname</span><span class="o">=</span><span class="nx">json_dirname</span><span class="o">.</span><span class="nx">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">i</span><span class="o">=</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="nx">with</span> <span class="nx">open</span><span class="p">(</span><span class="nx">csv_filename</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="nx">encoding</span><span class="o">=</span><span class="s1">&#39;UTF-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="nx">csvfile</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">reader</span> <span class="o">=</span> <span class="nx">csv</span><span class="o">.</span><span class="nx">DictReader</span><span class="p">(</span><span class="nx">csvfile</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;CSV转JSON中...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="nx">row</span> <span class="nx">in</span> <span class="nx">reader</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">        <span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nx">str1</span><span class="o">=</span><span class="s1">&#39;{&#34;index&#34;: {&#34;_index&#34;: &#34;index_test&#34;, &#34;_type&#34;: &#34;_doc&#34;}}&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">json_str</span> <span class="o">=</span> <span class="nx">json</span><span class="o">.</span><span class="nx">dumps</span><span class="p">(</span><span class="nx">row</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">json_name</span><span class="o">=</span><span class="nx">str</span><span class="p">(</span><span class="nx">int</span><span class="p">(</span><span class="nx">i</span><span class="o">/</span><span class="mi">100000</span><span class="p">))</span><span class="o">+</span><span class="s1">&#39;.json&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">with</span> <span class="nx">open</span><span class="p">(</span><span class="nx">os</span><span class="o">.</span><span class="nx">path</span><span class="o">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">json_dirname</span><span class="p">,</span><span class="nx">json_name</span><span class="p">),</span> <span class="s1">&#39;a+&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="nx">json_file</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">            <span class="nx">json_file</span><span class="o">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">str1</span><span class="o">+</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="nx">json_file</span><span class="o">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">json_str</span><span class="o">+</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;CSV转JSON已完成&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">filePath</span> <span class="o">=</span> <span class="s1">&#39;/yourpath/test/&#39;</span><span class="o">+</span><span class="nx">json_dirname</span>
</span></span><span class="line"><span class="cl"><span class="nx">file_arr</span><span class="o">=</span><span class="nx">os</span><span class="o">.</span><span class="nx">listdir</span><span class="p">(</span><span class="nx">filePath</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">new_file_arr</span><span class="o">=</span><span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="nx">file</span> <span class="nx">in</span> <span class="nx">file_arr</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="nx">file_key</span><span class="o">=</span><span class="nx">file</span><span class="o">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">file_key</span><span class="o">=</span><span class="nx">file_key</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">new_file_arr</span><span class="p">[</span><span class="nx">int</span><span class="p">(</span><span class="nx">file_key</span><span class="p">)]</span><span class="o">=</span><span class="nx">file</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">new_file_arr</span><span class="o">=</span><span class="nx">sorted</span><span class="p">(</span><span class="nx">new_file_arr</span><span class="o">.</span><span class="nx">keys</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;============================执行Elasticsearch===============================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="nx">json_num</span> <span class="nx">in</span> <span class="nx">new_file_arr</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[&#39;</span><span class="o">+</span><span class="nx">str</span><span class="p">(</span><span class="nx">json_num</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;.json]处理中...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nx">curl_cmd</span><span class="o">=</span><span class="s2">&#34;curl -X POST -u name:pwd &#39;http://localhost:9200/_bulk?filter_path=items.*.error?pretty&#39; -H &#39;Content-Type: application/json&#39; --data-binary @/yourpath/test/&#34;</span><span class="o">+</span><span class="nx">json_dirname</span><span class="o">+</span><span class="s1">&#39;/&#39;</span><span class="o">+</span><span class="nx">str</span><span class="p">(</span><span class="nx">json_num</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;.json&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">tmpres</span> <span class="o">=</span> <span class="nx">os</span><span class="o">.</span><span class="nx">popen</span><span class="p">(</span><span class="nx">curl_cmd</span><span class="p">)</span><span class="o">.</span><span class="nx">readlines</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;===========================================================================&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">end_time</span><span class="o">=</span><span class="nx">time</span><span class="o">.</span><span class="nx">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nx">diff_time</span><span class="o">=</span><span class="nx">end_time</span> <span class="o">-</span> <span class="nx">start_time</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;信息:一共处理[&#39;</span><span class="o">+</span> <span class="nx">str</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="o">+</span><span class="s1">&#39;]条记录.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;耗时:&#39;</span><span class="o">+</span><span class="nx">str</span><span class="p">(</span><span class="nx">round</span><span class="p">(</span><span class="nx">diff_time</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="s1">&#39;秒.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">print</span><span class="p">(</span><span class="s1">&#39;Successful！&#39;</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="sh脚本">Sh脚本</h3>
<p>配置一个shell脚本运行(test_job.sh)：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nv">csv_filename</span><span class="o">=</span><span class="nv">$1</span>
</span></span><span class="line"><span class="cl"><span class="nv">json_dirname</span><span class="o">=</span><span class="s2">&#34;test_json_&#34;</span><span class="k">$(</span>date <span class="s2">&#34;+%Y%m%d&#34;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$json_dirname</span>  <span class="o">]</span><span class="p">;</span><span class="k">then</span>
</span></span><span class="line"><span class="cl">  mkdir <span class="nv">$json_dirname</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">python3 /yourpath/test/test.py -cf <span class="nv">$csv_filename</span> -jd <span class="nv">$json_dirname</span>
</span></span></code></pre></div><h3 id="功能测试">功能测试</h3>
<p>测试如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">&gt;bash test_job.sh test.csv
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">CSV转JSON中...
</span></span><span class="line"><span class="cl"><span class="nv">CSV转JSON已完成</span>
</span></span><span class="line"><span class="cl"><span class="o">============================</span><span class="nv">执行Elasticsearch</span><span class="o">===============================</span>
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<span class="o">[</span>0.json<span class="o">]</span>处理中...
</span></span><span class="line"><span class="cl">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span></span><span class="line"><span class="cl">                                 Dload  Upload   Total   Spent    Left  Speed
</span></span><span class="line"><span class="cl"><span class="m">100</span> 30.5M    <span class="m">0</span>     <span class="m">2</span>  <span class="m">100</span> 30.5M      <span class="m">0</span>  3000k  0:00:10  0:00:10 --:--:--     <span class="m">0</span>
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<span class="o">[</span>1.json<span class="o">]</span>处理中...
</span></span><span class="line"><span class="cl">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span></span><span class="line"><span class="cl">                                 Dload  Upload   Total   Spent    Left  Speed
</span></span><span class="line"><span class="cl"><span class="m">100</span> 30.5M    <span class="m">0</span>     <span class="m">2</span>  <span class="m">100</span> 30.5M      <span class="m">0</span>  3399k  0:00:09  0:00:09 --:--:--     <span class="m">0</span>
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<span class="o">[</span>10.json<span class="o">]</span>处理中...
</span></span><span class="line"><span class="cl">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span></span><span class="line"><span class="cl">                                 Dload  Upload   Total   Spent    Left  Speed
</span></span><span class="line"><span class="cl"><span class="m">100</span>   <span class="m">322</span>  <span class="m">100</span>     <span class="m">2</span>  <span class="m">100</span>   <span class="m">320</span>    <span class="m">340</span>  <span class="m">54468</span> --:--:-- --:--:-- --:--:-- <span class="nv">64000</span>
</span></span><span class="line"><span class="cl"><span class="o">===========================================================================</span>
</span></span><span class="line"><span class="cl">信息:一共处理<span class="o">[</span>1000000<span class="o">]</span>条记录.
</span></span><span class="line"><span class="cl">耗时:132.14秒.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Successful！
</span></span></code></pre></div><blockquote>
<p>注意：这里中文可能出现编码不对，所以加了 <code>UTF-8</code>，<code>Python</code> 版本最好升级到v3以上，避免踩坑。</p>
</blockquote>
<p>其他参考：</p>
<p><a href="https://www.lfhacks.com/tech/python-read-specific-row-csv">https://www.lfhacks.com/tech/python-read-specific-row-csv</a></p>
<p><a href="https://www.lfhacks.com/tech/elasticsearch-bulk-from-excel">https://www.lfhacks.com/tech/elasticsearch-bulk-from-excel</a></p>
]]></content>
		</item>
		
		<item>
			<title>Elasticsearch 在 Laravel 中的使用👍</title>
			<link>https://blog.gookm.cn/posts/2021/20210823-laravel-es/</link>
			<pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20210823-laravel-es/</guid>
			<description>本文目标 学会在 Laravel 中安装 Elasticsearch。 创建索引。 简单查询。 安装 composer 包 composer require elasticsearch/elasticsearch &amp;#39;~7.0&amp;#39; 配置 config/database.php # Elasticsearch Config Info &amp;#39;elasticsearch&amp;#39; =&amp;gt; [ // Elasticsearch 支持多台服务器负载均衡，因此这里是一个数组 &amp;#39;hosts&amp;#39; =&amp;gt; explode(&amp;#39;,&amp;#39;, env(&amp;#39;ES_HOSTS&amp;#39;)), &amp;#39;username&amp;#39; =&amp;gt; env(&amp;#39;ES_USERNAME&amp;#39;), &amp;#39;password&amp;#39; =&amp;gt; env(&amp;#39;ES_PASSWORD&amp;#39;), ], 初始化 Elasticsearch 对象 // 注册一个名为 es 的单例 $this-&amp;gt;app-&amp;gt;singleton(&amp;#39;es&amp;#39;, function () { // 从配置文件读取 Elasticsearch 服务器列表 $builder = ESClientBuilder::create()-&amp;gt;setHosts(config(&amp;#39;database.elasticsearch.hosts&amp;#39;)) -&amp;gt;setBasicAuthentication(config(&amp;#39;database.elasticsearch.username&amp;#39;),config(&amp;#39;database.elasticsearch.password&amp;#39;)); // 如果是开发环境 if (app()-&amp;gt;environment() === &amp;#39;local&amp;#39;) { // 配置日志，Elasticsearch 的请求和返回数据将打印到日志文件中，方便我们调试 $builder-&amp;gt;setLogger(app(&amp;#39;log&amp;#39;)-&amp;gt;driver()); } return $builder-&amp;gt;build(); }); 创建索引 curl -XPUT -u name:pwd http://ip:9200/user_behavior?</description>
			<content type="html"><![CDATA[<p><img src="https://qiniu.zkilm.cn/image/aJXCpPH5dKc4Grq0Jg2d3pJjL23P4BnUcPRvTQGm.jpeg" alt="简单生活，热爱一切！"></p>
<h3 id="本文目标">本文目标</h3>
<ul>
<li>学会在 <code>Laravel</code> 中安装 <code>Elasticsearch</code>。</li>
<li>创建索引。</li>
<li>简单查询。</li>
</ul>
<h3 id="安装-composer-包">安装 <code>composer</code> 包</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require elasticsearch/elasticsearch <span class="s1">&#39;~7.0&#39;</span>
</span></span></code></pre></div><h3 id="配置-configdatabasephp">配置 <code>config/database.php</code></h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1"># Elasticsearch Config Info
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="s1">&#39;elasticsearch&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Elasticsearch 支持多台服务器负载均衡，因此这里是一个数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;hosts&#39;</span> <span class="o">=&gt;</span> <span class="nx">explode</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">,</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ES_HOSTS&#39;</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ES_USERNAME&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ES_PASSWORD&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><h3 id="初始化-elasticsearch-对象">初始化 <code>Elasticsearch</code> 对象</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// 注册一个名为 es 的单例
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">singleton</span><span class="p">(</span><span class="s1">&#39;es&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 从配置文件读取 Elasticsearch 服务器列表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$builder</span> <span class="o">=</span> <span class="nx">ESClientBuilder</span><span class="o">::</span><span class="na">create</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">setHosts</span><span class="p">(</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;database.elasticsearch.hosts&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="o">-&gt;</span><span class="na">setBasicAuthentication</span><span class="p">(</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;database.elasticsearch.username&#39;</span><span class="p">),</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;database.elasticsearch.password&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 如果是开发环境
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="nx">app</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">environment</span><span class="p">()</span> <span class="o">===</span> <span class="s1">&#39;local&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 配置日志，Elasticsearch 的请求和返回数据将打印到日志文件中，方便我们调试
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">setLogger</span><span class="p">(</span><span class="nx">app</span><span class="p">(</span><span class="s1">&#39;log&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">driver</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">build</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><h3 id="创建索引">创建索引</h3>
<pre tabindex="0"><code>curl -XPUT -u name:pwd http://ip:9200/user_behavior?pretty
</code></pre><h3 id="创建索引结构">创建索引结构</h3>
<pre tabindex="0"><code>curl -H&#39;Content-Type: application/json&#39;  -XPUT -u name:pwd http://ip:9200/user_behavior/_mapping/?pretty -d&#39;{
  &#34;properties&#34;: {
    &#34;open_id&#34;: { &#34;type&#34;: &#34;text&#34;, &#34;store&#34;:true }, 
    &#34;imp_date&#34;: { &#34;type&#34;: &#34;text&#34;, &#34;store&#34;:true }, 
    &#34;first_login&#34;: { &#34;type&#34;: &#34;text&#34;,&#34;store&#34;:true }
    }
  }
}&#39;
</code></pre><h3 id="测试写入数据">测试写入数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">app</span><span class="p">(</span><span class="s1">&#39;es&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">index</span><span class="p">([</span><span class="s1">&#39;index&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;user_behavior&#39;</span><span class="p">,</span> <span class="s1">&#39;body&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;open_id&#39;</span><span class="o">=&gt;</span><span class="nx">md5</span><span class="p">(</span><span class="nx">time</span><span class="p">()),</span><span class="s1">&#39;imp_date&#39;</span><span class="o">=&gt;</span><span class="p">(</span><span class="nx">int</span><span class="p">)</span><span class="nx">date</span><span class="p">(</span><span class="s1">&#39;Ymd&#39;</span><span class="p">),</span><span class="s1">&#39;first_login&#39;</span><span class="o">=&gt;</span><span class="p">(</span><span class="nx">int</span><span class="p">)</span><span class="nx">date</span><span class="p">(</span><span class="s1">&#39;Ymd&#39;</span><span class="p">)]])</span>
</span></span></code></pre></div><h3 id="查询数据">查询数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$params</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;index&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;user_behavior&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;_source&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;imp_date&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;body&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;query&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;bool&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;filter&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;range&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;imp_date&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;gte&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;20210120&#39;</span><span class="p">,</span> <span class="s1">&#39;lte&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;20210430&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                    <span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;size&#39;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//&#39;collapse&#39; =&gt; [&#39;field&#39; =&gt; &#39;open_id&#39;],
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;aggs&#39;</span><span class="o">=&gt;</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="cm">/*&#39;my_count&#39;=&gt;[
</span></span></span><span class="line"><span class="cl"><span class="cm">                &#39;value_count&#39;=&gt;[&#39;field&#39; =&gt; &#39;open_id&#39;]
</span></span></span><span class="line"><span class="cl"><span class="cm">            ],*/</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;distinct_open_id&#39;</span><span class="o">=&gt;</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;cardinality&#39;</span><span class="o">=&gt;</span><span class="p">[</span><span class="s1">&#39;field&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;open_id&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;es&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">search</span><span class="p">(</span><span class="nv">$params</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$results</span><span class="p">[</span><span class="s1">&#39;aggregations&#39;</span><span class="p">][</span><span class="s1">&#39;distinct_open_id&#39;</span><span class="p">][</span><span class="s1">&#39;value&#39;</span><span class="p">];</span>
</span></span></code></pre></div><p>另外可参考文章：<a href="https://blog.junphp.com/details/325.jsp">https://blog.junphp.com/details/325.jsp</a></p>
]]></content>
		</item>
		
		<item>
			<title>Homestead(ubuntu)&#43;Laravel 使用 RabbitMQ</title>
			<link>https://blog.gookm.cn/posts/2021/20210121-laravel-rabbitmq/</link>
			<pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2021/20210121-laravel-rabbitmq/</guid>
			<description>安装 erlang erlang 是 RabbitMQ 的依赖。首先执行 sudo apt-get update 然后执行 sudo apt-get install erlang 安装完毕后，输入 erl 查看 erlang 版本，出现如下提示则表示安装成功： Erlang/OTP 20 [erts-9.2] [source] [64-bit] [smp:1:1] [ds:1:1:10] [async-threads:10] [kernel-poll:false] Eshell V9.2 (abort with ^G) 1&amp;gt; 然后退出 erlang 命令行：按下 ctrl+c，然后输入 a 即可。 安装 RabbitMq sudo apt-get install rabbitmq-server 安装完毕后，查看 RabbitMQ 状态： sudo rabbitmqctl status # 附： # 启动RabbitMQ： service rabbitmq-server start # 停止RabbitMQ： service rabbitmq-server stop # 重启RabbitMQ： service rabbitmq-server restart 配置 RabbitMQ 执行命令，启动 RabbitMQ 插件 sudo rabbitmq-plugins enable rabbitmq_management 添加用户 RabbitMQ，格式：rabbitmqctl add_user 用户名 密码 rabbitmqctl add_user admin admin 给予用户管理员权限 sudo rabbitmqctl set_user_tags admin administrator 为用户设置读写权限 sudo rabbitmqctl set_permissions -p / admin &amp;#34;.</description>
			<content type="html"><![CDATA[<h3 id="安装-erlang">安装 erlang</h3>
<ul>
<li><code>erlang</code> 是 <code>RabbitMQ</code> 的依赖。首先执行</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get update
</span></span></code></pre></div><ul>
<li>然后执行</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get install erlang
</span></span></code></pre></div><ul>
<li>安装完毕后，输入 <code>erl</code> 查看 <code>erlang</code> 版本，出现如下提示则表示安装成功：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Erlang/OTP <span class="m">20</span> <span class="o">[</span>erts-9.2<span class="o">]</span> <span class="o">[</span>source<span class="o">]</span> <span class="o">[</span>64-bit<span class="o">]</span> <span class="o">[</span>smp:1:1<span class="o">]</span> <span class="o">[</span>ds:1:1:10<span class="o">]</span> <span class="o">[</span>async-threads:10<span class="o">]</span> <span class="o">[</span>kernel-poll:false<span class="o">]</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">Eshell V9.2  <span class="o">(</span>abort with ^G<span class="o">)</span>
</span></span><span class="line"><span class="cl">1&gt;
</span></span></code></pre></div><ul>
<li>然后退出 <code>erlang</code> 命令行：按下 ctrl+c，然后输入 a 即可。</li>
</ul>
<h3 id="安装-rabbitmq">安装 RabbitMq</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get install rabbitmq-server
</span></span></code></pre></div><ul>
<li>安装完毕后，查看 RabbitMQ 状态：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo rabbitmqctl status
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="c1"># 附：</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 启动RabbitMQ： service rabbitmq-server start</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 停止RabbitMQ： service rabbitmq-server stop </span>
</span></span><span class="line"><span class="cl"><span class="c1"># 重启RabbitMQ： service rabbitmq-server restart </span>
</span></span></code></pre></div><h3 id="配置-rabbitmq">配置 RabbitMQ</h3>
<ul>
<li>执行命令，启动 <code>RabbitMQ</code> 插件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo rabbitmq-plugins <span class="nb">enable</span> rabbitmq_management
</span></span></code></pre></div><ul>
<li>添加用户 <code>RabbitMQ</code>，格式：rabbitmqctl add_user 用户名 密码</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rabbitmqctl add_user admin admin
</span></span></code></pre></div><ul>
<li>给予用户管理员权限</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo rabbitmqctl set_user_tags admin administrator
</span></span></code></pre></div><ul>
<li>为用户设置读写权限</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo rabbitmqctl set_permissions -p / admin <span class="s2">&#34;.*&#34;</span> <span class="s2">&#34;.*&#34;</span> <span class="s2">&#34;.*&#34;</span>
</span></span></code></pre></div><ul>
<li>打开 <code>RabbitMQ</code> 后台</li>
</ul>
<pre tabindex="0"><code>浏览器中输入：http:// 服务器 ip+:15672, 例如我的是：192.168.10.10:15672/
</code></pre><ul>
<li>15672 端口默认是关闭的，因此需要打开</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">1. sudo apt-get install iptables
</span></span><span class="line"><span class="cl">2. sudo iptables -I INPUT -p tcp --dport <span class="m">15672</span> -j ACCEPT
</span></span></code></pre></div><h3 id="运行环境ubuntu安装-amqp-扩展">运行环境（ubuntu）安装 amqp 扩展</h3>
<ul>
<li>这些扩展是运行必须，可以类比为 mongodb,redis 扩展。分别执行以下指令</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get -y install gcc make autoconf libc-dev pkg-config
</span></span><span class="line"><span class="cl">sudo apt-get -y install libssl-dev
</span></span><span class="line"><span class="cl">sudo apt-get -y install librabbitmq-dev
</span></span></code></pre></div><ul>
<li>在这里安装可能会遇到一些小问题，遇事不决就执行：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt-get update
</span></span><span class="line"><span class="cl">//时间可能会需要很久，我执行等它运行的时候大概花了一个小时
</span></span><span class="line"><span class="cl">sudo apt-get upgrade
</span></span></code></pre></div><ul>
<li>以上的扩展安装完成后执行指令安装 <code>amqp</code> 扩展：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo pecl install amqp
</span></span></code></pre></div><ul>
<li>安装过程中会提示</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="m">28</span> <span class="nb">source</span> files, building
</span></span><span class="line"><span class="cl">running: phpize
</span></span><span class="line"><span class="cl">Configuring <span class="k">for</span>:
</span></span><span class="line"><span class="cl">PHP Api Version:         <span class="m">20170718</span>
</span></span><span class="line"><span class="cl">Zend Module Api No:      <span class="m">20170718</span>
</span></span><span class="line"><span class="cl">Zend Extension Api No:   <span class="m">320170718</span>
</span></span><span class="line"><span class="cl">Set the path to librabbitmq install prefix <span class="o">[</span>autodetect<span class="o">]</span> :
</span></span></code></pre></div><ul>
<li>回车即可，等待安装完成：
<code>You should add &quot;extension=amqp.so&quot; to php.ini</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo -s
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">extension</span><span class="o">=</span>amqp.so &gt;&gt; /etc/php/7.2/cli/php.ini
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">extension</span><span class="o">=</span>amqp.so &gt;&gt; /etc/php/7.2/fpm/php.ini
</span></span><span class="line"><span class="cl">sudo service php7.2-fpm restart
</span></span></code></pre></div><ul>
<li>然后执行 <code>php -m</code> 查看扩展是否安装完成</li>
</ul>
<h3 id="laravel-项目中使用">Laravel 项目中使用</h3>
<p>添加 <code>RabbitMQ</code></p>
<table>
<thead>
<tr>
<th>Package Version</th>
<th>Laravel Version</th>
</tr>
</thead>
<tbody>
<tr>
<td>6.0</td>
<td>5.5</td>
</tr>
<tr>
<td>7.0</td>
<td>5.6</td>
</tr>
<tr>
<td>7.1</td>
<td>5.7</td>
</tr>
<tr>
<td>7.2</td>
<td>5.8</td>
</tr>
<tr>
<td>8.0</td>
<td>5.9</td>
</tr>
<tr>
<td>9</td>
<td>6</td>
</tr>
<tr>
<td>10</td>
<td>6.7</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require vladimir-yuldashev/laravel-queue-rabbitmq ^7.1
</span></span></code></pre></div><ul>
<li>在 <code>app/config/queue.php</code> 文件中，<code>connections</code> 数组中添加</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;rabbitmq&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;driver&#39;</span>                <span class="o">=&gt;</span> <span class="s1">&#39;rabbitmq&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;host&#39;</span>                  <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;port&#39;</span>                  <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_PORT&#39;</span><span class="p">,</span> <span class="mi">5672</span><span class="p">),</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;vhost&#39;</span>                 <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_VHOST&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;login&#39;</span>                 <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_LOGIN&#39;</span><span class="p">,</span> <span class="s1">&#39;guest&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;password&#39;</span>              <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_PASSWORD&#39;</span><span class="p">,</span> <span class="s1">&#39;guest&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;queue&#39;</span>                 <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE&#39;</span><span class="p">),</span> <span class="c1">// name of the default queue,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;exchange_declare&#39;</span>      <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_DECLARE&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span> <span class="c1">// create the exchange if not exists
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;queue_declare_bind&#39;</span>    <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE_DECLARE_BIND&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span> <span class="c1">// create the queue if not exists and bind to the exchange
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;queue_params&#39;</span>          <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;passive&#39;</span>           <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE_PASSIVE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;durable&#39;</span>           <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE_DURABLE&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;exclusive&#39;</span>         <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE_EXCLUSIVE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;auto_delete&#39;</span>       <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_QUEUE_AUTODELETE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;exchange_params&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;name&#39;</span>        <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_NAME&#39;</span><span class="p">,</span> <span class="k">null</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;type&#39;</span>        <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_TYPE&#39;</span><span class="p">,</span> <span class="s1">&#39;direct&#39;</span><span class="p">),</span> <span class="c1">// more info at http://www.rabbitmq.com/tutorials/amqp-concepts.html
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;passive&#39;</span>     <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_PASSIVE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;durable&#39;</span>     <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_DURABLE&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span> <span class="c1">// the exchange will survive server restarts
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;auto_delete&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RABBITMQ_EXCHANGE_AUTODELETE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><ul>
<li>在 <code>.env</code> 中添加</li>
</ul>
<pre tabindex="0"><code class="language-dotenv" data-lang="dotenv">QUEUE_CONNECTION=rabbitmq #修改一下
RABBITMQ_HOST = 127.0.0.1   #要连接得主机名
RABBITMQ_PORT = 5672  #端口
RABBITMQ_VHOST = / 
RABBITMQ_LOGIN = admin #mq登录名
RABBITMQ_PASSWORD = admin  #mq登陆密码
RABBITMQ_QUEUE = test  #mq连接得测试名
</code></pre><ul>
<li>其他和正常跑队列区别不大</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan queue:restart
</span></span><span class="line"><span class="cl">php artisan queue:work
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Linux防火墙</title>
			<link>https://blog.gookm.cn/posts/2020/20201214-linux-firwall/</link>
			<pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20201214-linux-firwall/</guid>
			<description>iptables 防火墙 1、基本操作
# 查看防火墙状态 service iptables status # 停止防火墙 service iptables stop # 启动防火墙 service iptables start # 重启防火墙 service iptables restart # 永久关闭防火墙 chkconfig iptables off # 永久关闭后重启 chkconfig iptables on 2、开启80端口
vim /etc/sysconfig/iptables # 加入如下代码 -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT 保存退出后重启防火墙
service iptables restart firewall 防火墙 1、查看firewall服务状态
systemctl status firewalld firewall-cmd --state 2、开启、重启、关闭、firewalld.service服务
# 开启 service firewalld start # 重启 service firewalld restart # 关闭 service firewalld stop 3、查看防火墙规则</description>
			<content type="html"><![CDATA[<h3 id="iptables-防火墙">iptables 防火墙</h3>
<p>1、基本操作</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 查看防火墙状态</span>
</span></span><span class="line"><span class="cl">service iptables status  
</span></span><span class="line"><span class="cl"><span class="c1"># 停止防火墙</span>
</span></span><span class="line"><span class="cl">service iptables stop  
</span></span><span class="line"><span class="cl"><span class="c1"># 启动防火墙</span>
</span></span><span class="line"><span class="cl">service iptables start  
</span></span><span class="line"><span class="cl"><span class="c1"># 重启防火墙</span>
</span></span><span class="line"><span class="cl">service iptables restart
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1"># 永久关闭防火墙</span>
</span></span><span class="line"><span class="cl">chkconfig iptables off  
</span></span><span class="line"><span class="cl"><span class="c1"># 永久关闭后重启</span>
</span></span><span class="line"><span class="cl">chkconfig iptables on
</span></span></code></pre></div><p>2、开启80端口</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vim /etc/sysconfig/iptables
</span></span><span class="line"><span class="cl"><span class="c1"># 加入如下代码</span>
</span></span><span class="line"><span class="cl">-A INPUT -m state --state NEW -m tcp -p tcp --dport <span class="m">80</span> -j ACCEPT
</span></span></code></pre></div><p>保存退出后重启防火墙</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">service iptables restart
</span></span></code></pre></div><h3 id="firewall-防火墙">firewall 防火墙</h3>
<p>1、查看firewall服务状态</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">systemctl status firewalld
</span></span><span class="line"><span class="cl">firewall-cmd --state
</span></span></code></pre></div><p>2、开启、重启、关闭、firewalld.service服务</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 开启</span>
</span></span><span class="line"><span class="cl">service firewalld start
</span></span><span class="line"><span class="cl"><span class="c1"># 重启</span>
</span></span><span class="line"><span class="cl">service firewalld restart
</span></span><span class="line"><span class="cl"><span class="c1"># 关闭</span>
</span></span><span class="line"><span class="cl">service firewalld stop
</span></span></code></pre></div><p>3、查看防火墙规则</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">firewall-cmd --list-all 
</span></span></code></pre></div><p>4、查询、开放、关闭端口</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 查询端口是否开放</span>
</span></span><span class="line"><span class="cl">firewall-cmd --query-port<span class="o">=</span>8080/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 开放80端口</span>
</span></span><span class="line"><span class="cl">firewall-cmd --permanent --add-port<span class="o">=</span>80/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 移除端口</span>
</span></span><span class="line"><span class="cl">firewall-cmd --permanent --remove-port<span class="o">=</span>8080/tcp
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">#重启防火墙(修改配置后要重启防火墙)</span>
</span></span><span class="line"><span class="cl">firewall-cmd --reload
</span></span><span class="line"><span class="cl"><span class="c1"># 参数解释</span>
</span></span><span class="line"><span class="cl">1、firwall-cmd：是Linux提供的操作firewall的一个工具；
</span></span><span class="line"><span class="cl">2、--permanent：表示设置为持久；
</span></span><span class="line"><span class="cl">3、--add-port：标识添加的端口；
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Homestead 安装 Swoole 扩展</title>
			<link>https://blog.gookm.cn/posts/2020/20200906-homestead-swoole/</link>
			<pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20200906-homestead-swoole/</guid>
			<description>配置镜像源 配置好 ubuntu 的国内镜像源并更新 安装 dev 查看 php 版本，并安装对应 php 版本的 dev sudo apt install php7.2-dev 配置 pecl sudo pecl channel-update pecl.php.net sudo pear clear-cache sudo pear update-channels sudo pear upgrade 安装 swoole 扩展 安装 php 的 swoole 扩展 sudo pecl install swoole 修改 php.ini 在 php.ini 中增加 extension=swoole.so php -i | grep php.ini vim /etc/php/7.2/cli/php.ini # 在php.ini的尾部增加如下代码 extension=swoole.so 重启 php # 在php.ini的尾部增加如下代码 extension=swoole.so 查看是否成功安装 查看 php 是否成功安装 swoole 模块 php -m | grep swoole </description>
			<content type="html"><![CDATA[<h3 id="配置镜像源">配置镜像源</h3>
<ul>
<li>配置好 <code>ubuntu</code> 的国内镜像源并更新</li>
</ul>
<h3 id="安装-dev">安装 <code>dev</code></h3>
<ul>
<li>查看 <code>php</code> 版本，并安装对应 <code>php</code> 版本的 <code>dev</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo apt install php7.2-dev
</span></span></code></pre></div><h3 id="配置-pecl">配置 <code>pecl</code></h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo pecl channel-update pecl.php.net
</span></span><span class="line"><span class="cl">sudo pear clear-cache
</span></span><span class="line"><span class="cl">sudo pear update-channels
</span></span><span class="line"><span class="cl">sudo pear upgrade
</span></span></code></pre></div><h3 id="安装-swoole-扩展">安装 <code>swoole</code> 扩展</h3>
<ul>
<li>安装 <code>php</code> 的 <code>swoole</code> 扩展</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo pecl install swoole
</span></span></code></pre></div><h3 id="修改-phpini">修改 <code>php.ini</code></h3>
<ul>
<li>在 <code>php.ini</code> 中增加 <code>extension=swoole.so</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php -i <span class="p">|</span> grep php.ini
</span></span></code></pre></div><ul>
<li><code>vim</code>  <code>/etc/php/7.2/cli/php.ini</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 在php.ini的尾部增加如下代码</span>
</span></span><span class="line"><span class="cl"><span class="nv">extension</span><span class="o">=</span>swoole.so
</span></span></code></pre></div><h3 id="重启-php">重启 <code>php</code></h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 在php.ini的尾部增加如下代码</span>
</span></span><span class="line"><span class="cl"><span class="nv">extension</span><span class="o">=</span>swoole.so
</span></span></code></pre></div><h4 id="查看是否成功安装">查看是否成功安装</h4>
<ul>
<li>查看 <code>php</code> 是否成功安装 <code>swoole</code> 模块</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php -m <span class="p">|</span> grep swoole
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Homestead安装Redis</title>
			<link>https://blog.gookm.cn/posts/2020/20200828-homestead-redis/</link>
			<pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20200828-homestead-redis/</guid>
			<description>下载最新安装包 vagrant@homestead:/usr/local/src$ sudo git clone https://github.com/phpredis/phpredis.git Cloning into &amp;#39;phpredis&amp;#39;... remote: Enumerating objects: 41, done. remote: Counting objects: 100% (41/41), done. remote: Compressing objects: 100% (34/34), done. remote: Total 10462 (delta 19), reused 17 (delta 7), pack-reused 10421 Receiving objects: 100% (10462/10462), 6.38 MiB | 31.00 KiB/s, done. Resolving deltas: 100% (7214/7214), done. 使用 phpize 命令完成 php 环境的检测 vagrant@homestead:/usr/local/src$ cd phpredis/ vagrant@homestead:/usr/local/src/phpredis$ sudo /usr/bin/phpize7.2 #不同php版本的情况下phpize版本不同 Configuring for: PHP Api Version: 20170718 Zend Module Api No: 20170718 Zend Extension Api No: 320180731 vagrant@homestead:/usr/local/src/phpredis$ sudo .</description>
			<content type="html"><![CDATA[<ol>
<li>下载最新安装包</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src$ sudo git clone https://github.com/phpredis/phpredis.git
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;phpredis&#39;</span>...
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 41, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Counting objects: 100% <span class="o">(</span>41/41<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Compressing objects: 100% <span class="o">(</span>34/34<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">10462</span> <span class="o">(</span>delta 19<span class="o">)</span>, reused <span class="m">17</span> <span class="o">(</span>delta 7<span class="o">)</span>, pack-reused <span class="m">10421</span>
</span></span><span class="line"><span class="cl">Receiving objects: 100% <span class="o">(</span>10462/10462<span class="o">)</span>, 6.38 MiB <span class="p">|</span> 31.00 KiB/s, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% <span class="o">(</span>7214/7214<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></div><ol start="2">
<li>使用  <code>phpize</code> 命令完成 <code>php</code> 环境的检测</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src$ <span class="nb">cd</span> phpredis/
</span></span><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo /usr/bin/phpize7.2 <span class="c1">#不同php版本的情况下phpize版本不同</span>
</span></span><span class="line"><span class="cl">Configuring <span class="k">for</span>:
</span></span><span class="line"><span class="cl">PHP Api Version:         <span class="m">20170718</span>
</span></span><span class="line"><span class="cl">Zend Module Api No:      <span class="m">20170718</span>
</span></span><span class="line"><span class="cl">Zend Extension Api No:   <span class="m">320180731</span>
</span></span><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo ./configure --with-php-config<span class="o">=</span>/usr/bin/php-config7.2
</span></span></code></pre></div><ol start="3">
<li>编译安装</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo make <span class="o">&amp;&amp;</span> make install
</span></span><span class="line"><span class="cl">Build complete.
</span></span><span class="line"><span class="cl">Don<span class="s1">&#39;t forget to run &#39;</span>make test<span class="s1">&#39;.
</span></span></span><span class="line"><span class="cl"><span class="s1">Installing shared extensions:     /usr/lib/php/20170718/
</span></span></span><span class="line"><span class="cl"><span class="s1">Makefile:87: recipe for target &#39;</span>install-modules<span class="err">&#39;</span> failed
</span></span><span class="line"><span class="cl">make: *** <span class="o">[</span>install-modules<span class="o">]</span> Error <span class="m">1</span>
</span></span></code></pre></div><ol start="4">
<li>查看扩展</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ php -i<span class="p">|</span>grep extension_dir
</span></span><span class="line"><span class="cl"><span class="nv">extension_dir</span> <span class="o">=</span>&gt; /usr/lib/php/20170718 <span class="o">=</span>&gt; /usr/lib/php/20170718
</span></span></code></pre></div><ol start="5">
<li>把 <code>redis.so</code> 扩展模块移入 <code>PHP</code> 扩展目录中</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo mv ./modules/redis.so /usr/lib/php/20170718/
</span></span></code></pre></div><ol start="6">
<li>添加 <code>PHP</code> 配置文件的 <code>ini</code> 文件</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">创建文件
</span></span><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo touch /etc/php/7.2/fpm/conf.d/20-redis.ini
</span></span><span class="line"><span class="cl">使用vi编辑器写入如下内容：
</span></span><span class="line"><span class="cl"><span class="nv">extension</span><span class="o">=</span>redis.so
</span></span></code></pre></div><ol start="7">
<li>重启 <code>php-fpm</code></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant@homestead:/usr/local/src/phpredis$ sudo service php7.2-fpm restart
</span></span></code></pre></div><ol start="8">
<li>查看是否安装成功</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">phpinfo</span><span class="p">();</span>
</span></span></code></pre></div><ul>
<li>如果看到Redis的扩展则安装成功</li>
</ul>
<ol start="9">
<li>终端无法连接 <code>homestead</code> 的 <code>Reids</code></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">1<span class="o">)</span>修改redis配置文件（默认路径/etc/redis/redis.conf）
</span></span><span class="line"><span class="cl"><span class="nb">bind</span> 127.0.0.1 修改为 <span class="nb">bind</span> 0.0.0.0
</span></span><span class="line"><span class="cl">2<span class="o">)</span>修改完配置后重启redis
</span></span><span class="line"><span class="cl">执行命令sudo service redis restart后，使用redis-cli访问redis
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>MySQL 规约‍</title>
			<link>https://blog.gookm.cn/posts/2020/20200824-mysql-statute/</link>
			<pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20200824-mysql-statute/</guid>
			<description>一、建表规约 1. 【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（ 1 表示是，0 表示否），此规则同样适用于 odps 建表。 说明：任何字段如果为非负数，必须是 unsigned。 2. 【强制】表名、字段名必须使用小写字母或数字；禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。 正例：getter_admin，task_config，level3_name 反例：GetterAdmin，taskConfig，level_3_name 3. 【强制】表名不使用复数名词。 说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。 4. 【强制】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。 5. 【强制】唯一索引名为 uk字段名；普通索引名则为 idx字段名。 说明：uk_ 即 unique key；idx_ 即 index 的简称。 6. 【强制】小数类型为 decimal，禁止使用 float 和 double。 说明：float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。 7. 【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。 8. 【强制】varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。 9. 【强制】表必备三字段：id, gmt_create, gmt_modified。 说明：其中 id 必为主键，类型为 unsigned bigint、单表时自增、步长为 1。gmt_create,gmt_modified 的类型均为 date_time 类型。 10.</description>
			<content type="html"><![CDATA[<h3 id="一建表规约">一、建表规约</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（ 1 表示是，0 表示否），此规则同样适用于 odps 建表。
</span></span><span class="line"><span class="cl">   说明：任何字段如果为非负数，必须是 unsigned。
</span></span><span class="line"><span class="cl">2. 【强制】表名、字段名必须使用小写字母或数字；禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。
</span></span><span class="line"><span class="cl">   正例：getter_admin，task_config，level3_name
</span></span><span class="line"><span class="cl">   反例：GetterAdmin，taskConfig，level_3_name
</span></span><span class="line"><span class="cl">3. 【强制】表名不使用复数名词。
</span></span><span class="line"><span class="cl">   说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。
</span></span><span class="line"><span class="cl">4. 【强制】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。
</span></span><span class="line"><span class="cl">5. 【强制】唯一索引名为 uk字段名；普通索引名则为 idx字段名。
</span></span><span class="line"><span class="cl">   说明：uk_ 即 unique key；idx_ 即 index 的简称。
</span></span><span class="line"><span class="cl">6. 【强制】小数类型为 decimal，禁止使用 float 和 double。
</span></span><span class="line"><span class="cl">   说明：float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。
</span></span><span class="line"><span class="cl">7. 【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。
</span></span><span class="line"><span class="cl">8. 【强制】varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。
</span></span><span class="line"><span class="cl">9. 【强制】表必备三字段：id, gmt_create, gmt_modified。
</span></span><span class="line"><span class="cl">   说明：其中 id 必为主键，类型为 unsigned bigint、单表时自增、步长为 1。gmt_create,gmt_modified 的类型均为 date_time 类型。
</span></span><span class="line"><span class="cl">10. 【推荐】表的命名最好是加上 “业务名称_表的作用”。
</span></span><span class="line"><span class="cl">    正例：tiger_task /tiger_reader/mpp_config
</span></span><span class="line"><span class="cl">11. 【推荐】库名与应用名称尽量一致。
</span></span><span class="line"><span class="cl">12. 【推荐】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。
</span></span><span class="line"><span class="cl">13. 【推荐】字段允许适当冗余，以提高性能，但是必须考虑数据同步的情况。冗余字段应遵循：
</span></span><span class="line"><span class="cl">    1）不是频繁修改的字段。
</span></span><span class="line"><span class="cl">    2）不是 varchar 超长字段，更不能是 text 字段。
</span></span><span class="line"><span class="cl">    正例：商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。
</span></span><span class="line"><span class="cl">14. 【推荐】单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。
</span></span><span class="line"><span class="cl">    说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。
</span></span><span class="line"><span class="cl">15. 【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。
</span></span><span class="line"><span class="cl">    正例：人的年龄用 unsigned tinyint（表示范围 0-255，人的寿命不会超过 255 岁）；海龟就必须是 smallint，但如果是太阳的年龄，就必须是 int；如果是所有恒星的年龄都加起来，那么就必须使用 bigint。
</span></span></code></pre></div><h3 id="二索引规约">二、索引规约</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 【强制】业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。
</span></span><span class="line"><span class="cl">   说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验和控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。
</span></span><span class="line"><span class="cl">2. 【强制】 超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时，保证被关联的字段需要有索引。
</span></span><span class="line"><span class="cl">   说明：即使双表 join 也要注意表索引、SQL 性能。
</span></span><span class="line"><span class="cl">3. 【强制】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度。
</span></span><span class="line"><span class="cl">   说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分度会高达 90% 以上，可以使用 count (distinct left (列名，索引长度))/count (*) 的区分度来确定。
</span></span><span class="line"><span class="cl">4. 【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。
</span></span><span class="line"><span class="cl">   说明：索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。
</span></span><span class="line"><span class="cl">5. 【推荐】如果有 order by 的场景，请注意利用索引的有序性。order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。
</span></span><span class="line"><span class="cl">   正例：where a=? and b=? order by c; 索引：a_b_c 反例：索引中有范围查找，那么索引有序性无法利用，如：WHERE a&gt;10 ORDER BY b; 索引 a_b 无法排序。
</span></span><span class="line"><span class="cl">6. 【推荐】利用覆盖索引来进行查询操作，来避免回表操作。
</span></span><span class="line"><span class="cl">   说明：如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。
</span></span><span class="line"><span class="cl">   正例：能够建立索引的种类：主键索引、唯一索引、普通索引，而覆盖索引是一种查询的一种效果，用 explain 的结果，extra 列会出现：using index。
</span></span><span class="line"><span class="cl">7. 【推荐】利用延迟关联或者子查询优化超多分页场景。
</span></span><span class="line"><span class="cl">   说明：MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回 N 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行 SQL 改写。
</span></span><span class="line"><span class="cl">   正例：先快速定位需要获取的 id 段，然后再关联：SELECT a.* FROM 表 1 a, (select id from 表 1 where 条件 LIMIT 100000,20) b where a.id=b.id
</span></span><span class="line"><span class="cl">8. 【推荐】SQL 性能优化的目标：至少要达到 range 级别，要求是 ref 级别，如果可以是 consts 最好。
</span></span><span class="line"><span class="cl">   说明：
</span></span><span class="line"><span class="cl">   1）consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。
</span></span><span class="line"><span class="cl">   2）ref 指的是使用普通的索引（normal index）。
</span></span><span class="line"><span class="cl">   3）range 对索引进行范围检索。
</span></span><span class="line"><span class="cl">   反例：explain 表的结果，type=index，索引物理文件全扫᧿，速度非常慢，这个 index 级别比较 range 还低，与全表扫᧿是小巫见大巫。
</span></span><span class="line"><span class="cl">9. 【推荐】建组合索引的时候，区分度最高的在最左边。
</span></span><span class="line"><span class="cl">   正例：如果 where a=? and b=? ，a 列的几乎接近于唯一值，那么只需要单建 idx_a 索引即可。
</span></span><span class="line"><span class="cl">   说明：存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如：where a&gt;?and b=? 那么即使 a 的区分度更高，也必须把 b 放在索引的最前列。
</span></span><span class="line"><span class="cl">10. 【参考】创建索引时避免有如下极端误解：
</span></span><span class="line"><span class="cl">    1）误认为一个查询就需要建一个索引。
</span></span><span class="line"><span class="cl">    2）误认为索引会消耗空间、严重拖慢更新和新增速度。
</span></span><span class="line"><span class="cl">    3）误认为唯一索引一律需要在应用层通过 “先查后插” 方式解决。
</span></span></code></pre></div><h3 id="三sql-规约">三、SQL 规约</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 【强制】不要使用 count (列名) 或 count (常量) 来替代 count ()，count() 就是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。
</span></span><span class="line"><span class="cl">   说明：count (*) 会统计值为 NULL 的行，而 count (列名) 不会统计此列为 NULL 值的行。
</span></span><span class="line"><span class="cl">2. 【强制】count (distinct col) 计算该列除 NULL 之外的不重复数量。注意 count (distinctcol1, col2) 如果其中一列全为 NULL，那么即使另一列有不同的值，也返回为 0。
</span></span><span class="line"><span class="cl">3. 【强制】当某一列的值全是 NULL 时，count (col) 的返回结果为 0，但 sum (col) 的返回结果为 NULL，因此使用 sum () 时需注意 NPE 问题。
</span></span><span class="line"><span class="cl">   正例：可以使用如下方式来避免 sum 的 NPE 问题：SELECT IF (ISNULL (SUM (g)),0,SUM (g)) FROM table;
</span></span><span class="line"><span class="cl">4. 【强制】使用 ISNULL () 来判断是否为 NULL 值。注意：NULL 与任何值的直接比较都为 NULL。
</span></span><span class="line"><span class="cl">   说明：
</span></span><span class="line"><span class="cl">   1） NULL&lt;&gt;NULL 的返回结果是 NULL，而不是 false。
</span></span><span class="line"><span class="cl">   2） NULL=NULL 的返回结果是 NULL，而不是 true。
</span></span><span class="line"><span class="cl">   3） NULL&lt;&gt;1 的返回结果是 NULL，而不是 true。
</span></span><span class="line"><span class="cl">5. 【强制】在代码中写分页查询逻辑时，若 count 为 0 应直接返回，避免执行后面的分页语句。
</span></span><span class="line"><span class="cl">6. 【强制】不得使用外键与级联，一切外键概念必须在应用层解决。
</span></span><span class="line"><span class="cl">   说明：（概念解释）学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，则为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。
</span></span><span class="line"><span class="cl">7. 【强制】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。
</span></span><span class="line"><span class="cl">8. 【强制】数据订正时，删除和修改记录时，要先 select，避免出现误删除，确认无误才能执行更新语句。
</span></span><span class="line"><span class="cl">9. 【推荐】in 操作能避免则避免，若实在避免不了，需要仔细评估 in 后边的集合元素数量，控制在 1000 个之内。
</span></span><span class="line"><span class="cl">10. 【参考】如果有全球化需要，所有的字符存储与表示，均以 utf-8 编码，那么字符计数方法注意：
</span></span><span class="line"><span class="cl">    说明：
</span></span><span class="line"><span class="cl">    SELECT LENGTH (“轻松工作”)； 返回为 12
</span></span><span class="line"><span class="cl">    SELECT CHARACTER_LENGTH (“轻松工作”)； 返回为 4
</span></span><span class="line"><span class="cl">    如果要使用表情，那么使用 utfmb4 来进行存储，注意它与 utf-8 编码的区别。
</span></span><span class="line"><span class="cl">11. 【参考】TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 trigger，有可能造成事故，故不建议在开发代码中使用此语句。
</span></span><span class="line"><span class="cl">    说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。
</span></span></code></pre></div><h3 id="四orm-规约">四、ORM 规约</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 【强制】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。
</span></span><span class="line"><span class="cl">   说明：1）增加查询分析器解析成本。2）增减字段容易与 resultMap 配置不一致。
</span></span><span class="line"><span class="cl">2. 【强制】POJO 类的 boolean 属性不能加 is，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。
</span></span><span class="line"><span class="cl">   说明：参见定义 POJO 类以及数据库字段定义规定，在 sql.xml 增加映射，是必须的。
</span></span><span class="line"><span class="cl">3. 【强制】不要用 resultClass 当返回参数，即使所有类属性名与数据库字段一一对应，也需要定义；反过来，每一个表也必然有一个与之对应。
</span></span><span class="line"><span class="cl">   说明：配置映射关系，使字段与 DO 类解耦，方便维护。
</span></span><span class="line"><span class="cl">4. 【强制】xml 配置中参数注意使用：#{}，#param# 不要使用 ${} 此种方式容易出现 SQL 注入。
</span></span><span class="line"><span class="cl">5. 【强制】iBATIS 自带的 queryForList (String statementName,int start,int size) 不推荐使用。
</span></span><span class="line"><span class="cl">   说明：其实现方式是在数据库取到 statementName 对应的 SQL 语句的所有记录，再通过 subList 取 start,size 的子集合，线上因为这个原因曾经出现过 OOM。
</span></span><span class="line"><span class="cl">   正例：在 sqlmap.xml 中引入 #start#, #size#
</span></span><span class="line"><span class="cl">   Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();
</span></span><span class="line"><span class="cl">   map.put(“start”, start);
</span></span><span class="line"><span class="cl">   map.put(“size”, size);
</span></span><span class="line"><span class="cl">6. 【强制】不允许直接拿 HashMap 与 Hashtable 作为查询结果集的输出。
</span></span><span class="line"><span class="cl">7. 【强制】更新数据表记录时，必须同时更新记录对应的 gmt_modified 字段值为当前时间。
</span></span><span class="line"><span class="cl">8. 【推荐】不要写一个大而全的数据更新接口，传入为 POJO 类，不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3; 这是不对的。执行 SQL 时，尽量不要更新无改动的字段，一是易出错；二是效率低；三是 binlog 增加存储。
</span></span><span class="line"><span class="cl">9. 【参考】@Transactional 事务不要滥用。事务会影响数据库的 QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。
</span></span><span class="line"><span class="cl">10. 【参考】中的 compareValue 是与属性值对比的常量，一般是数字，表示相等时带上此条件；表示不为空且不为 null 时执行；表示不为 null 值时执行。
</span></span></code></pre></div><blockquote>
<p>转自阿里巴巴 Java 开发手册，侵删～</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>微信扫码 - 关注公众号后网站自动登录</title>
			<link>https://blog.gookm.cn/posts/2020/20200207-wx-scan/</link>
			<pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20200207-wx-scan/</guid>
			<description>大概流程是：点击微信登录，网站自己弹出一个二维码、扫描二维码后弹出公众号的关注界面、只要一关注公众号网站自动登录、第二次扫描登录的时候网站直接登录。这种扫码登录的方式个人觉得非常利于推广公众号。
大家可以体验一下 「这种登录方式」
前期准备 服务号（或者微信测试账号） EasyWeChat 扩展包 理解 简单的解释一下扫描这个带参二维码有什么不同：
扫描二维码，如果用户还未关注公众号，则用户可以关注公众号，关注后微信会将带场景值（自定义值）关注事件推送给开发者。 扫描二维码，如果用户已经关注公众号，在用户扫描后会自动进入会话，微信也会将带场景值（自定义值）扫码事件推送给开发者。 梳理 看到这里相信你已经明白了，梳理一下：
生成二维码的时候你自定义一个参数到二维码中，顺便把这个参数传到前端页面中。 前端页面根据这个参数轮询用户登录状态（也可使用 socket）。 用户扫码关注后会推送一个关注事件到服务端，也会把自定义参数带入到事件中。 根据 openid 创建用户后，然后在 Redis 中存储 Key 为场景值（自定义参数） Value 为用户创建后的 id。 前端轮询方法中如果在 Redis 中获取到 Id 后，Auth 登陆，页面再重载一下，流程完毕。 还有一种是用于有账号的用户，先账号密码登录，再扫码（使用过）：
生成带login参数的临时二维码的时候，将二维码的ticket更新到数据库该用户下，默认状态为未使用 用户扫码，微信会推送一个扫码事件，也会把自定义参数login带到事件中，改变二维码状态为已使用 前端进到扫码页面的同时就开始轮询扫描结果接口，状态为已使用则扫码登录成功 未关注的用户，会先根据openid获取用户信息并写入数据库，关注过的则数据库有数据，做相关更新操作。 最后送个自己💪
全世界就一个独一无二的你，请一定：真诚做人，努力做事！你想要的，岁月都会给你。</description>
			<content type="html"><![CDATA[<p>大概流程是：点击微信登录，网站自己弹出一个二维码、扫描二维码后弹出公众号的关注界面、只要一关注公众号网站自动登录、第二次扫描登录的时候网站直接登录。这种扫码登录的方式个人觉得非常利于推广公众号。</p>
<p>大家可以体验一下 <a href="http://90sheji.com">「这种登录方式」</a></p>
<h3 id="前期准备">前期准备</h3>
<ul>
<li>服务号（或者微信测试账号）</li>
<li>EasyWeChat 扩展包</li>
</ul>
<h3 id="理解">理解</h3>
<p><strong>简单的解释一下扫描这个带参二维码有什么不同：</strong></p>
<ul>
<li>扫描二维码，如果用户还未关注公众号，则用户可以关注公众号，关注后微信会将带场景值（自定义值）关注事件推送给开发者。</li>
<li>扫描二维码，如果用户已经关注公众号，在用户扫描后会自动进入会话，微信也会将带场景值（自定义值）扫码事件推送给开发者。</li>
</ul>
<h3 id="梳理">梳理</h3>
<p><strong>看到这里相信你已经明白了，梳理一下：</strong></p>
<ul>
<li>生成二维码的时候你自定义一个参数到二维码中，顺便把这个参数传到前端页面中。</li>
<li>前端页面根据这个参数轮询用户登录状态（也可使用 socket）。</li>
<li>用户扫码关注后会推送一个关注事件到服务端，也会把自定义参数带入到事件中。</li>
<li>根据 openid 创建用户后，然后在 Redis 中存储 Key 为场景值（自定义参数） Value 为用户创建后的 id。</li>
<li>前端轮询方法中如果在 Redis 中获取到 Id 后，Auth 登陆，页面再重载一下，流程完毕。</li>
</ul>
<p><strong>还有一种是用于有账号的用户，先账号密码登录，再扫码（使用过）：</strong></p>
<ul>
<li>生成带login参数的临时二维码的时候，将二维码的ticket更新到数据库该用户下，默认状态为未使用</li>
<li>用户扫码，微信会推送一个扫码事件，也会把自定义参数login带到事件中，改变二维码状态为已使用</li>
<li>前端进到扫码页面的同时就开始轮询扫描结果接口，状态为已使用则扫码登录成功</li>
<li>未关注的用户，会先根据openid获取用户信息并写入数据库，关注过的则数据库有数据，做相关更新操作。</li>
</ul>
<p><strong>最后送个自己💪</strong></p>
<blockquote>
<p>全世界就一个独一无二的你，请一定：真诚做人，努力做事！你想要的，岁月都会给你。</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>从Docker折腾到Laradock🌈‍</title>
			<link>https://blog.gookm.cn/posts/2020/20200102-laradock/</link>
			<pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2020/20200102-laradock/</guid>
			<description>什么是Docker？ Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。
传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。
为什么要用Docker？
更高效的利用系统资源 更快速的启动时间 一致的运行环境 持续交付和部署 更轻松的迁移 更轻松的维护和扩展 对比虚拟机的总结：
特性 容器 虚拟机 启动 秒级 分钟级 硬盘使用 一般为 MB 一般为 GB 性能 接近原生 弱于 系统支持量 单机支持上千个容器 一般几十个 基本概念：
Docker 包括三个基本概念
镜像（Image） 容器（Container） 仓库（Repository） 理解了这三个概念，就理解了 Docker 的整个生命周期。
Docker文档直通车 👍
什么是Laradock？ 一套完整的基于Docker的PHP开发环境。
包含了预先打包的Docker镜像，所有预先配置都是为了提供一个完美的PHP开发环境。
Laradock是在laravel社区众所周知的，因为这个项目最开始只关注在Docker上运行的laravel项目。后来，由于PHP社区的大量使用，它开始支持比如Symfony、CodeIgniter、WordPress、Drupal等其他的PHP项目。
Laradock直通车 ❤
安装（CentOS 安装 Docker CE）： 1.卸载旧版本 旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本： $ sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 2.</description>
			<content type="html"><![CDATA[<h3 id="什么是docker">什么是Docker？</h3>
<blockquote>
<p>Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。</p>
<p>传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。</p>
</blockquote>
<p>为什么要用Docker？</p>
<ul>
<li>更高效的利用系统资源</li>
<li>更快速的启动时间</li>
<li>一致的运行环境</li>
<li>持续交付和部署</li>
<li>更轻松的迁移</li>
<li>更轻松的维护和扩展</li>
</ul>
<p>对比虚拟机的总结：</p>
<table>
<thead>
<tr>
<th>特性</th>
<th>容器</th>
<th>虚拟机</th>
</tr>
</thead>
<tbody>
<tr>
<td>启动</td>
<td>秒级</td>
<td>分钟级</td>
</tr>
<tr>
<td>硬盘使用</td>
<td>一般为 MB</td>
<td>一般为 GB</td>
</tr>
<tr>
<td>性能</td>
<td>接近原生</td>
<td>弱于</td>
</tr>
<tr>
<td>系统支持量</td>
<td>单机支持上千个容器</td>
<td>一般几十个</td>
</tr>
</tbody>
</table>
<p>基本概念：</p>
<blockquote>
<p>Docker 包括三个基本概念</p>
<ul>
<li>镜像（Image）</li>
<li>容器（Container）</li>
<li>仓库（Repository）</li>
</ul>
<p>理解了这三个概念，就理解了 Docker 的整个生命周期。</p>
</blockquote>
<p><a href="https://yeasy.gitbooks.io/docker_practice/introduction/">Docker文档直通车</a> 👍</p>
<h3 id="什么是laradock">什么是Laradock？</h3>
<blockquote>
<p>一套完整的基于Docker的PHP开发环境。</p>
<p>包含了预先打包的Docker镜像，所有预先配置都是为了提供一个完美的PHP开发环境。</p>
<p>Laradock是在laravel社区众所周知的，因为这个项目最开始只关注在Docker上运行的laravel项目。后来，由于PHP社区的大量使用，它开始支持比如Symfony、CodeIgniter、WordPress、Drupal等其他的PHP项目。</p>
</blockquote>
<p><a href="https://laradock-docs.linganmin.cn/">Laradock直通车</a> ❤</p>
<ul>
<li>安装（CentOS 安装 Docker CE）：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.卸载旧版本
</span></span><span class="line"><span class="cl">旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本：
</span></span><span class="line"><span class="cl">$ sudo yum remove docker \
</span></span><span class="line"><span class="cl">                  docker-client \
</span></span><span class="line"><span class="cl">                  docker-client-latest \
</span></span><span class="line"><span class="cl">                  docker-common \
</span></span><span class="line"><span class="cl">                  docker-latest \
</span></span><span class="line"><span class="cl">                  docker-latest-logrotate \
</span></span><span class="line"><span class="cl">                  docker-logrotate \
</span></span><span class="line"><span class="cl">                  docker-selinux \
</span></span><span class="line"><span class="cl">                  docker-engine-selinux \
</span></span><span class="line"><span class="cl">                  docker-engine
</span></span><span class="line"><span class="cl">                  
</span></span><span class="line"><span class="cl">2.使用 yum 安装
</span></span><span class="line"><span class="cl">执行以下命令安装依赖包：
</span></span><span class="line"><span class="cl">$ sudo yum install -y yum-utils \
</span></span><span class="line"><span class="cl">           device-mapper-persistent-data \
</span></span><span class="line"><span class="cl">           lvm2
</span></span><span class="line"><span class="cl">鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。
</span></span><span class="line"><span class="cl">执行下面的命令添加 yum 软件源：    
</span></span><span class="line"><span class="cl">$ sudo yum-config-manager \
</span></span><span class="line"><span class="cl">    --add-repo \
</span></span><span class="line"><span class="cl">    https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo
</span></span><span class="line"><span class="cl"># 官方源
</span></span><span class="line"><span class="cl"># $ sudo yum-config-manager \
</span></span><span class="line"><span class="cl">#     --add-repo \
</span></span><span class="line"><span class="cl">#     https://download.docker.com/linux/centos/docker-ce.repo
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.安装 Docker CE
</span></span><span class="line"><span class="cl">更新 yum 软件源缓存，并安装 docker-ce。
</span></span><span class="line"><span class="cl">$ sudo yum makecache fast
</span></span><span class="line"><span class="cl">$ sudo yum install docker-ce
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4.启动 Docker CE
</span></span><span class="line"><span class="cl">$ sudo systemctl enable docker
</span></span><span class="line"><span class="cl">$ sudo systemctl start docker
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">5.建立 docker 用户组
</span></span><span class="line"><span class="cl">建立 docker 组：$ sudo groupadd docker
</span></span><span class="line"><span class="cl">将当前用户加入 docker 组：$ sudo usermod -aG docker $USER
</span></span><span class="line"><span class="cl">退出当前终端并重新登录，进行如下测试。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">6.测试 Docker 是否安装正确
</span></span><span class="line"><span class="cl">$ docker run hello-world
</span></span><span class="line"><span class="cl">若能正常输出以上信息，则说明安装成功。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">7.镜像加速器
</span></span><span class="line"><span class="cl">请在 /etc/docker/daemon.json 中写入如下内容:
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  &#34;registry-mirrors&#34;: [
</span></span><span class="line"><span class="cl">    &#34;https://dockerhub.azk8s.cn&#34;,
</span></span><span class="line"><span class="cl">    &#34;https://hub-mirror.c.163.com&#34;
</span></span><span class="line"><span class="cl">  ]
</span></span><span class="line"><span class="cl">}或
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  &#34;registry-mirrors&#34;: [
</span></span><span class="line"><span class="cl">       &#34;https://registry.docker-cn.com&#34;
</span></span><span class="line"><span class="cl">  ]
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">之后重新启动服务。
</span></span><span class="line"><span class="cl">$ sudo systemctl daemon-reload
</span></span><span class="line"><span class="cl">$ sudo systemctl restart docker
</span></span><span class="line"><span class="cl">检查加速器是否生效
</span></span><span class="line"><span class="cl">执行 $ docker info，如果从结果中看到了如下内容，说明配置成功。
</span></span><span class="line"><span class="cl">Registry Mirrors:
</span></span><span class="line"><span class="cl"> https://dockerhub.azk8s.cn/
</span></span></code></pre></div><ul>
<li>安装Laradock：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.将 repository 克隆到你机器的任意位置:
</span></span><span class="line"><span class="cl">git clone https://github.com/laradock/laradock.git
</span></span><span class="line"><span class="cl">文件夹结构如下
</span></span><span class="line"><span class="cl">+laradock
</span></span><span class="line"><span class="cl">+zkproject
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.进入 laradock 文件夹并复制 env-example to .env
</span></span><span class="line"><span class="cl">cp env-example .env
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3. 在顶部，修改 APP_CODE_PATH_HOST 变量为你的项目路径.
</span></span><span class="line"><span class="cl">APP_CODE_PATH_HOST=../zkproject
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4.运行 docker-compose 来构建环境
</span></span><span class="line"><span class="cl">docker-compose up -d nginx php-fpm mysql workspace
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">5.进入 Workspace 容器，执行比如 (Artisan, Composer, PHPUnit, Gulp, ...) 等命令
</span></span><span class="line"><span class="cl">docker-compose exec workspace bash
</span></span><span class="line"><span class="cl">可以看到 /var/www 目录就是 test 映射来的。再去找 nginx 配置文件，在 laradock/nginx/sites 里可以看到有几个样本文件，一个 default.conf 文件，default 文件的 root 默认是 /var/www/public。所以，可以看出想配置多个项目的话，修改 nginx 配置文件及对应的文件结构即可。
</span></span><span class="line"><span class="cl">+laradock
</span></span><span class="line"><span class="cl">+zkproject
</span></span><span class="line"><span class="cl">++project_one
</span></span><span class="line"><span class="cl">++project_two
</span></span><span class="line"><span class="cl">这是我的目录结构，配置好后记得把本机 hosts 修改下。然后重启 docker 即可。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">6.navicat连接mysql
</span></span><span class="line"><span class="cl">docker-compose exec mysql bash
</span></span><span class="line"><span class="cl">mysql -uroot -proot
</span></span><span class="line"><span class="cl">ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;
</span></span><span class="line"><span class="cl">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;
</span></span><span class="line"><span class="cl">FLUSH PRIVILEGES;
</span></span><span class="line"><span class="cl">打开Laravel项目中的.env 文件并设置：
</span></span><span class="line"><span class="cl">DB_HOST=mysql (用 127.0.0.1 访问的是 php 容器，php 容器里没有 mysql )
</span></span><span class="line"><span class="cl">REDIS_HOST=redis
</span></span></code></pre></div><h3 id="常用的部分命令">常用的部分命令</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">systemctl start docker
</span></span><span class="line"><span class="cl">systemctl stop docker
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker images
</span></span><span class="line"><span class="cl">docker rmi ID
</span></span><span class="line"><span class="cl">docker ps -a
</span></span><span class="line"><span class="cl">docker container ls -a
</span></span><span class="line"><span class="cl">docker rm -f ID
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">docker rm -f `docker ps -a -q`
</span></span><span class="line"><span class="cl">docker rmi `docker images -q`
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker-compose up -d nginx php-fpm mysql workspace
</span></span><span class="line"><span class="cl">docker-compose exec workspace bash
</span></span><span class="line"><span class="cl">docker-compose exec mysql bash
</span></span><span class="line"><span class="cl">mysql -uroot -proot
</span></span></code></pre></div><p>最后送给自己 💪</p>
<blockquote>
<p>失去的不再来，不能放弃</p>
<p>那便继续向着未来前进</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>多公众号管理🚥‍</title>
			<link>https://blog.gookm.cn/posts/2019/20191216-multiple-mp/</link>
			<pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20191216-multiple-mp/</guid>
			<description>使用 EasyWechat 扩展包进行多公众号管理，具体步骤分为以下几步：
新建公众号数据表 创建辅助函数 创建微信控制器 配置路由 设置路由忽略 开始使用 公众号数据表 创建模型 php artisan make:model Models/WechatMp -m //wechat_mps 在生成的 wechat_mps 的 migration 文件里写入微信相关数据字段： public function up() { Schema::create(&amp;#39;wechats&amp;#39;, function (Blueprint $table) { $table-&amp;gt;increments(&amp;#39;id&amp;#39;); //微信公众号基本参数 $table-&amp;gt;string(&amp;#39;user_id&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;name&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;type&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;status&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;logo&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;is_use&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;is_connect&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_app_id&amp;#39;)-&amp;gt;nullable(); //微信公众号设置参数 $table-&amp;gt;string(&amp;#39;wechat_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_token&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_aes_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_mch_id&amp;#39;)-&amp;gt;nullable(); //微信支付设置参数 $table-&amp;gt;string(&amp;#39;pay_api_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_cert_path&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_key_path&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_app_id&amp;#39;)-&amp;gt;nullable(); //微信开放平台设置参数 $table-&amp;gt;string(&amp;#39;op_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_token&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_aes_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;work_corp_id&amp;#39;)-&amp;gt;nullable(); //微信企业号设置参数 $table-&amp;gt;string(&amp;#39;work_agent_id&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;work_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;timestamps(); }); } 创建辅助函数 接下来在 App\Handlers 创建一个辅助函数 WechatConfigHandler.php 文件，代码如下： &amp;lt;?php namespace App\Handlers; use App\Models\WechatMp; use EasyWeChat\Factory; class WechatConfigHandler { //[1-1]微信公众号设置 public function app_config($account) { $wechat = WechatMp::where(&amp;#39;id&amp;#39;,$account)-&amp;gt;first(); if (!</description>
			<content type="html"><![CDATA[<p>使用 EasyWechat 扩展包进行多公众号管理，具体步骤分为以下几步：</p>
<ol>
<li>新建公众号数据表</li>
<li>创建辅助函数</li>
<li>创建微信控制器</li>
<li>配置路由</li>
<li>设置路由忽略</li>
<li>开始使用</li>
</ol>
<h3 id="公众号数据表">公众号数据表</h3>
<ul>
<li>创建模型</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:model Models/WechatMp -m  //wechat_mps
</span></span></code></pre></div><ul>
<li>在生成的 <code>wechat_mps</code> 的 <code>migration</code> 文件里写入微信相关数据字段：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">up</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">Schema</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="s1">&#39;wechats&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nx">Blueprint</span> <span class="nv">$table</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">increments</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">);</span>   <span class="c1">//微信公众号基本参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;user_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;logo&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;is_use&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;is_connect&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_app_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span> <span class="c1">//微信公众号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_token&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_aes_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_mch_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信支付设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_api_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_cert_path&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_key_path&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_app_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信开放平台设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_token&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_aes_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_corp_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信企业号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_agent_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">timestamps</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="创建辅助函数">创建辅助函数</h3>
<ul>
<li>接下来在 <code>App\Handlers</code> 创建一个辅助函数 <code>WechatConfigHandler.php</code> 文件，代码如下：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Handlers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\WechatMp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">EasyWeChat\Factory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WechatConfigHandler</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//[1-1]微信公众号设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">app_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">WechatMp</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;app_id&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>      <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;secret&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>      <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;token&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_token</span><span class="p">,</span>       <span class="c1">// Token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;aes_key&#39;</span> <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_aes_key</span><span class="p">,</span>     <span class="c1">// EncodingAESKey，兼容与安全模式下请一定要填写！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;oauth&#39;</span>   <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//&#39;scopes&#39;   =&gt; array_map(&#39;trim&#39;, explode(&#39;,&#39;, env(&#39;WECHAT_OFFICIAL_ACCOUNT_OAUTH_SCOPES&#39;, &#39;snsapi_userinfo&#39;))),
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;scopes&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;snsapi_userinfo&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//&#39;callback&#39; =&gt; env(&#39;WECHAT_OFFICIAL_ACCOUNT_OAUTH_CALLBACK&#39;, &#39;/oauth_callback&#39;),
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;callback&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;/oauth_callback/&#39;</span><span class="o">.</span><span class="nv">$account</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;log&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;level&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;debug&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;file&#39;</span> <span class="o">=&gt;</span> <span class="nx">storage_path</span><span class="p">(</span><span class="s1">&#39;logs/wechat.log&#39;</span><span class="p">),</span>  <span class="c1">//这个必须要有，要不调试有问题，你都会找不到原因
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[1-2]生成微信公众号相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$app</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">officialAccount</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$app</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[2-1]微信支付设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">pay_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;app_id&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>      <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;secret&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>      <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;mch_id&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_mch_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;key&#39;</span>         <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span>   <span class="c1">// API 密钥
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// 如需使用敏感接口（如退款、发送红包等）需要配置 API 证书路径(登录商户平台下载 API 证书)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;cert_path&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span> <span class="c1">// XXX: 绝对路径！！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;key_path&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span>      <span class="c1">// XXX: 绝对路径！！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;notify_url&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;默认的订单回调地址&#39;</span><span class="p">,</span>     <span class="c1">// 你也可以在下单时单独设置来想覆盖它
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[2-2]生成微信支付相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">pay</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$pay</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">payment</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pay_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$pay</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[3-1]微信小程序设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">mini_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;app_id&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>         <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;secret&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>     <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[3-2]微信小程序相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">miniProgram</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$miniProgram</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">miniProgram</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mini_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$miniProgram</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[4-1]微信开放平台设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">opconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;app_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_app_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;secret&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_secret</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;token&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;aes_key&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_aes_key</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[4-2]微信开放平台相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">openPlatform</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$openPlatform</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">openPlatform</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">opconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$openPlatform</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[5-1]微信企业号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">workconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;corp_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_corp_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;agent_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_agent_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;secret&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_secret</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//[5-2]微信企业号相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">work</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$work</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">work</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$work</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="创建微信控制器">创建微信控制器</h3>
<ul>
<li>创建一个微信控制器，进行微信公众平台对接：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:controller Api/WechatController
</span></span></code></pre></div><ul>
<li>并写入如下代码：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers\Api</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Handlers\WechatConfigHandler</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Http\Controllers\Controller</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WeChatController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$app</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">WechatConfigHandler</span> <span class="nv">$wechat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span> <span class="o">=</span> <span class="nv">$wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 处理微信的请求消息
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return string
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">     <span class="k">public</span> <span class="k">function</span> <span class="nf">serve</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//微信发来配置GET请求，可以在此处更改is_connect状态为已连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">server</span><span class="o">-&gt;</span><span class="na">push</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nv">$message</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$account</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">switch</span> <span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;MsgType&#39;</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;event&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">event</span><span class="p">(</span><span class="nv">$message</span><span class="p">,</span> <span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;text&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">text</span><span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;Content&#39;</span><span class="p">],</span> <span class="nv">$account</span><span class="p">,</span> <span class="nv">$message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;image&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到图片消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;voice&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到语音消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;video&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到视频消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;location&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到坐标消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;link&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到链接消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="s1">&#39;file&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到文件消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// ... 其它消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="k">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="s1">&#39;收到其它消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                    <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">server</span><span class="o">-&gt;</span><span class="na">serve</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="c1">//微信登录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">oauth_callback</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">oauth</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nx">session</span><span class="p">([</span><span class="s1">&#39;wechat.oauth_user&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">()]);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//不管在哪个页面检测用户登录状态，都要写入session值：target_url
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$targetUrl</span> <span class="o">=</span> <span class="nx">session</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">has</span><span class="p">(</span><span class="s1">&#39;target_url&#39;</span><span class="p">)</span> <span class="o">?</span> <span class="nx">session</span><span class="p">(</span><span class="s1">&#39;target_url&#39;</span><span class="p">)</span> <span class="o">:</span> <span class="s1">&#39;/&#39;</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//header(&#39;location:&#39;. $targetUrl);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">return</span> <span class="nx">redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">to</span><span class="p">(</span><span class="nv">$targetUrl</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">// 获取jssdk配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getJSSDKConfig</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$arr</span> <span class="o">=</span> <span class="nx">explode</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">,</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;apis&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$debug</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;debug&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;true&#39;</span> <span class="o">?</span> <span class="k">true</span> <span class="o">:</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$json</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;json&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;true&#39;</span> <span class="o">?</span> <span class="k">true</span> <span class="o">:</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$url</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;status&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span> <span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;params error&#39;</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$app</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;wechat.official_account&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">jssdk</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$config</span> <span class="o">=</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">jssdk</span><span class="o">-&gt;</span><span class="na">buildConfig</span><span class="p">(</span><span class="nv">$arr</span><span class="p">,</span> <span class="nv">$debug</span><span class="p">,</span> <span class="nv">$json</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">response</span><span class="p">(</span><span class="nv">$config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="配置路由">配置路由：</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//web.php 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">any</span><span class="p">(</span><span class="s1">&#39;/wechat/{account}&#39;</span><span class="p">,</span> <span class="s1">&#39;Api\WeChatController@serve&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">any</span><span class="p">(</span><span class="s1">&#39;/oauth_callback/{account}&#39;</span><span class="p">,</span><span class="s1">&#39;WechatController@oauth_callback&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/wechat/jssdkconfig&#39;</span><span class="p">,</span> <span class="s1">&#39;Api\WeChatController@getJSSDKConfig&#39;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="设置路由忽略">设置路由忽略</h3>
<ul>
<li>这一步千万不能忘记，中间键 <code>Middleware</code> 文件夹里 <code>VerifyCsrfToken.php</code> 修改路由忽略，因为微信发过来的请求方式不定，一下 <code>GET</code> ，一下 <code>POST</code> ，<code>POST</code> 就要排除 <code>access_token</code> 限制：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$except</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;/admin/wangeditor/upload&#34;</span><span class="p">,</span><span class="s2">&#34;wechat/*&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h3 id="开始使用">开始使用</h3>
<ul>
<li>然后在使用的时候，可以这样写：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//公众号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">pay</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//微信支付
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">miniProgram</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//微信小程序
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">work</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//企业号应用
</span></span></span></code></pre></div><ul>
<li>微信公众平台开发者选项里 URL 要设置为：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">http://www.xxx.com/wechat/1     //其中的 1 就为传过来的公众号id $account参数
</span></span></code></pre></div><p>最后送给自己💪</p>
<blockquote>
<p>时间，会带来惊喜。只要我们肯认真地，有希望地，走过每一天。</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>Laravel的微信公众号模板消息推送📨</title>
			<link>https://blog.gookm.cn/posts/2019/20191127-wechat-pushmsg/</link>
			<pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20191127-wechat-pushmsg/</guid>
			<description>安装一个纯净的laravel框架 composer create-project --prefer-dist laravel/laravel blog &amp;#34;5.7.*&amp;#34; 安装微信扩展包EasyWeChat 安装好用的微信扩展包EasyWeChat，这里使用 laravel-wechat
# Laravel &amp;lt; 5.8 composer require &amp;#34;overtrue/laravel-wechat:~4.0&amp;#34; 管理多公众号 Laravel 使用 EasyWechat 管理多公众号
创建数据表 php artisan make:model Wechat -m $table-&amp;gt;increments(&amp;#39;id&amp;#39;); $table-&amp;gt;string(&amp;#39;aid&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_app_id&amp;#39;)-&amp;gt;nullable(); //微信公众号设置参数 $table-&amp;gt;string(&amp;#39;wechat_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_token&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;wechat_aes_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_mch_id&amp;#39;)-&amp;gt;nullable(); //微信支付设置参数 $table-&amp;gt;string(&amp;#39;pay_api_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_cert_path&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;pay_key_path&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_app_id&amp;#39;)-&amp;gt;nullable(); //微信开放平台设置参数 $table-&amp;gt;string(&amp;#39;op_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_token&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;op_aes_key&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;work_corp_id&amp;#39;)-&amp;gt;nullable(); //微信企业号设置参数 $table-&amp;gt;string(&amp;#39;work_agent_id&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;string(&amp;#39;work_secret&amp;#39;)-&amp;gt;nullable(); $table-&amp;gt;timestamps(); 在 App\Handlers 创建一个辅助函数 WechatConfigHandler.php 文件，代码如下： &amp;lt;?php /** * Created by PhpStorm. * User: zhukang. * Date: 2019/11/9. * Time: 11:54. */ namespace App\Handlers; use App\Models\Wechat; use EasyWeChat\Factory; class WechatConfigHandler { //[1-1]微信公众号设置 public function app_config($account) { $wechat = Wechat::where(&amp;#39;id&amp;#39;,$account)-&amp;gt;first(); if (!</description>
			<content type="html"><![CDATA[<h3 id="安装一个纯净的laravel框架">安装一个纯净的laravel框架</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel blog <span class="s2">&#34;5.7.*&#34;</span>
</span></span></code></pre></div><h3 id="安装微信扩展包easywechat">安装微信扩展包EasyWeChat</h3>
<p>安装好用的微信扩展包EasyWeChat，这里使用 laravel-wechat</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># Laravel &lt; 5.8</span>
</span></span><span class="line"><span class="cl">composer require <span class="s2">&#34;overtrue/laravel-wechat:~4.0&#34;</span>
</span></span></code></pre></div><h3 id="管理多公众号">管理多公众号</h3>
<p>Laravel 使用 EasyWechat 管理多公众号</p>
<ol>
<li>创建数据表</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:model Wechat -m
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">increments</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_app_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span> <span class="c1">//微信公众号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_token&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;wechat_aes_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_mch_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信支付设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_api_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_cert_path&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;pay_key_path&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_app_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信开放平台设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_token&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;op_aes_key&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_corp_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>  <span class="c1">//微信企业号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_agent_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;work_secret&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">nullable</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">timestamps</span><span class="p">();</span>
</span></span></code></pre></div><ol start="2">
<li>在 <code>App\Handlers</code> 创建一个辅助函数 <code>WechatConfigHandler.php</code> 文件，代码如下：</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">* Created by PhpStorm.
</span></span></span><span class="line"><span class="cl"><span class="sd">* User: zhukang.
</span></span></span><span class="line"><span class="cl"><span class="sd">* Date: 2019/11/9.
</span></span></span><span class="line"><span class="cl"><span class="sd">* Time: 11:54.
</span></span></span><span class="line"><span class="cl"><span class="sd">*/</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Handlers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\Wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">EasyWeChat\Factory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WechatConfigHandler</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="c1">//[1-1]微信公众号设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">app_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">       <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;app_id&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>      <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;secret&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>      <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;token&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_token</span><span class="p">,</span>       <span class="c1">// Token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;aes_key&#39;</span> <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_aes_key</span><span class="p">,</span>     <span class="c1">// EncodingAESKey，兼容与安全模式下请一定要填写！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;log&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">               <span class="s1">&#39;level&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;debug&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">               <span class="s1">&#39;file&#39;</span> <span class="o">=&gt;</span> <span class="nx">storage_path</span><span class="p">(</span><span class="s1">&#39;logs/wechat.log&#39;</span><span class="p">),</span>  <span class="c1">//这个必须要有，要不调试有问题，你都会找不到原因
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="p">],</span>
</span></span><span class="line"><span class="cl">       <span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[1-2]生成微信公众号相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$app</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">officialAccount</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$app</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[2-1]微信支付设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">pay_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">       <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;app_id&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>      <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;secret&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>      <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;mch_id&#39;</span>      <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_mch_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;key&#39;</span>         <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span>   <span class="c1">// API 密钥
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="c1">// 如需使用敏感接口（如退款、发送红包等）需要配置 API 证书路径(登录商户平台下载 API 证书)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;cert_path&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span> <span class="c1">// XXX: 绝对路径！！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;key_path&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">pay_api_key</span><span class="p">,</span>      <span class="c1">// XXX: 绝对路径！！！！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;notify_url&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;默认的订单回调地址&#39;</span><span class="p">,</span>     <span class="c1">// 你也可以在下单时单独设置来想覆盖它
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[2-2]生成微信支付相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">pay</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$pay</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">payment</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pay_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$pay</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[3-1]微信小程序设置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">mini_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;app_id&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_app_id</span><span class="p">,</span>         <span class="c1">// AppID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;secret&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">wechat_secret</span><span class="p">,</span>     <span class="c1">// AppSecret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[3-2]微信小程序相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">miniProgram</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$miniProgram</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">miniProgram</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">mini_config</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$miniProgram</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[4-1]微信开放平台设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">opconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;app_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_app_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;secret&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_secret</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;token&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;aes_key&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">op_aes_key</span>
</span></span><span class="line"><span class="cl">       <span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[4-2]微信开放平台相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">openPlatform</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$openPlatform</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">openPlatform</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">opconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$openPlatform</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[5-1]微信企业号设置参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">workconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$wechat</span> <span class="o">=</span> <span class="nx">Wechat</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;aid&#39;</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$wechat</span><span class="p">)</span> <span class="k">return</span> <span class="nv">$config</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$config</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;corp_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_corp_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;agent_id&#39;</span>   <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_agent_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;secret&#39;</span>    <span class="o">=&gt;</span> <span class="nv">$wechat</span><span class="o">-&gt;</span><span class="na">work_secret</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           <span class="s1">&#39;response_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">       <span class="p">];</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$config</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">//[5-2]微信企业号相关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">public</span> <span class="k">function</span> <span class="nf">work</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$work</span> <span class="o">=</span> <span class="nx">Factory</span><span class="o">::</span><span class="na">work</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">workconfig</span><span class="p">(</span><span class="nv">$account</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$work</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ol start="3">
<li>创建一个微信控制器，进行微信公众平台对接</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:controller WechatController
</span></span></code></pre></div><p>代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers\Api</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Handlers\WechatConfigHandler</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Http\Controllers\Controller</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\SubscribeReplay</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\Wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\WechatKeyword</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\WechatRule</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\WechatUser</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">EasyWeChat\Factory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WeChatController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="cm">/*public function serve()
</span></span></span><span class="line"><span class="cl"><span class="cm">   {
</span></span></span><span class="line"><span class="cl"><span class="cm">       $app=app(&#39;wechat.official_account&#39;);
</span></span></span><span class="line"><span class="cl"><span class="cm">       return $app-&gt;server-&gt;serve();
</span></span></span><span class="line"><span class="cl"><span class="cm">   }*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="k">protected</span> <span class="nv">$wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="k">protected</span> <span class="nv">$app</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">WechatConfigHandler</span> <span class="nv">$wechat</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span> <span class="o">=</span> <span class="nv">$wechat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">   <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">    * 处理微信的请求消息
</span></span></span><span class="line"><span class="cl"><span class="sd">    * @return string
</span></span></span><span class="line"><span class="cl"><span class="sd">    */</span>
</span></span><span class="line"><span class="cl">   <span class="k">public</span> <span class="k">function</span> <span class="nf">serve</span><span class="p">(</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">server</span><span class="o">-&gt;</span><span class="na">push</span><span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="nv">$message</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$account</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">           <span class="k">switch</span> <span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;MsgType&#39;</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;event&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">event</span><span class="p">(</span><span class="nv">$message</span><span class="p">,</span><span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;text&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到文字消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;image&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到图片消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;voice&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到语音消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;video&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到视频消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;location&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到坐标消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;link&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到链接消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="k">case</span> <span class="s1">&#39;file&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到文件消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">               <span class="c1">// ... 其它消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>               <span class="k">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">                   <span class="k">return</span> <span class="s1">&#39;收到其它消息&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                   <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">           <span class="p">}</span>
</span></span><span class="line"><span class="cl">       <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">server</span><span class="o">-&gt;</span><span class="na">serve</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    *事件
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">   <span class="k">protected</span> <span class="k">function</span> <span class="nf">event</span><span class="p">(</span><span class="nv">$message</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="k">switch</span> <span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;Event&#39;</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">           <span class="c1">//关注事件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>           <span class="k">case</span> <span class="s1">&#39;subscribe&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">               <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">welcome</span><span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;FromUserName&#39;</span><span class="p">],</span><span class="nv">$account</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">               <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">           <span class="k">case</span> <span class="s1">&#39;unsubscribe&#39;</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">               <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">unsubscribe</span><span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;FromUserName&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">               <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">       <span class="p">}</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">EventKey</span><span class="p">(</span><span class="nv">$message</span><span class="p">[</span><span class="s1">&#39;EventKey&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">    *关注事件回复
</span></span></span><span class="line"><span class="cl"><span class="cm">    */</span>
</span></span><span class="line"><span class="cl">   <span class="k">public</span> <span class="k">function</span> <span class="nf">welcome</span><span class="p">(</span><span class="nv">$FromUserName</span><span class="p">,</span><span class="nv">$account</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nx">Log</span><span class="o">::</span><span class="na">info</span><span class="p">(</span><span class="nv">$FromUserName</span><span class="o">.</span><span class="s1">&#39;&lt;关注&gt;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$rule</span><span class="o">=</span><span class="nx">WechatRule</span><span class="o">::</span><span class="na">where</span><span class="p">([</span><span class="s1">&#39;wechat_id&#39;</span><span class="o">=&gt;</span><span class="nv">$account</span><span class="p">,</span><span class="s1">&#39;event&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;subscribe&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$reply_content</span><span class="o">=</span><span class="p">(</span><span class="nx">WechatKeyword</span><span class="o">::</span><span class="na">where</span><span class="p">([</span><span class="s1">&#39;wechat_id&#39;</span><span class="o">=&gt;</span><span class="nv">$account</span><span class="p">,</span><span class="s1">&#39;keyword&#39;</span><span class="o">=&gt;</span><span class="nv">$rule</span><span class="o">-&gt;</span><span class="na">keyword</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">())</span><span class="o">-&gt;</span><span class="na">reply_content</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="nv">$FromUserName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="nv">$is_exist</span><span class="o">=</span><span class="nx">WechatUser</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;openid&#39;</span><span class="p">,</span><span class="nv">$FromUserName</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="k">if</span><span class="p">(</span><span class="nv">$is_exist</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">           <span class="nx">WechatUser</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="p">}</span><span class="k">elseif</span> <span class="p">(</span><span class="nv">$is_exist</span><span class="o">-&gt;</span><span class="na">subscribe</span> <span class="o">==</span> <span class="mi">2</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">           <span class="nv">$is_exist</span><span class="o">-&gt;</span><span class="na">subscribe</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">           <span class="nv">$is_exist</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       <span class="nv">$replayTemp</span><span class="o">=</span><span class="nx">str_replace</span><span class="p">(</span><span class="s1">&#39;[toUserName]&#39;</span><span class="p">,</span><span class="nv">$user</span><span class="p">[</span><span class="s1">&#39;nickname&#39;</span><span class="p">],</span><span class="nv">$reply_content</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">       <span class="k">return</span> <span class="nv">$replayTemp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">   *取消关注事件回复
</span></span></span><span class="line"><span class="cl"><span class="cm">   */</span>
</span></span><span class="line"><span class="cl">   <span class="k">public</span> <span class="k">function</span> <span class="nf">unsubscribe</span><span class="p">(</span><span class="nv">$FromUserName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="nx">Log</span><span class="o">::</span><span class="na">info</span><span class="p">(</span><span class="nv">$FromUserName</span><span class="o">.</span><span class="s1">&#39;&lt;取消关注&gt;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="nx">WechatUser</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;openid&#39;</span><span class="p">,</span><span class="nv">$FromUserName</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">([</span><span class="s1">&#39;subscribe&#39;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ol start="4">
<li>中间键<code> Middleware</code> 文件夹里 <code>VerifyCsrfToken.php</code> 修改路由忽略</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$except</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">   <span class="s1">&#39;wechat/*&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span> 
</span></span></code></pre></div><ol start="5">
<li>然后在使用的时候，可以这样写</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//公众号
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">pay</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//微信支付
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">miniProgram</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//微信小程序
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$app</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wechat</span><span class="o">-&gt;</span><span class="na">work</span><span class="p">(</span><span class="nv">$account</span><span class="p">);</span>  <span class="c1">//企业号应用
</span></span></span></code></pre></div><ol start="6">
<li>其他</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//微信公众平台开发者选项里要设置为：
</span></span></span><span class="line"><span class="cl"><span class="c1">//http://www.xxx.com/wechat/1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//配置路由(web.php):
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">any</span><span class="p">(</span><span class="s1">&#39;/wechat/{account}&#39;</span><span class="p">,</span> <span class="s1">&#39;Api\WeChatController@serve&#39;</span><span class="p">);</span>       
</span></span></code></pre></div><h3 id="测试平台">测试平台</h3>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20191127-wechat-pushmsg01.jpg" alt="测试平台"></p>
<h3 id="增加消息模板">增加消息模板</h3>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20191127-wechat-pushmsg02.jpg" alt="增加消息模板"></p>
<h3 id="新建模板消息控制器">新建模板消息控制器</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:controller Api/WechatTemplateMsgController
</span></span></code></pre></div><p>代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers\Api</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\WechatUser</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Log</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WechatTemplateMsgController</span> <span class="k">extends</span> <span class="nx">ApiController</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//发送模板消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">sendTemplateMsg</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$users</span><span class="o">=</span><span class="nx">WechatUser</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;subscribe&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">([</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;subscribe&#39;</span><span class="p">,</span><span class="s1">&#39;openid&#39;</span><span class="p">,</span><span class="s1">&#39;nickname&#39;</span><span class="p">,</span><span class="s1">&#39;sex&#39;</span><span class="p">,</span><span class="s1">&#39;city&#39;</span><span class="p">,</span><span class="s1">&#39;province&#39;</span><span class="p">,</span><span class="s1">&#39;country&#39;</span><span class="p">,</span><span class="s1">&#39;subscribe_time&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$users</span> <span class="k">as</span> <span class="nv">$user</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$msg_content_data</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;first&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;这是一条测试推送😄&#39;</span><span class="p">,</span>  <span class="c1">// 不需要指定颜色
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;nickname&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">nickname</span><span class="p">,</span> <span class="s1">&#39;#F00&#39;</span><span class="p">],</span> <span class="c1">// 指定为红色
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;sex&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">sex</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">?</span> <span class="s1">&#39;男&#39;</span> <span class="o">:</span> <span class="s1">&#39;女&#39;</span><span class="p">,</span> <span class="c1">// 与第二`种一样
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;city&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">city</span><span class="p">,</span> <span class="c1">// 与第一种一样
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;province&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">province</span><span class="p">,</span> <span class="c1">// 与第一种一样
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;country&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">country</span><span class="p">,</span> <span class="c1">// 与第一种一样
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="s1">&#39;subscribe_time&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="nx">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="p">,</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">subscribe_time</span><span class="p">),</span><span class="s1">&#39;#F00&#39;</span><span class="p">],</span> <span class="c1">// 与第一种一样
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">];</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$msg_content</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;touser&#39;</span> <span class="o">=&gt;</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">openid</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;template_id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Cn27K9GkTx0O0xxxxxxxxxxxxxxQl-OmA&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;url&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;https://www.xxxxx.com&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="nv">$msg_content_data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">];</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$res</span><span class="o">=</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">template_message</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$msg_content</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="nx">Log</span><span class="o">::</span><span class="na">info</span><span class="p">([</span><span class="s1">&#39;template_message&#39;</span><span class="o">=&gt;</span><span class="nv">$res</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span><span class="p">(</span><span class="nv">$res</span><span class="p">[</span><span class="s1">&#39;errcode&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">selfMessage</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nv">$res</span><span class="p">[</span><span class="s1">&#39;errcode&#39;</span><span class="p">],</span> <span class="nv">$res</span><span class="p">[</span><span class="s1">&#39;errmsg&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">selfMessage</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="mi">1010</span><span class="p">,</span> <span class="s1">&#39;模板消息发送成功！&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="路由apiphp">路由(api.php)</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//发送模板消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;wechat/send_template_msg&#39;</span><span class="p">,</span> <span class="s1">&#39;WechatTemplateMsgController@sendTemplateMsg&#39;</span><span class="p">);</span>
</span></span></code></pre></div><h4 id="测试">测试</h4>
<p>Postman调用发送模板消息接口：
<img src="https://qiniu.zkilm.cn/blog/posts/2019/20191127-wechat-pushmsg03.jpg" alt="Postman调用发送模板消息接口"></p>
<p>效果图：
<img src="https://qiniu.zkilm.cn/blog/posts/2019/20191127-wechat-pushmsg04.jpg" alt="效果图"></p>
]]></content>
		</item>
		
		<item>
			<title>GitBook初试🍺</title>
			<link>https://blog.gookm.cn/posts/2019/20190826-try-gitbook/</link>
			<pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190826-try-gitbook/</guid>
			<description>完成后的成果预览地址：https://zkbook.zam9.com/
安装 npm install gitbook-cli -g 报错：
npm WARN checkPermissions Missing write access to /usr/lib/node_modules 原因：安装全局的包，没有权限
解决办法：在安装命令前加上 sudo ,输入用户的登陆密码，提升权限进行安装。
sudo npm install gitbook-cli -g 初始化 新建一个文件夹，如 gitbook ，cd 到 gitbook ，然后：
gitbook init - README.md: 书的介绍文字，如前言、简介，在章节中也可做为章节的简介。 - SUMMARY.md: 定制书籍的章节结构和顺序。 开始编写你的目录及文件 如你可以在 gitbook 下新建一个 part01 目录与 README.md 和 SUMMARY.md 同级，然后在该目录下新建 md 文件即可。
SUMMARY.md 文件作为书籍的目录结构:
#Summary - [Introduction](README.md) - Part I - [登录流程介绍](part01/login.md) - [test01](part01/test01.md) - [test02 参考](part01/test02.md) - [概览](part01/test.md) - [Test](part01/Test.</description>
			<content type="html"><![CDATA[<blockquote>
<p>完成后的成果预览地址：https://zkbook.zam9.com/</p>
</blockquote>
<h3 id="安装">安装</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">npm install gitbook-cli -g
</span></span></code></pre></div><p>报错：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">npm WARN checkPermissions Missing write access to /usr/lib/node_modules
</span></span></code></pre></div><p>原因：安装全局的包，没有权限</p>
<p>解决办法：在安装命令前加上 sudo ,输入用户的登陆密码，提升权限进行安装。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo npm install gitbook-cli -g
</span></span></code></pre></div><h3 id="初始化">初始化</h3>
<p>新建一个文件夹，如 gitbook ，cd 到 gitbook ，然后：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">gitbook init
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">- README.md: 书的介绍文字，如前言、简介，在章节中也可做为章节的简介。
</span></span><span class="line"><span class="cl">- SUMMARY.md: 定制书籍的章节结构和顺序。
</span></span></code></pre></div><h3 id="开始编写你的目录及文件">开始编写你的目录及文件</h3>
<p>如你可以在 gitbook 下新建一个 part01 目录与 README.md 和 SUMMARY.md 同级，然后在该目录下新建 md 文件即可。</p>
<p>SUMMARY.md  文件作为书籍的目录结构:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">#Summary</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">- <span class="o">[</span>Introduction<span class="o">](</span>README.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">- Part I
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>登录流程介绍<span class="o">](</span>part01/login.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>test01<span class="o">](</span>part01/test01.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>test02 参考<span class="o">](</span>part01/test02.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">        - <span class="o">[</span>概览<span class="o">](</span>part01/test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">        - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">        - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">        - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">- Part II
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span><span class="line"><span class="cl">    - <span class="o">[</span>Test<span class="o">](</span>part01/Test.md<span class="o">)</span>
</span></span></code></pre></div><h3 id="预览">预览</h3>
<ul>
<li>执行命令 gitbook serve ，gitbook 会启动一个 4000 端口用于预览。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">gitbook serve
</span></span></code></pre></div><ul>
<li>第二种预览方式，运行 gitbook build 命令后会在书籍的文件夹中生成一个 _book 文件夹, 里面的内容即为生成的 html 文件. 我们可以使用下面命令来生成网页而不开启服务器。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">gitbook build
</span></span></code></pre></div><h3 id="关于生成静态html侧边栏无法点击问题">关于生成静态HTML侧边栏无法点击问题</h3>
<p>百度到的结果是：从 3.0.0 版起, gitbook build 生成的 website 就不支持 local 打开了, 必需要 webserver 开启;实在要完全静态的, 就安装 2.6.7 版吧。使用2.6.7版本，会自动安装并生成，左侧目录可点击，Firefox、Chrome暂无任何问题</p>
<p>解决办法：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">#生成对应版本的，本地无此版本会自动下载</span>
</span></span><span class="line"><span class="cl">gitbook build --gitbook<span class="o">=</span>2.6.7   
</span></span></code></pre></div><p>但是又碰到如下报错：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Error loading version latest: Error: Cannot find module <span class="s1">&#39;internal/util/types&#39;</span>
</span></span></code></pre></div><p>解决：将 node 版本降低</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 1.安装node管理 n</span>
</span></span><span class="line"><span class="cl">sudo npm install -g n 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 2. 降低版本，更新npm</span>
</span></span><span class="line"><span class="cl">sudo n <span class="m">6</span>
</span></span><span class="line"><span class="cl">sudo npm install npm -g
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 3.此时运行gitbook2.6.7的命令即可。</span>
</span></span><span class="line"><span class="cl">gitbook build --gitbook<span class="o">=</span>2.6.7
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 4. 待转换完成后，将npm版本（例如9.10.0）切回来即可,以免影响其他模块</span>
</span></span><span class="line"><span class="cl">sudo n 8.16.1
</span></span></code></pre></div><h3 id="关于侧边栏折叠问题和底部打赏功能">关于侧边栏折叠问题和底部打赏功能</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">如果有多个目录，Gitbook 在浏览器上打开时，默认所有的目录都会打开，当目录比较多时，全部显示不利于阅读。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">可以使用插件配置目录折叠，使得打开浏览器时这些目录默认是关闭的。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">在执行 gitbook init 主目录下增加 book.json 文件做定制化配置
</span></span></code></pre></div><p>配置目录折叠功能如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;plugins&#34;</span><span class="p">:[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;expandable-chapters&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;donate&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pluginsConfig&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;donate&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;wechat&#34;</span><span class="p">:</span> <span class="s2">&#34;https://test1-1256003521.cos.ap-guangzhou.myqcloud.com/images/123444.png&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;alipay&#34;</span><span class="p">:</span> <span class="s2">&#34;https://test1-1256003521.cos.ap-guangzhou.myqcloud.com/images/662.png&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;button&#34;</span><span class="p">:</span> <span class="s2">&#34;Donate&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;alipayText&#34;</span><span class="p">:</span> <span class="s2">&#34;支付宝捐赠&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;wechatText&#34;</span><span class="p">:</span> <span class="s2">&#34;微信捐赠&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>然后：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">gitbook install
</span></span></code></pre></div><p>GitBook插件地址：<a href="https://plugins.gitbook.com/">https://plugins.gitbook.com/</a></p>
]]></content>
		</item>
		
		<item>
			<title>Laravel解决跨域请求🏃‍</title>
			<link>https://blog.gookm.cn/posts/2019/20190725-cross-request/</link>
			<pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190725-cross-request/</guid>
			<description>今天公司前端突然说请求跨域了，那么就解决下咯！
创建中间件 首先创建一个中间件
php artisan make:middleware EnableCrossRequestMiddleware 编写中间件 然后在中间件 EnableCrossRequestMiddleware.php 编写
&amp;lt;?php namespace App\Http\Middleware; use Closure; class EnableCrossRequestMiddleware { /** * Handle an incoming request. * * @param \Illuminate\Http\Request $request * @param \Closure $next * @return mixed */ public function handle($request, Closure $next) { $response = $next($request); $response-&amp;gt;header(&amp;#39;Access-Control-Allow-Origin&amp;#39;, &amp;#39;*&amp;#39;); $response-&amp;gt;header(&amp;#39;Access-Control-Allow-Headers&amp;#39;, &amp;#39;Origin, Content-Type, Cookie, Accept&amp;#39;); $response-&amp;gt;header(&amp;#39;Access-Control-Allow-Methods&amp;#39;, &amp;#39;GET, POST, PATCH, PUT, OPTIONS&amp;#39;); $response-&amp;gt;header(&amp;#39;Access-Control-Allow-Credentials&amp;#39;, &amp;#39;true&amp;#39;); //ession共享的需求才用到 return $response; } } 注册中间件 添加到全局中间件 Kernel.php 组中</description>
			<content type="html"><![CDATA[<p>今天公司前端突然说请求跨域了，那么就解决下咯！</p>
<h3 id="创建中间件">创建中间件</h3>
<p>首先创建一个中间件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:middleware EnableCrossRequestMiddleware
</span></span></code></pre></div><h3 id="编写中间件">编写中间件</h3>
<p>然后在中间件 <code>EnableCrossRequestMiddleware.php</code> 编写</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Middleware</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Closure</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">EnableCrossRequestMiddleware</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Handle an incoming request.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param  \Illuminate\Http\Request  $request
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param  \Closure  $next
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Closure</span> <span class="nv">$next</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$next</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">header</span><span class="p">(</span><span class="s1">&#39;Access-Control-Allow-Origin&#39;</span><span class="p">,</span> <span class="s1">&#39;*&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">header</span><span class="p">(</span><span class="s1">&#39;Access-Control-Allow-Headers&#39;</span><span class="p">,</span> <span class="s1">&#39;Origin, Content-Type, Cookie, Accept&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">header</span><span class="p">(</span><span class="s1">&#39;Access-Control-Allow-Methods&#39;</span><span class="p">,</span> <span class="s1">&#39;GET, POST, PATCH, PUT, OPTIONS&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">header</span><span class="p">(</span><span class="s1">&#39;Access-Control-Allow-Credentials&#39;</span><span class="p">,</span> <span class="s1">&#39;true&#39;</span><span class="p">);</span>  <span class="c1">//ession共享的需求才用到
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">return</span> <span class="nv">$response</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="注册中间件">注册中间件</h3>
<p>添加到全局中间件 <code>Kernel.php</code> 组中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$middleware</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="nx">\App\Http\Middleware\EnableCrossRequestMiddleware</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><p>可能碰到的问题（ios不识别*）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">header</span><span class="p">(</span><span class="s1">&#39;Access-Control-Allow-Headers&#39;</span><span class="p">,</span> <span class="s1">&#39;Origin, Content-Type, Cookie, X-CSRF-TOKEN, Accept, Authorization, token&#39;</span><span class="p">);</span><span class="c1">// 开放哪些自定义头(ios 不识别*)
</span></span></span></code></pre></div><p>或者选择 laravel-cors  <a href="https://github.com/barryvdh/laravel-cors">https://github.com/barryvdh/laravel-cors</a></p>
<p>参考：<a href="http://www.ptbird.cn/laravel-cors-to-cors-laravel-app.html">http://www.ptbird.cn/laravel-cors-to-cors-laravel-app.html</a></p>
]]></content>
		</item>
		
		<item>
			<title>微信的H5分享（基于 Laravel-Wechat）😶</title>
			<link>https://blog.gookm.cn/posts/2019/20190610-wechat-h5/</link>
			<pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190610-wechat-h5/</guid>
			<description>一、缘由 什么都不做的情况下，在微信分享H5页面的时候，分享后是这样的：
但是，现在需求是，分享后为下面这样：
没办法，自己开发的H5要想在微信中进行传播，使用微信 JSSDK 是必不可少的环节。而 JSSDK 虽然只是个 js ，可是加密必须得在服务端进行。
二、基本流程 1.设置JS接口安全域名
进入微信公众号平台 —&amp;gt; 公众号设置 —&amp;gt; 功能设置 —&amp;gt; JS接口安全域名（`test.zks.design`） 设置的时候，微信有教你如何去设置，将下载的文件（MP_verify_acUZIwvhxMREbXNt.txt）放在项目的根目录就可以了。 2.配置一个基础 url 用于获取 jssdk 的 config 内容
使用的 url 是 http://test.zks.design/jssdkconfig
3.H5 静态页面存放在 public/h5/ 文件夹下
因此在访问 H5 的时候，需要访问域名 `http://test.zks.design/h5/xxxx/` 因为 H5 主要是分享，而不是域名访问，因此这个域名没什么问题。 H5 均直接写静态页面，并不使用 laravel 的 blade 模板去写H5。 4.通过 ajax 获取 config 配置
在需要调用分享的页面上，进行 config 配置的时候，首先通过 ajax 将基本参数传送给服务端url（`http://test.zks.design/jssdkconfig`）。 一些需要的参数可能如下： 可以参照 EasyWechat 的文档 https://www.easywechat.com/docs/4.1/basic-services/jssdk 其中建议 $app-&amp;gt;jssdk-&amp;gt;setUrl($url) 设置当前URL 一定是自己前端的页面的 url。 5.将获取到的 config 直接放在 js 中</description>
			<content type="html"><![CDATA[<h3 id="一缘由">一、缘由</h3>
<p>什么都不做的情况下，在微信分享H5页面的时候，分享后是这样的：</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190610-wechat-h501.png" alt="Before"></p>
<p>但是，现在需求是，分享后为下面这样：</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190610-wechat-h502.png" alt="After"></p>
<p>没办法，自己开发的H5要想在微信中进行传播，使用微信 JSSDK 是必不可少的环节。而 JSSDK 虽然只是个 js ，可是加密必须得在服务端进行。</p>
<h3 id="二基本流程">二、基本流程</h3>
<p><strong>1.设置JS接口安全域名</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">进入微信公众号平台 —&gt; 公众号设置 —&gt;  功能设置 —&gt;  JS接口安全域名（`test.zks.design`）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">设置的时候，微信有教你如何去设置，将下载的文件（MP_verify_acUZIwvhxMREbXNt.txt）放在项目的根目录就可以了。
</span></span></code></pre></div><p><strong>2.配置一个基础 url 用于获取 jssdk 的 config 内容</strong></p>
<p>使用的 url 是 <code>http://test.zks.design/jssdkconfig</code></p>
<p><strong>3.H5 静态页面存放在 public/h5/ 文件夹下</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">因此在访问 H5 的时候，需要访问域名 `http://test.zks.design/h5/xxxx/`
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">因为 H5 主要是分享，而不是域名访问，因此这个域名没什么问题。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">H5 均直接写静态页面，并不使用 laravel 的 blade 模板去写H5。
</span></span></code></pre></div><p><strong>4.通过 ajax 获取 config 配置</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">在需要调用分享的页面上，进行 config 配置的时候，首先通过 ajax 将基本参数传送给服务端url（`http://test.zks.design/jssdkconfig`）。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">一些需要的参数可能如下：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">可以参照 EasyWechat 的文档 https://www.easywechat.com/docs/4.1/basic-services/jssdk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">其中建议 $app-&gt;jssdk-&gt;setUrl($url) 设置当前URL 一定是自己前端的页面的 url。
</span></span></code></pre></div><p><strong>5.将获取到的 config 直接放在 js 中</strong></p>
<p>在H5页面引入js文件，否则 wx.config 之类无法使用：http://res.wx.qq.com/open/js/jweixin-1.4.0.js</p>
<h3 id="三实现">三、实现</h3>
<p><strong>1、安装并配置 laravel-wechat</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require <span class="s2">&#34;overtrue/laravel-wechat:~4.0&#34;</span>
</span></span></code></pre></div><p>并发布配置文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan vendor:publish --provider<span class="o">=</span><span class="s2">&#34;Overtrue\LaravelWeChat\ServiceProvider&#34;</span>
</span></span></code></pre></div><p><strong>2.实现服务器 token 验证逻辑(只是分享的话，这步可以选择省略)</strong></p>
<p>要实现服务器 token 验证，除了填写微信公众号的配置之外，还需要配置 config/wechat.php。先在服务器代码填写token和EncodingAESKey（token自己随便填），然后再在公众号服务器配置处点击提交（注意两处token保持一致）</p>
<p>之后是需要对 <code>http://test.zks.design/wechat </code>进行编码完成验证。（这里不涉及消息，消息也在这里面转发或处理即可）。</p>
<p>路由我是直接配置如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// 微信方面的路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">namespace</span><span class="p">(</span><span class="s2">&#34;Wechat&#34;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">group</span><span class="p">(</span><span class="k">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">any</span><span class="p">(</span><span class="s1">&#39;/wechat&#39;</span><span class="p">,</span><span class="s1">&#39;WechatController@index&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">any</span><span class="p">(</span><span class="s1">&#39;/jssdkconfig&#39;</span><span class="p">,</span><span class="s1">&#39;WechatController@getJSSDKConfig&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><p>Wechat控制器：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:controller Wechat/WechatController
</span></span></code></pre></div><p>其中 index 函数如下：</p>
<p>非常简单，这个完成之后，就能够实现微信公众号的 token 认证 （注意，需要对 config/wechat 配置和公众号的相关参数匹配正确才行 ）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// token认证及信息传输
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Log</span><span class="o">::</span><span class="na">info</span><span class="p">(</span><span class="s1">&#39;request arrived.&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$app</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;wechat.official_account&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">server</span><span class="o">-&gt;</span><span class="na">serve</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><strong>3.实现 jssdkConfig 信息获取的逻辑</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// 获取jssdk配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">getJSSDKConfig</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// dump(explode(&#39;,&#39;,$request-&gt;get(&#39;apis&#39;)));
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$arr</span> <span class="o">=</span> <span class="nx">explode</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">,</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;apis&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$debug</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;debug&#39;</span><span class="p">)</span> <span class="o">===</span><span class="s1">&#39;true&#39;</span> <span class="o">?</span> <span class="k">true</span> <span class="o">:</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$json</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;json&#39;</span><span class="p">)</span> <span class="o">===</span><span class="s1">&#39;true&#39;</span> <span class="o">?</span> <span class="k">true</span> <span class="o">:</span> <span class="k">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$url</span> <span class="o">=</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//dump($request-&gt;get(&#39;url&#39;));
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// check
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$url</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;status&#39;</span><span class="o">=&gt;</span><span class="k">false</span><span class="p">,</span><span class="s1">&#39;msg&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;params error&#39;</span><span class="p">,</span><span class="s1">&#39;data&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$app</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;wechat.official_account&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">jssdk</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$config</span> <span class="o">=</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">jssdk</span><span class="o">-&gt;</span><span class="na">buildConfig</span><span class="p">(</span><span class="nv">$arr</span><span class="p">,</span><span class="nv">$debug</span><span class="p">,</span><span class="nv">$json</span><span class="p">,</span><span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">(</span><span class="nv">$config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>为了方便起见，我直接使用了 GET 的请求方式。</p>
<p>同时主要的参数有下面几个：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">- apis： 需要使用的接口列表 传入格式为 &#34;onMenuShareTimeline,onMenuShareAppMessage&#34; 这样的字符串，方便分割成数组
</span></span><span class="line"><span class="cl">- debug：传入的是字符的 true 或者 false
</span></span><span class="line"><span class="cl">- json：传入的是字符的 true 或者 false （表示生成的数据格式，可以参考 easyWechat 的文档）
</span></span><span class="line"><span class="cl">- url：需要加密的 url （传入的时候必须将 &amp; 进行替换，否则会造成 config 失败 
</span></span></code></pre></div><p><strong>4.js 获取 config 数据</strong></p>
<p>在 H5 中直接使用 config 的时候，可以直接在 js 中通过 ajax 请求 url 获取config内容。</p>
<p>比如下面我使用的例子：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&#34;text/javascript&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">getjssdkconfig</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">shareLinkUlr</span> <span class="o">=</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span> <span class="c1">// 获取当前的url 去掉 # 之后的部分
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">shareLinkUlr</span> <span class="o">=</span> <span class="nx">shareLinkUlr</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\&amp;/g</span><span class="p">,</span> <span class="s1">&#39;%26&#39;</span><span class="p">);</span> <span class="c1">// 将 &amp; 替换成 %26
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">apis</span><span class="o">=</span><span class="s2">&#34;onMenuShareTimeline,onMenuShareAppMessage&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">debug</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">json</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">link</span><span class="o">=</span><span class="nx">shareLinkUlr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="s2">&#34;apis=&#34;</span><span class="o">+</span><span class="nx">apis</span><span class="o">+</span><span class="s2">&#34;&amp;debug=&#34;</span><span class="o">+</span><span class="nx">debug</span><span class="o">+</span><span class="s2">&#34;&amp;json=&#34;</span><span class="o">+</span><span class="nx">json</span><span class="o">+</span><span class="s2">&#34;&amp;url=&#34;</span><span class="o">+</span><span class="nx">link</span><span class="p">;</span> <span class="c1">// 拼接 get 参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;get&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">url</span><span class="o">:</span><span class="s1">&#39;http://test-api.zam9.com/api/jssdkconfig?&#39;</span><span class="o">+</span><span class="nx">data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">success</span><span class="o">:</span><span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">configJsSDKAndDoSomething</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">configJsSDKAndDoSomething</span><span class="p">(</span><span class="nx">config</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">wx</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="nx">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nx">wx</span><span class="p">.</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 其他的一些操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;林和成35週年幸運大轉輪&#39;</span><span class="p">,</span> <span class="c1">// 分享标题
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">link</span><span class="o">:</span> <span class="s1">&#39;http://test.zam9.com&#39;</span><span class="p">,</span> <span class="c1">// 分享链接，记得使用绝对路径，不能用document.URL
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">imgUrl</span><span class="o">:</span> <span class="s1">&#39;http://test.zam9.com/images/ettason-share.jpg&#39;</span><span class="p">,</span> <span class="c1">// 分享图标
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">desc</span><span class="o">:</span> <span class="s1">&#39;2019 Ettason 35th Anniversary Lucky Draw for WeChat&#39;</span><span class="p">,</span> <span class="c1">// 分享描述
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;分享成功！&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 用户确认分享后执行的回调函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="nx">cancel</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;取消分享！&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 用户取消分享后执行的回调函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">};</span>
</span></span><span class="line"><span class="cl">        <span class="nx">wx</span><span class="p">.</span><span class="nx">onMenuShareTimeline</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span> <span class="c1">// 分享到朋友圈
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">wx</span><span class="p">.</span><span class="nx">onMenuShareAppMessage</span><span class="p">(</span><span class="nx">options</span><span class="p">);</span> <span class="c1">// 分享给朋友
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="cm">/*wx.error(function(error){
</span></span></span><span class="line"><span class="cl"><span class="cm">        console.log(error);
</span></span></span><span class="line"><span class="cl"><span class="cm">    });*/</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 页面加载完之后进行操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 注意这里的参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="c1">// apis 使用的参数是 字符串的拼接 这个是和 php 的方法中的处理相对应的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">getjssdkconfig</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></span></code></pre></div><h3 id="四关键的几点">四、关键的几点</h3>
<p><strong>1、JSON.parse()</strong></p>
<p>在拿到返回的 json 数据之后，需要 JSON.parse()，否则是不正确的 js 对象，报 config:fail 错误</p>
<p><strong>2、分享出去的链接点击之后配置失败</strong></p>
<p>这个主要是因为分享出去之后，由于微信加了几个参数，导致存在问题。</p>
<p>网上存在解决方案就是 将 &amp; 进行替换：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">shareLinkUlr</span> <span class="o">=</span> shareLinkUlr.replace<span class="o">(</span>/<span class="se">\&amp;</span>/g, <span class="s1">&#39;%26&#39;</span><span class="o">)</span><span class="p">;</span> // 将 <span class="p">&amp;</span> 替换成 %26 
</span></span></code></pre></div><p><strong>3.jsapiList为空并不影响分享功能，只要config为ok即可。</strong></p>
<h3 id="五总结">五、总结</h3>
<p>其实就是后端给个接口，返回微信配置提供给前端就完事了。😜</p>
]]></content>
		</item>
		
		<item>
			<title>PHPOffice之Word🍭‍</title>
			<link>https://blog.gookm.cn/posts/2019/20190321-phpoffice-word/</link>
			<pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190321-phpoffice-word/</guid>
			<description>导语 在做完根据Excel模板导出数据后，就对Word模板导出产生了兴趣。其实原理差不多。所以还是选择的PHPOffice 套餐。
PHPWord是一个用纯PHP编写的库，它提供了一组用于写入和读取不同文档文件格式的类。当前版本的PHPWord支持Microsoft Office Open XML（OOXML或OpenXML），Office应用程序的OASIS Open Document Format（OpenDocument或ODF）和RTF格式（RTF）。
PHPWord文档传送门
开始 安装 composer require phpoffice/phpword 使用 拿到原始的模板还需要做一些简单的修改： 代码 &amp;lt;?php namespace App\Http\Controllers; use Illuminate\Http\Request; use PhpOffice\PhpWord\PhpWord; use PhpOffice\PhpWord\TemplateProcessor; class TestController extends Controller { . . //Word public function wordExport(Request $request) { $template = new TemplateProcessor(public_path().&amp;#39;/phpoffice/word_temp.docx&amp;#39;); //设置替换值 （只能替换纯文本） $template-&amp;gt;setValue( [&amp;#39;Name&amp;#39;,&amp;#39;Date&amp;#39;,&amp;#39;Address&amp;#39;,&amp;#39;Organizer&amp;#39;,&amp;#39;Activity&amp;#39;], [$request-&amp;gt;name,$request-&amp;gt;start_time,$request-&amp;gt;address,$request-&amp;gt;organizer,$request-&amp;gt;activity] ); $filename = date(&amp;#39;Y-m-d&amp;#39;, time()).rand(1000, 9999). &amp;#34;.docx&amp;#34;; //保存到项目 $template-&amp;gt;saveAs(public_path().&amp;#39;/phpoffice/&amp;#39;.$filename); //建议：将数据[&amp;#39;Name&amp;#39;,&amp;#39;Date&amp;#39;,&amp;#39;Address&amp;#39;,&amp;#39;Organizer&amp;#39;,&amp;#39;Activity&amp;#39;]写一份到数据库 //TODO return back()-&amp;gt;with([&amp;#39;success&amp;#39;=&amp;gt;&amp;#39;导出成功&amp;#39;,&amp;#39;filename&amp;#39;=&amp;gt;$filename]); } } 效果 结束语 目前是将文件保存在了项目，想要安全点可以丢到Storage文件夹下或者上传至cos，oos，七牛等。直接输出到浏览器暂时还没找到对应的方法。
不努力，你背井离乡干嘛！？加油！💪</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<p>在做完根据Excel模板导出数据后，就对Word模板导出产生了兴趣。其实原理差不多。所以还是选择的PHPOffice 套餐。</p>
<blockquote>
<p>PHPWord是一个用纯PHP编写的库，它提供了一组用于写入和读取不同文档文件格式的类。当前版本的PHPWord支持Microsoft Office Open XML（OOXML或OpenXML），Office应用程序的OASIS Open Document Format（OpenDocument或ODF）和RTF格式（RTF）。</p>
</blockquote>
<p><a href="https://phpword.readthedocs.io/en/latest/">PHPWord文档传送门</a></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190321-phpoffice-word01.jpg" alt="原始模板"></p>
<h3 id="开始">开始</h3>
<h4 id="安装">安装</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require phpoffice/phpword
</span></span></code></pre></div><h4 id="使用">使用</h4>
<ul>
<li>拿到原始的模板还需要做一些简单的修改：</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190321-phpoffice-word02.jpg" alt="修改后"></p>
<h4 id="代码">代码</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpWord\PhpWord</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpWord\TemplateProcessor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TestController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//Word
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">wordExport</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$template</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">TemplateProcessor</span><span class="p">(</span><span class="nx">public_path</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/phpoffice/word_temp.docx&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//设置替换值 （只能替换纯文本）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$template</span><span class="o">-&gt;</span><span class="na">setValue</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="p">[</span><span class="s1">&#39;Name&#39;</span><span class="p">,</span><span class="s1">&#39;Date&#39;</span><span class="p">,</span><span class="s1">&#39;Address&#39;</span><span class="p">,</span><span class="s1">&#39;Organizer&#39;</span><span class="p">,</span><span class="s1">&#39;Activity&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="p">[</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">,</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">start_time</span><span class="p">,</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">address</span><span class="p">,</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">organizer</span><span class="p">,</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">activity</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$filename</span> <span class="o">=</span> <span class="nx">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nx">time</span><span class="p">())</span><span class="o">.</span><span class="nx">rand</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">9999</span><span class="p">)</span><span class="o">.</span> <span class="s2">&#34;.docx&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//保存到项目
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$template</span><span class="o">-&gt;</span><span class="na">saveAs</span><span class="p">(</span><span class="nx">public_path</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/phpoffice/&#39;</span><span class="o">.</span><span class="nv">$filename</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//建议：将数据[&#39;Name&#39;,&#39;Date&#39;,&#39;Address&#39;,&#39;Organizer&#39;,&#39;Activity&#39;]写一份到数据库
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">//TODO
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">back</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">with</span><span class="p">([</span><span class="s1">&#39;success&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;导出成功&#39;</span><span class="p">,</span><span class="s1">&#39;filename&#39;</span><span class="o">=&gt;</span><span class="nv">$filename</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="效果">效果</h4>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190321-phpoffice-word03.jpg" alt="完成效果图"></p>
<h3 id="结束语">结束语</h3>
<p>目前是将文件保存在了项目，想要安全点可以丢到<code>Storage</code>文件夹下或者上传至<code>cos</code>，<code>oos</code>，<code>七牛</code>等。直接输出到浏览器暂时还没找到对应的方法。</p>
<blockquote>
<p>不努力，你背井离乡干嘛！？加油！💪</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>PHPOffice之Excel🍜</title>
			<link>https://blog.gookm.cn/posts/2019/20190320-phpoffice-excel/</link>
			<pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190320-phpoffice-excel/</guid>
			<description>导语 简单的数据导入导出其实 Maatwebsite/Laravel-Excel 和 box/spout 就够了，听说spout在大量数据下效率较Laravel-Excel 快。这次因为要根据Excel模板导出，在这两个包没找到怎么引入模板的方法，虽然可以设置，但是过于麻烦，就放弃了。最终选择了 PHPOffice/PhpSpreadsheet 。
PhpSpreadsheet是一个用纯PHP编写的库，它提供了一组类，允许您读取和写入不同的电子表格文件格式，如Excel和LibreOffice Calc。
PhpSpreadsheet文档传送门
安装 composer require phpoffice/phpspreadsheet 使用 &amp;lt;?php namespace App\Http\Controllers; use Illuminate\Http\Request; use App\Models\TreasureLog; use Carbon\Carbon; use Illuminate\Support\Facades\Auth; use PhpOffice\PhpSpreadsheet\Spreadsheet; use PhpOffice\PhpSpreadsheet\Writer\Xlsx; //可以生成多种格式类 use PhpOffice\PhpSpreadsheet\IOFactory; use PhpOffice\PhpSpreadsheet\Style\Alignment; use PhpOffice\PhpSpreadsheet\Style\Border; class TestController extends Controller{ . . public function excelExport() { $rows=TreasureLog::select(&amp;#39;id&amp;#39;,&amp;#39;user_id&amp;#39;,&amp;#39;product_id&amp;#39;,&amp;#39;product_name&amp;#39;,&amp;#39;type&amp;#39;,&amp;#39;coin_type&amp;#39;)-&amp;gt;limit(100)-&amp;gt;get()-&amp;gt;toArray(); //通过工厂模式创建内容 $spreadsheet = IOFactory::load(public_path().&amp;#39;/phpoffice/biser.xlsx&amp;#39;); $worksheet = $spreadsheet-&amp;gt;getActiveSheet(); $worksheet-&amp;gt;setCellValue(&amp;#39;B8&amp;#39;,rand(100000,999999)); $worksheet-&amp;gt;setCellValue(&amp;#39;B9&amp;#39;,Carbon::now()); $worksheet-&amp;gt;setCellValue(&amp;#39;B10&amp;#39;,Auth::user()-&amp;gt;name); $num=12; foreach ($rows as $row){ $num++; $worksheet-&amp;gt;setCellValue(&amp;#39;A&amp;#39;.$num,$row[&amp;#39;id&amp;#39;]); $worksheet-&amp;gt;setCellValue(&amp;#39;B&amp;#39;.$num,$row[&amp;#39;user_id&amp;#39;]); $worksheet-&amp;gt;setCellValue(&amp;#39;D&amp;#39;.$num,$row[&amp;#39;product_id&amp;#39;]); $worksheet-&amp;gt;setCellValue(&amp;#39;F&amp;#39;.$num,$row[&amp;#39;product_name&amp;#39;]); $worksheet-&amp;gt;setCellValue(&amp;#39;H&amp;#39;.</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<blockquote>
<p>简单的数据导入导出其实 <a href="https://github.com/Maatwebsite">Maatwebsite/Laravel-Excel</a> 和 <a href="https://github.com/box">box/spout</a> 就够了，听说<code>spout</code>在大量数据下效率较<code>Laravel-Excel</code> 快。这次因为要根据<code>Excel</code>模板导出，在这两个包没找到怎么引入模板的方法，虽然可以设置，但是过于麻烦，就放弃了。最终选择了 <code>PHPOffice/PhpSpreadsheet</code> 。</p>
</blockquote>
<blockquote>
<p><a href="https://github.com/PHPOffice/PhpSpreadsheet">PhpSpreadsheet</a>是一个用纯PHP编写的库，它提供了一组类，允许您读取和写入不同的电子表格文件格式，如Excel和LibreOffice Calc。</p>
</blockquote>
<p><a href="https://phpoffice.github.io/PhpSpreadsheet/master/PhpOffice.html">PhpSpreadsheet文档传送门</a></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190320-phpoffice-excel01.jpg" alt="Excel模板效果图"></p>
<h3 id="安装">安装</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require phpoffice/phpspreadsheet
</span></span></code></pre></div><h3 id="使用">使用</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\TreasureLog</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Auth</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpSpreadsheet\Spreadsheet</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpSpreadsheet\Writer\Xlsx</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">//可以生成多种格式类
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">use</span> <span class="nx">PhpOffice\PhpSpreadsheet\IOFactory</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpSpreadsheet\Style\Alignment</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">PhpOffice\PhpSpreadsheet\Style\Border</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TestController</span> <span class="k">extends</span> <span class="nx">Controller</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span>
</span></span><span class="line"><span class="cl">        <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">excelExport</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$rows</span><span class="o">=</span><span class="nx">TreasureLog</span><span class="o">::</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;user_id&#39;</span><span class="p">,</span><span class="s1">&#39;product_id&#39;</span><span class="p">,</span><span class="s1">&#39;product_name&#39;</span><span class="p">,</span><span class="s1">&#39;type&#39;</span><span class="p">,</span><span class="s1">&#39;coin_type&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//通过工厂模式创建内容
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$spreadsheet</span> <span class="o">=</span> <span class="nx">IOFactory</span><span class="o">::</span><span class="na">load</span><span class="p">(</span><span class="nx">public_path</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/phpoffice/biser.xlsx&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$worksheet</span> <span class="o">=</span> <span class="nv">$spreadsheet</span><span class="o">-&gt;</span><span class="na">getActiveSheet</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;B8&#39;</span><span class="p">,</span><span class="nx">rand</span><span class="p">(</span><span class="mi">100000</span><span class="p">,</span><span class="mi">999999</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;B9&#39;</span><span class="p">,</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;B10&#39;</span><span class="p">,</span><span class="nx">Auth</span><span class="o">::</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$num</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$rows</span> <span class="k">as</span> <span class="nv">$row</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$num</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;B&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;user_id&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;D&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;product_id&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;F&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;product_name&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;H&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;type&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">setCellValue</span><span class="p">(</span><span class="s1">&#39;J&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">,</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;coin_type&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span><span class="p">(</span><span class="nv">$num</span><span class="o">&gt;</span><span class="mi">25</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$styleArray</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;borders&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;outline&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                            <span class="s1">&#39;borderStyle&#39;</span> <span class="o">=&gt;</span> <span class="nx">Border</span><span class="o">::</span><span class="na">BORDER_THIN</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                            <span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;argb&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;00000000&#39;</span><span class="p">],</span>                        <span class="p">],</span>
</span></span><span class="line"><span class="cl">                    <span class="p">],</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;alignment&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;horizontal&#39;</span> <span class="o">=&gt;</span> <span class="nx">Alignment</span><span class="o">::</span><span class="na">HORIZONTAL_CENTER</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="p">];</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$styleArray_</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;borders&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                        <span class="s1">&#39;outline&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                            <span class="s1">&#39;borderStyle&#39;</span> <span class="o">=&gt;</span> <span class="nx">Border</span><span class="o">::</span><span class="na">BORDER_THIN</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                            <span class="s1">&#39;color&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;argb&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;00000000&#39;</span><span class="p">],</span>                        <span class="p">],</span>
</span></span><span class="line"><span class="cl">                    <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="p">];</span>
</span></span><span class="line"><span class="cl">                <span class="c1">//设置超出部分样式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">mergeCells</span><span class="p">(</span><span class="s1">&#39;B&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="o">.</span><span class="s1">&#39;:C&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;B&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">mergeCells</span><span class="p">(</span><span class="s1">&#39;D&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="o">.</span><span class="s1">&#39;:E&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;D&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">mergeCells</span><span class="p">(</span><span class="s1">&#39;F&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="o">.</span><span class="s1">&#39;:G&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;F&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">mergeCells</span><span class="p">(</span><span class="s1">&#39;H&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="o">.</span><span class="s1">&#39;:I&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;H&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;J&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray_</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">getRowDimension</span><span class="p">(</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">setRowHeight</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$worksheet</span><span class="o">-&gt;</span><span class="na">getStyle</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="o">.</span><span class="s1">&#39;:J&#39;</span><span class="o">.</span><span class="nv">$num</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">applyFromArray</span><span class="p">(</span><span class="nv">$styleArray_</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$filename</span> <span class="o">=</span> <span class="nx">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nx">time</span><span class="p">())</span><span class="o">.</span><span class="nx">rand</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">9999</span><span class="p">)</span><span class="o">.</span> <span class="s2">&#34;.xlsx&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//第一种保存方式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="cm">/* $writer = new Xlsx($spreadsheet);//写入类型对象
</span></span></span><span class="line"><span class="cl"><span class="cm">        $filename=public_path().&#39;/phpoffice/&#39;.$filename;//文件路径
</span></span></span><span class="line"><span class="cl"><span class="cm">        $writer-&gt;save($filename);//写入*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">//第二种直接页面上显示下载
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Content-Disposition: attachment;filename=&#34;&#39;</span><span class="o">.</span><span class="nv">$filename</span> <span class="o">.</span> <span class="s1">&#39;.xlsx&#34;&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">header</span><span class="p">(</span><span class="s1">&#39;Cache-Control: max-age=0&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//注意createWriter($spreadsheet, &#39;Xls&#39;) 第二个参数首字母必须大写
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$writer</span> <span class="o">=</span> <span class="nx">IOFactory</span><span class="o">::</span><span class="na">createWriter</span><span class="p">(</span><span class="nv">$spreadsheet</span><span class="p">,</span> <span class="s1">&#39;Xlsx&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$writer</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">(</span><span class="s1">&#39;php://output&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//        return response(json_encode([&#39;status&#39;=&gt;1,&#39;msg&#39;=&gt;&#39;导出成功&#39;,&#39;data&#39;=&gt;$rows]));//ajax
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="效果">效果</h3>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190320-phpoffice-excel02.jpg" alt="完成效果图"></p>
<h3 id="结束语">结束语</h3>
<blockquote>
<p>摆脱悲观，拥抱满溢而出的希望，朝着梦想，准备出发。🍀</p>
</blockquote>
<p>参考：</p>
<p><a href="http://www.heibaiketang.com/blog/show/69.html">http://www.heibaiketang.com/blog/show/69.html</a></p>
<p><a href="https://blog.csdn.net/gc258_2767_qq/article/details/81003656">https://blog.csdn.net/gc258_2767_qq/article/details/81003656</a></p>
]]></content>
		</item>
		
		<item>
			<title>Notification之红标识提醒🚨‍</title>
			<link>https://blog.gookm.cn/posts/2019/20190315-laravel-notify/</link>
			<pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190315-laravel-notify/</guid>
			<description>导语 Laravel 自带了一套极具扩展性的消息通知系统，尤其还支持多种通知频道(这里我用的是数据库通知频道)，我们将利用此套系统来向用户发送消息提醒。
最终效果如下图所示：
开始 准备基本的功能开发 一个用户给另外一个用户发送消息，将信息存入数据库表（notify_tests表）
id msg send_id rev_id updated_at created_at 1 啊哈哈	哈 1 2 2019-03-15 02:34:13 2019-03-15 02:34:13 准备数据 通知数据库,存储所有通知信息 1.php artisan notifications:table 2.php artisan migrate 跟踪用户有多少未读通知(给user表加字段) 1.php artisan make:migration add_notification_count_to_users_table --table=users 2.//database/migrations/{$timestamp}_add_notification_count_to_users_table.php public function up() { Schema::table(&amp;#39;users&amp;#39;, function (Blueprint $table) { $table-&amp;gt;integer(&amp;#39;notification_count&amp;#39;)-&amp;gt;unsigned()-&amp;gt;default(0); }); } public function down() { Schema::table(&amp;#39;users&amp;#39;, function (Blueprint $table) { $table-&amp;gt;dropColumn(&amp;#39;notification_count&amp;#39;); }); } 3.php artisan migrate 生成通知类 php artisan make:notification MessageRecived 修改文件为以下：app/Notifications/TopicReplied.php &amp;lt;?</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<p>Laravel 自带了一套极具扩展性的消息通知系统，尤其还支持多种通知频道(这里我用的是数据库通知频道)，我们将利用此套系统来向用户发送消息提醒。</p>
<p>最终效果如下图所示：</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190315-laravel-notify01.png" alt="表单效果"></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190315-laravel-notify02.png" alt="消息列表效果"></p>
<h3 id="开始">开始</h3>
<h4 id="准备基本的功能开发">准备基本的功能开发</h4>
<p>一个用户给另外一个用户发送消息，将信息存入数据库表（<code>notify_tests</code>表）</p>
<table>
<thead>
<tr>
<th>id</th>
<th>msg</th>
<th>send_id</th>
<th>rev_id</th>
<th>updated_at</th>
<th>created_at</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>啊哈哈	哈</td>
<td>1</td>
<td>2</td>
<td>2019-03-15 02:34:13</td>
<td>2019-03-15 02:34:13</td>
</tr>
</tbody>
</table>
<h4 id="准备数据">准备数据</h4>
<ul>
<li>通知数据库,存储所有通知信息</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">1.php artisan notifications:table
</span></span><span class="line"><span class="cl">2.php artisan migrate
</span></span></code></pre></div><ul>
<li>跟踪用户有多少未读通知(给<code>user</code>表加字段)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mf">1.</span><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">migration</span> <span class="nx">add_notification_count_to_users_table</span> <span class="o">--</span><span class="nx">table</span><span class="o">=</span><span class="nx">users</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="mf">2.</span><span class="c1">//database/migrations/{$timestamp}_add_notification_count_to_users_table.php
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">up</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Schema</span><span class="o">::</span><span class="na">table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nx">Blueprint</span> <span class="nv">$table</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">integer</span><span class="p">(</span><span class="s1">&#39;notification_count&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">unsigned</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">default</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">down</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Schema</span><span class="o">::</span><span class="na">table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nx">Blueprint</span> <span class="nv">$table</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">dropColumn</span><span class="p">(</span><span class="s1">&#39;notification_count&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mf">3.</span><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">migrate</span>
</span></span></code></pre></div><h4 id="生成通知类">生成通知类</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:notification MessageRecived
</span></span></code></pre></div><ul>
<li>修改文件为以下：<code>app/Notifications/TopicReplied.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Notifications</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\NotifyTest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\User</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Bus\Queueable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Notifications\Notification</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Contracts\Queue\ShouldQueue</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Notifications\Messages\MailMessage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">MessageRecived</span> <span class="k">extends</span> <span class="nx">Notification</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">Queueable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="nv">$notifyTest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">NotifyTest</span> <span class="nv">$notifyTest</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">=</span><span class="nv">$notifyTest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">via</span><span class="p">(</span><span class="nv">$notifiable</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;database&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">toDatabase</span><span class="p">(</span><span class="nv">$notifiable</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 存入数据库里的数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$send_name</span><span class="o">=</span><span class="p">(</span><span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">-&gt;</span><span class="na">send_id</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$rev_name</span><span class="o">=</span><span class="p">(</span><span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">-&gt;</span><span class="na">rev_id</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">-&gt;</span><span class="na">msg</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;send_id&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">-&gt;</span><span class="na">send_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;send_name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$send_name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;rev_id&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notifyTest</span><span class="o">-&gt;</span><span class="na">rev_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;rev_name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$rev_name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">toMail</span><span class="p">(</span><span class="nv">$notifiable</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="k">new</span> <span class="nx">MailMessage</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="o">-&gt;</span><span class="na">line</span><span class="p">(</span><span class="s1">&#39;The introduction to the notification.&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="o">-&gt;</span><span class="na">action</span><span class="p">(</span><span class="s1">&#39;Notification Action&#39;</span><span class="p">,</span> <span class="nx">url</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                    <span class="o">-&gt;</span><span class="na">line</span><span class="p">(</span><span class="s1">&#39;Thank you for using our application!&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">toArray</span><span class="p">(</span><span class="nv">$notifiable</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="触发通知">触发通知</h4>
<ul>
<li>当用户给另外一个用户发送消息后，通知到接收用户。故触发通知的时机是：『消息发送成功后』，在模型监控器里（<code>app/Observers/NotifyTestObserver.php</code>），我们可以在 <code>created</code> 方法里实现此部分代码。</li>
</ul>
<p>1.创建新的观察者类</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:observer NotifyTestObserver --model<span class="o">=</span>NotifyTest
</span></span></code></pre></div><p>2.<code>app/Observers/NotifyTestObserver.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Observers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Notifications\MessageRecived</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\NotifyTest</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\User</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">NotifyTestObserver</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">created</span><span class="p">(</span><span class="nx">NotifyTest</span> <span class="nv">$notifyTest</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 通知该用户有新的消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">// User 模型中使用了 trait —— Notifiable，它包含着一个可以用来发通知的方法 notify()
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">(</span><span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$notifyTest</span><span class="o">-&gt;</span><span class="na">rev_id</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">notify</span><span class="p">(</span><span class="k">new</span> <span class="nx">MessageRecived</span><span class="p">(</span><span class="nv">$notifyTest</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>3.<code>app/User.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Auth</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">User</span> <span class="k">extends</span> <span class="nx">Authenticatable</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">Notifiable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">notify</span> <span class="k">as</span> <span class="k">protected</span> <span class="nx">laravelNotify</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">notify</span><span class="p">(</span><span class="nv">$instance</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 如果要通知的人是当前用户，就不必通知了！
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">id</span> <span class="o">==</span> <span class="nx">Auth</span><span class="o">::</span><span class="na">id</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 只有数据库类型通知才需提醒，直接发送 Email 或者其他的都 Pass
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">method_exists</span><span class="p">(</span><span class="nv">$instance</span><span class="p">,</span> <span class="s1">&#39;toDatabase&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">increment</span><span class="p">(</span><span class="s1">&#39;notification_count&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">laravelNotify</span><span class="p">(</span><span class="nv">$instance</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="消息列表">消息列表</h4>
<ul>
<li>清除未读消息标示，在 <code>User</code> 模型中新增 <code>markAsRead()</code> 方法</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">markAsRead</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">notification_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">unreadNotifications</span><span class="o">-&gt;</span><span class="na">markAsRead</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>清空未读提醒的状态，app\Http\Controllers\TestController</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//未读消息列表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">msgList</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$msgLists</span><span class="o">=</span><span class="nx">\Auth</span><span class="o">::</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">notifications</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">paginate</span><span class="p">(</span><span class="mi">20</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 标记为已读，未读数量清零
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">\Auth</span><span class="o">::</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">markAsRead</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;msg_list&#39;</span><span class="p">,</span><span class="nx">compact</span><span class="p">(</span><span class="s1">&#39;msgLists&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>消息标识html代码：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">li</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;nav-item notification-badge&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">a</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;nav-link mr-3 badge badge-pill badge-{{ Auth::user()-&gt;notification_count &gt; 0 ? &#39;hint&#39; : &#39;secondary&#39; }} text-white&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{route(&#39;msgList&#39;)}}&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        {{auth(&#39;web&#39;)-&gt;user()-&gt;notification_count}}
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span></code></pre></div><h3 id="结束语">结束语</h3>
<p>项目开发中遇到了类似的功能，所以也花时间做了个<code>DEMO</code>，记录一下。</p>
<blockquote>
<p>今天是你余生中最年轻的一天。💪</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>性能优化之MySQL优化🚴‍</title>
			<link>https://blog.gookm.cn/posts/2019/20190309-mysql-opt/</link>
			<pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190309-mysql-opt/</guid>
			<description>SQL语句优化 慢查询 如何发现有问题的SQL？使用mysql慢查询日志对有效率问题的SQL进行监控
//查看慢查询日志是否开启 show variables like &amp;#39;slow_query_log&amp;#39;; //查看慢查询日志存储位置 show variables like &amp;#39;slow_query_log_file&amp;#39;; //开启慢查询日志 set global slow_query_log=on; //指定慢查询日志存储位置 set global show_query_log_file=&amp;#39;/var/lib/mysql/homestead-slow.log&amp;#39;; //记录没有使用索引的sql set global log_queries_not_using_indexes=on; //记录查询超过1s的sql set global long_query_time=1; 慢查询日志所包含的内容：
#User@Host:root[root] @localhost[]//执行sql的主机信息 #Query_time:0.0000024 Lock_time:0.00 Rows_sent:0 Rows_esamined:0//sql的执行信息 SET timestamp=1402389324//sql执行时间 select * from store; //sql的内容 MySQL慢查询日志分析工具之mysqldumpslow（mysql官方）
安装完MySQL后，默认就带了mysqldumpslow，很常用的一个工具。
//查看参数列表 mysqldumpslow -h //分析慢查询日志中前三条比较慢的sql mysqldumpslow -t 3 /var/lib/mysql/homestead-slow.log | more //输出样式效果 Count:1 Time:0.00s Lock=0.00s Rows=10.0 root[rppt]@localhost select * from store MySQL慢查询日志分析工具之pt-query-digest
分析结果比mysqldumpslow更详细全面
//输出到文件 pt-query-digest slow-log &amp;gt; slow_log.</description>
			<content type="html"><![CDATA[<h3 id="sql语句优化">SQL语句优化</h3>
<h4 id="慢查询">慢查询</h4>
<p>如何发现有问题的SQL？使用mysql慢查询日志对有效率问题的SQL进行监控</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//查看慢查询日志是否开启
</span></span><span class="line"><span class="cl">show variables like &#39;slow_query_log&#39;;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//查看慢查询日志存储位置
</span></span><span class="line"><span class="cl">show variables like &#39;slow_query_log_file&#39;;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//开启慢查询日志
</span></span><span class="line"><span class="cl">set global slow_query_log=on;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//指定慢查询日志存储位置
</span></span><span class="line"><span class="cl">set global show_query_log_file=&#39;/var/lib/mysql/homestead-slow.log&#39;;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//记录没有使用索引的sql
</span></span><span class="line"><span class="cl">set global log_queries_not_using_indexes=on;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//记录查询超过1s的sql
</span></span><span class="line"><span class="cl">set global long_query_time=1;
</span></span></code></pre></div><p>慢查询日志所包含的内容：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">#User@Host:root[root] @localhost[]//执行sql的主机信息
</span></span><span class="line"><span class="cl">#Query_time:0.0000024 Lock_time:0.00 Rows_sent:0 Rows_esamined:0//sql的执行信息
</span></span><span class="line"><span class="cl">SET timestamp=1402389324//sql执行时间
</span></span><span class="line"><span class="cl">select * from store; //sql的内容
</span></span></code></pre></div><p><strong>MySQL慢查询日志分析工具之mysqldumpslow（mysql官方）</strong></p>
<p>安装完MySQL后，默认就带了mysqldumpslow，很常用的一个工具。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//查看参数列表
</span></span><span class="line"><span class="cl">mysqldumpslow -h
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//分析慢查询日志中前三条比较慢的sql
</span></span><span class="line"><span class="cl">mysqldumpslow -t 3 /var/lib/mysql/homestead-slow.log | more 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//输出样式效果
</span></span><span class="line"><span class="cl">Count:1 Time:0.00s Lock=0.00s Rows=10.0
</span></span><span class="line"><span class="cl">root[rppt]@localhost
</span></span><span class="line"><span class="cl">select * from store
</span></span></code></pre></div><p><strong>MySQL慢查询日志分析工具之pt-query-digest</strong></p>
<p>分析结果比mysqldumpslow更详细全面</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//输出到文件
</span></span><span class="line"><span class="cl">pt-query-digest slow-log &gt; slow_log.report
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//输出到数据表
</span></span><span class="line"><span class="cl">pt-query-digest slow.log -review \
</span></span><span class="line"><span class="cl">    h=127.0.0.1,D=test,p=root,P=3306,u=root,t=query_review \
</span></span><span class="line"><span class="cl">    --create-reviewtable \
</span></span><span class="line"><span class="cl">    --review-history t=hostname_slow
</span></span></code></pre></div><p>基本使用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//查看参数列表
</span></span><span class="line"><span class="cl">pt-query-digest --help
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//分析慢查询日志中前三条比较慢的sql
</span></span><span class="line"><span class="cl">pt-query-digest /var/lib/mysql/homestead-slow.log | more 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//输出分为三部分
</span></span><span class="line"><span class="cl">1.显示除了日志的时间范围，以及总的sql数量和不同的sql数量
</span></span><span class="line"><span class="cl">2.Response Time:响应时间占比 Calls:sql执行次数
</span></span><span class="line"><span class="cl">3.sql的具体日志
</span></span></code></pre></div><p>如何通过慢查询日志发现有问题的SQL？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.查询次数多且每次查询占用时间长的SQL
</span></span><span class="line"><span class="cl">通常为pt-query-digest分析的前几个查询
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.IO大的SQL（数据库主要瓶颈出现在IO层次）
</span></span><span class="line"><span class="cl">注意pt-query-digest分析中的Rows examine项
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.未命中索引的SQL
</span></span><span class="line"><span class="cl">注意pt-query-digest分析中的Rows examine和Rows Send的对比
</span></span></code></pre></div><p>通过explain查询和分析SQL的执行计划</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="k">explain</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="n">customer_id</span><span class="p">,,</span><span class="n">first_name</span><span class="p">,</span><span class="n">last_name</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">customer</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><table>
<thead>
<tr>
<th>Column 1</th>
<th>Column 2</th>
<th>Column 3</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td>select_type</td>
<td>SIMPLE</td>
<td></td>
</tr>
<tr>
<td>table</td>
<td>customer</td>
<td>该数据关于哪张表。</td>
</tr>
<tr>
<td>type</td>
<td>ALL</td>
<td>示连接使用了何种类型。从好到差const,eq_reg,ref,range,index和ALL。</td>
</tr>
<tr>
<td>possible_keys</td>
<td>NULL</td>
<td>可能应用在该表的索引，空，没有可能的索引。</td>
</tr>
<tr>
<td>key</td>
<td>NULL</td>
<td>实际使用的索引。空，没有使用索引。</td>
</tr>
<tr>
<td>key_len</td>
<td>NULL</td>
<td>使用的索引长度。不损失精度下，越短越好。</td>
</tr>
<tr>
<td>ref</td>
<td>NULL</td>
<td>显示索引的哪一列被使用了，常数。</td>
</tr>
<tr>
<td>rows</td>
<td>671</td>
<td>mysql认为必须检查的数据的行数。</td>
</tr>
<tr>
<td>Extra</td>
<td>'</td>
<td>注意：Using filesort,Using tempoary</td>
</tr>
</tbody>
</table>
<h4 id="count和max的优化">Count()和Max()的优化</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//查询最后支付时间--优化max()函数
</span></span><span class="line"><span class="cl">explain select max(payment_date) from payment;
</span></span><span class="line"><span class="cl">create index idx_paydate on payment(payment_data);//给payment_date建立索引(覆盖索引)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//在一条SQL中同时查出2006年和2007年电影的数量--优化Count()函数
</span></span><span class="line"><span class="cl">select count(release_year=&#39;2006&#39; or null) as &#39;2006年电影数量&#39;，count(release_year=&#39;2007&#39; or null) as &#39;2007年电影数量&#39; from film;
</span></span><span class="line"><span class="cl">//有关count()函数
</span></span><span class="line"><span class="cl">https://blog.csdn.net/wendychiang1991/article/details/70909958/
</span></span></code></pre></div><h4 id="子查询优化">子查询优化</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">通常情况下，需要把子查询优化为join查询，但在优化时要注意关联键是否有一对多的关系，要注意重复数据。(distinct去重)
</span></span><span class="line"><span class="cl">//查询sandra出演的所有影片
</span></span><span class="line"><span class="cl">explain select title,release_year,LENGTH from film
</span></span><span class="line"><span class="cl">where film_id in (
</span></span><span class="line"><span class="cl">    select film_id from film_actor where actor_id in (
</span></span><span class="line"><span class="cl">        select actor_id from actor where first_name=&#39;sandra&#39;
</span></span><span class="line"><span class="cl">    )
</span></span><span class="line"><span class="cl">);
</span></span></code></pre></div><h4 id="group-by的优化">group by的优化</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//改前 临时表
</span></span><span class="line"><span class="cl">explain select actor.first_name,actor_last_name,count(*) from sakila.film_actor
</span></span><span class="line"><span class="cl">inner join sakila.actor USING(actor_id)
</span></span><span class="line"><span class="cl">group by film_actor.actor_id;
</span></span><span class="line"><span class="cl">//改后 结合子查询 索引
</span></span><span class="line"><span class="cl">explain select actor.first_name,actor.last_name,c.cnt from sakila.film_actor
</span></span><span class="line"><span class="cl">inner join (
</span></span><span class="line"><span class="cl">select actor_id,count(*) as cnt from sakila.film_actor group by actor_id) as c USING(actor_id);
</span></span></code></pre></div><h4 id="limit优化">limit优化</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">limit常用于分页处理，时常会伴随order by 从句使用，因此大多时候会使用Filesorts这样会造成大量的IO问题。
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">//文件排序，IO大
</span></span><span class="line"><span class="cl">explain select film_id,description from sakila.film order by title limit 50,5;
</span></span><span class="line"><span class="cl">1.优化：使用有索引的列或主键进行order by操作（order by film_id）
</span></span><span class="line"><span class="cl">2.记录上次返回的主键，在下次查询的时候用主键过滤，避免了数据量大时扫描过多的记录
</span></span><span class="line"><span class="cl">select film_id,description from sakila.film where film_if&gt;55 and film_id&lt;=60 order by film_id limit 1,5; 
</span></span><span class="line"><span class="cl">页数越大，IO越大
</span></span></code></pre></div><h3 id="索引优化">索引优化</h3>
<h4 id="如何选择合适的列建立索引">如何选择合适的列建立索引？</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.在where从句，group by从句，order by从句，on从句中出现的列(select)
</span></span><span class="line"><span class="cl">2.索引字段越小越好(表每页数据才会更多，IO效率会更高)
</span></span><span class="line"><span class="cl">3.离散度大的列放到联合索引的前面
</span></span><span class="line"><span class="cl">select * from payment where staff_id=2 and customer_id=584;
</span></span><span class="line"><span class="cl">index(staff_id,customer_id)好？还是index(customer_id,staff_id)好？
</span></span><span class="line"><span class="cl">由于customer_id的离散度更大(重复率小,可选择性更大)，所以应该使用index(customer_id,staff_id)
</span></span></code></pre></div><h4 id="索引优化sql的方法">索引优化SQL的方法</h4>
<p>索引的维护及优化&ndash;重复及冗余索引</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">冗余索引是指多个索引的前缀列相同，或是在联合索引中包含了主键的索引。如下：key(name,id)就是一个冗余索引
</span></span><span class="line"><span class="cl">create table test(
</span></span><span class="line"><span class="cl">id int not null primary key,
</span></span><span class="line"><span class="cl">name varchar(10) not null,
</span></span><span class="line"><span class="cl">key(name,id)
</span></span><span class="line"><span class="cl">)engine=innodb;
</span></span><span class="line"><span class="cl">//可以删除冗余索引，达到优化效果。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">使用pt-duplicate-key-checker工具检查重复及冗余索引
</span></span><span class="line"><span class="cl">pt-duplicate-key-checker \
</span></span><span class="line"><span class="cl">-uroot \
</span></span><span class="line"><span class="cl">-p &#39;&#39; \
</span></span><span class="line"><span class="cl">-h 127.0.0.1
</span></span></code></pre></div><p>索引维护的方法&ndash;删除不用索引</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目前mysql中还没有记录索引的使用情况，但是在PerconMySQL和MariaDB中可通过INDEX_STATISTICS表来查看哪些索引未使用，但在mysql中目前只能通过慢查日志配合pt-index-usage工具来进行索引使用情况分析。
</span></span><span class="line"><span class="cl">pt-index-usage \
</span></span><span class="line"><span class="cl">    -uroot -p&#39;&#39; \
</span></span><span class="line"><span class="cl">    mysql-slow.log
</span></span></code></pre></div><h3 id="数据库表结构优化">数据库表结构优化</h3>
<h4 id="选择合适的数据类型">选择合适的数据类型</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.使用可以存下你的数据的最小的数据类型
</span></span><span class="line"><span class="cl">2.使用简单的数据类型。int要比varchar类型在mysql处理上更简单
</span></span><span class="line"><span class="cl">3.尽可能的使用not null定义字段
</span></span><span class="line"><span class="cl">4.尽量少用text类型，非用不可时最好考虑分表
</span></span><span class="line"><span class="cl">*使用int来存储日志时间，利用FROM_UNIXTINE()(得到日期),UNIX_TIMESTAMP()(得到时间戳)两个函数来进行转换
</span></span><span class="line"><span class="cl">*使用bigint来存ip地址，利用INET_ATON(),INET_NTOA()两个函数来进行转换
</span></span></code></pre></div><h4 id="表的范式化和反范式化">表的范式化和反范式化</h4>
<p>范式化是指数据库设计的规范，目前说到范式化一般是指第三设计范式，也就是要求数据表中不存在非关键字段对任意候选关键字段的传递函数依赖则符合第三范式。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">不符合第三范式要求的表存在下列问题：
</span></span><span class="line"><span class="cl">1.数据冗余：（分类，分类描述）对于每一个商品都会进行记录
</span></span><span class="line"><span class="cl">2.数据的插入异常
</span></span><span class="line"><span class="cl">3.数据的更新异常
</span></span><span class="line"><span class="cl">4.数据的删除异常
</span></span></code></pre></div><p>反范式化是指为了查询效率的考虑把原本符合第三范式的表适当的增加冗余，以达到优化查询的目的，反范式化是一种以空间来换取时间的操作。</p>
<h4 id="表的拆分">表的拆分</h4>
<p>垂直拆分</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">所谓的垂直拆分，就是把原来一个有很多列的表拆分成多个表，这解决了表的宽度问题。通常垂直拆分可以按以下原则进行：
</span></span><span class="line"><span class="cl">1.把不常用的字段单独存放到一个表中
</span></span><span class="line"><span class="cl">2.把大字段独立存放到一个表中
</span></span><span class="line"><span class="cl">3.把经常一起使用的字段放到一起
</span></span></code></pre></div><p>水平拆分</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">表的水平拆分是为了解决单表的数据量过大的问题，水平拆分的表每一个表的结构都是完全一致的。
</span></span><span class="line"><span class="cl">常用的水平拆分方法为：
</span></span><span class="line"><span class="cl">1.对id进行hash运算，如果要拆分成5个表则使用mod(id,5)去除0-4个值
</span></span><span class="line"><span class="cl">2.针对不同的hashID把数据存到不同的表中
</span></span></code></pre></div><h3 id="系统配置优化">系统配置优化</h3>
<h4 id="操作系统配置优化">操作系统配置优化</h4>
<p>数据库是基于操作系统的，目前大多数mysql都是安装在Linux系统之上，所以对于操作系统的一些参数配置也会影响到MYSQL的性能。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">网络方面的配置，要修改/etc/stysctl.conf文件
</span></span><span class="line"><span class="cl">#增加tcp支持的队列数
</span></span><span class="line"><span class="cl">net.ipv4.tcp_max_syn_backlog = 65535
</span></span><span class="line"><span class="cl">#减少断开链接是，资源回收
</span></span><span class="line"><span class="cl">net.ipv4.tcp_max_tw_buckets = 8000
</span></span><span class="line"><span class="cl">net.ipv4.tcp_tw_reuse = 1
</span></span><span class="line"><span class="cl">net.ipv4.tcp_tw_recycle = 1
</span></span><span class="line"><span class="cl">net.ipv4.tcp_fin_timeout = 10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">打开文件数的限制，可以使用ulimit -a 查看目录的各位限制，可以修改/etcsecurity/limitsconf文件，增加一下内容以修改打开文件数量的限制
</span></span><span class="line"><span class="cl">*soft nofile 65535
</span></span><span class="line"><span class="cl">*hard nofile 65535
</span></span><span class="line"><span class="cl">除此之外最好在mysql服务器上关闭iptables，selinux等防火墙软件。
</span></span></code></pre></div><h4 id="mysql数据库优化">MySQL数据库优化</h4>
<p>MySQL配置文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">mysql可以通过启动时指定配置参数和使用配置文件两种方法进行配置，在大数情况下配置文件位于/etc/my.cnf或是/etc/mysql/my.cnf在windows系统配置文件可以是位于C:/windows/my.ini文件，mysql查找配置文件的顺序可以通过一下方法获得
</span></span><span class="line"><span class="cl">/usr/sbin/mysqld --verbose --help | grep -A 1 &#39; Default options &#39;
</span></span></code></pre></div><p>MySQL配置文件&ndash;常用参数说明</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.innodb_buffer_pool_size &gt;= total MB
</span></span><span class="line"><span class="cl">非常重要的一个参数，用于配置innodb的缓冲池，如果数据库中只有innodb表，则推荐配置量为总内存的75%
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.innodb_buffer_pool__instances
</span></span><span class="line"><span class="cl">MySQL5.5中新增加参数，可以控制缓冲池的个数，默认情况下只有一个缓冲池。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.innodb_log_buffer_size
</span></span><span class="line"><span class="cl">innodb log缓冲的大小，由于日志最长每秒钟就会刷新所以一般不用太大。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4.innodb_flush_log_at_trx_commit
</span></span><span class="line"><span class="cl">关键参数，对innodb的IO效率影响很大。默认值为1，可取0，1，2三个值，一般建议为2，但如果数据安全性要求比较高则使用默认值1.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">5.innodb_read_io_threads   innodb_write_io_threads
</span></span><span class="line"><span class="cl">以上两个参数决定了Innodb读写的IO进程数，默认为4.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">6.innodb_file_per_table
</span></span><span class="line"><span class="cl">关键参数，控制innodb每一个表使用独立的表空间，默认为off，也就是所有表都会建立在共享表空间中。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">7.innodb_stats_on_metadata
</span></span><span class="line"><span class="cl">决定了mysql在什么情况下会刷新innodb表的统计信息。
</span></span></code></pre></div><h4 id="第三方配置工具">第三方配置工具</h4>
<p>🔗链接地址：https://tools.percona.com/wizard</p>
<h3 id="服务器硬件优化">服务器硬件优化</h3>
<p>如何选择cpu？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.mysql有一些工作只能使用到单核cpu，Replicate,SQL...
</span></span><span class="line"><span class="cl">2.mysql对cpu核数的支持并不是越多越快。mysql5.5使用的服务器不要超过30核
</span></span></code></pre></div><p>磁盘IO优化</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">常用RAID级别简介
</span></span><span class="line"><span class="cl">RAID0：也称条带，就是把多个磁盘链接成一个硬盘使用，这个级别IO最好
</span></span><span class="line"><span class="cl">RAID1：也称镜像，要求至少有两个磁盘，每组磁盘存储的数据相同
</span></span><span class="line"><span class="cl">RAID5：也是把多个硬盘合并成一个逻辑盘使用，数据读写时会建立奇偶校验信息，分别存储在不同磁盘上。
</span></span><span class="line"><span class="cl">RAID1+0：就是RAID1和RAID0的结合。同时具备两个级别的优缺点。一般建议数据库使用这个级别。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">SNA和NAT是否适合数据库？
</span></span><span class="line"><span class="cl">1.常用于高可用解决方案
</span></span><span class="line"><span class="cl">2.顺序读写效率很高，但是随机读写不如人意
</span></span><span class="line"><span class="cl">3.数据库随机读写比率很高
</span></span></code></pre></div><p>👇</p>
<h3 id="结束语">结束语</h3>
<p>从五个不同层次优化mysql性能，较为基础，但是也很实用😊。**这篇是在学习慕课网《性能优化之MySQL优化》视频时做的笔记，视频地址：**<a href="https://www.imooc.com/learn/194">https://www.imooc.com/learn/194</a></p>
<p>📑笔记文档下载地址：https://pan.baidu.com/s/1YraBQspD-VIrAl4BFaej8A
提取码：baq5</p>
]]></content>
		</item>
		
		<item>
			<title>使用Elasticsearch做引擎，Scout全文搜索🔍</title>
			<link>https://blog.gookm.cn/posts/2019/20190308-laravel-elasticsearch/</link>
			<pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190308-laravel-elasticsearch/</guid>
			<description>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便
准备 1、安装测试Laravel5.5用于测试
composer create-project --prefer-dist laravel/laravel test &amp;#34;5.5.*&amp;#34; 2、安装运行es 链接地址，点开链接，根据自己的系统下载安装包，里面关于怎么样安装运行都说的比较清楚。下载后解压。由于我用的是Homestead环境，自带了es。
cd elasticsearch-6.4.2 //进入到解压目录 ./bin/elasticsearch //本地运行es Homestead环境 sudo systemctl restart elasticsearch.service //启动 curl http://127.0.0.1:9200/ //检测是否启动成功 sudo /usr/share/elasticsearch/bin/elasticsearch-plugin list //查看elasticsearch-analysis-ik 中文分词插件 sudo systemctl disable elasticsearch.service //关闭 Elasticsearch 开机启动 开始 1、进入项目目录
cd test 2、安装Laravel scout 全文搜索包
composer require laravel/scout=5.0 注意：安装5.0版本需要做如下修改：
/vendor/laravel/scout/src/Searchable.php 有一个getScoutModelsByIds()方法的这段代码注释掉就可以了。 if ($builder-&amp;gt;queryCallback) { call_user_func($builder-&amp;gt;queryCallback, $query); } 将laravel/scout 5.0.0版本换成 laravel/scout 5.0.3即可解决Undefined property: Laravel\Scout\Builder::$queryCallback报错问题。不用手动修改源码。
5.0.3版本的Laravel\Scout\Builder类在5.0.0基础上增加了$queryCallback属性并做了其他修改。
3、注册服务提供器
&amp;#39;providers&amp;#39; =&amp;gt; [ ... Laravel\Scout\ScoutServiceProvider::class, ], 4、生成配置文件</description>
			<content type="html"><![CDATA[<blockquote>
<p>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便</p>
</blockquote>
<h3 id="准备">准备</h3>
<p>1、安装测试<code>Laravel5.5</code>用于测试</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel <span class="nb">test</span> <span class="s2">&#34;5.5.*&#34;</span>
</span></span></code></pre></div><p>2、安装运行<code>es</code> 链接地址，点开链接，根据自己的系统下载安装包，里面关于怎么样安装运行都说的比较清楚。下载后解压。由于我用的是<code>Homestead</code>环境，自带了<code>es</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> elasticsearch-6.4.2 //进入到解压目录
</span></span><span class="line"><span class="cl">./bin/elasticsearch //本地运行es
</span></span></code></pre></div><ul>
<li><code>Homestead</code>环境</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo systemctl restart elasticsearch.service //启动
</span></span><span class="line"><span class="cl">curl http://127.0.0.1:9200/  //检测是否启动成功
</span></span><span class="line"><span class="cl">sudo /usr/share/elasticsearch/bin/elasticsearch-plugin list //查看elasticsearch-analysis-ik 中文分词插件
</span></span><span class="line"><span class="cl">sudo systemctl disable elasticsearch.service  //关闭 Elasticsearch 开机启动
</span></span></code></pre></div><h3 id="开始">开始</h3>
<p>1、进入项目目录</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> <span class="nb">test</span>
</span></span></code></pre></div><p>2、安装<code>Laravel scout</code> 全文搜索包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require laravel/scout<span class="o">=</span>5.0
</span></span></code></pre></div><p><strong>注意：安装5.0版本需要做如下修改：</strong></p>
<ul>
<li><code>/vendor/laravel/scout/src/Searchable.php </code>有一个<code>getScoutModelsByIds()</code>方法的这段代码注释掉就可以了。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">queryCallback</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">call_user_func</span><span class="p">(</span><span class="nv">$builder</span><span class="o">-&gt;</span><span class="na">queryCallback</span><span class="p">,</span> <span class="nv">$query</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>
<p>将<code>laravel/scout 5.0.0</code>版本换成 <code>laravel/scout 5.0.3</code>即可解决<code>Undefined property: Laravel\Scout\Builder::$queryCallback</code>报错问题。不用手动修改源码。</p>
</li>
<li>
<p>5.0.3版本的<code>Laravel\Scout\Builder</code>类在5.0.0基础上增加了<code>$queryCallback</code>属性并做了其他修改。</p>
</li>
</ul>
<p>3、注册服务提供器</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;providers&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Laravel\Scout\ScoutServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>4、生成配置文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">//Laravel 5.5 其实我们不用这么麻烦！直接执行如下命令。这条命令会给你一个list,让你选择publish哪个选项。
</span></span><span class="line"><span class="cl">php artisan vendor:publish
</span></span></code></pre></div><p>5、因为要使用<code>es</code>做搜索引擎，所以我们要用到一个叫<code>tamayo/laravel-scout-elastic</code>的包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require tamayo/laravel-scout-elastic<span class="o">=</span>4.0
</span></span></code></pre></div><p>6、添加服务提供器到<code>config/app.php</code>的<code>providers</code>数组中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;providers&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="o">...</span>
</span></span><span class="line"><span class="cl">    <span class="nx">ScoutEngines\Elasticsearch\ElasticsearchProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>7、配置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//在config/scout.php文件中添加如下代码。默认使用的是algolia引擎，我们要使用es做引擎
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;algolia&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ALGOLIA_APP_ID&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;secret&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ALGOLIA_SECRET&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="c1">//这里是添加的代码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="s1">&#39;elasticsearch&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;index&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ELASTICSEARCH_INDEX&#39;</span><span class="p">,</span> <span class="s1">&#39;laravel&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;hosts&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;ELASTICSEARCH_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;http://127.0.0.1:9200&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"> <span class="p">],</span>
</span></span></code></pre></div><p>8、配置<code>.env</code>文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># scout配置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">SCOUT_DRIVER=elasticsearch  //选择搜索引擎</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">SCOUT_PREFIX=</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># elasticsearch 配置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">ELASTICSEARCH_INDEX=estest  //设置索引</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># elasticsearch服务器地址</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">ELASTICSEARCH_HOST=http://127.0.0.1:9200  //我用的就是本地的</span><span class="w">
</span></span></span></code></pre></div><ul>
<li>因为这步不严谨遇到的报错（<code>php artisan make:model</code>）：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Dotenv</span> <span class="nx">values</span> <span class="nx">containing</span> <span class="nx">spaces</span> <span class="nx">must</span> <span class="nx">be</span> <span class="nx">surrounded</span> <span class="nx">by</span> <span class="nx">quotes</span><span class="o">.</span>
</span></span></code></pre></div><ul>
<li>解决：不能有空格，如果有空格需要加上双引号，如<code>&quot;ELASTICSEARCH_INDEX=estest&quot;</code></li>
</ul>
<h3 id="在项目中实现搜索功能">在项目中实现搜索功能</h3>
<p>1、进入项目，创建<code>Model</code>文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> <span class="nb">test</span>
</span></span><span class="line"><span class="cl">php artisan make:model Models/Post
</span></span></code></pre></div><p>2、打开<code>Models/Post.php</code>,进行设置<code>type</code>,和你要搜索对字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Models</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Database\Eloquent\Model</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Scout\Searchable</span><span class="p">;</span><span class="c1">//这个trait一定要引用的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Post</span> <span class="k">extends</span> <span class="nx">Model</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">Searchable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$guarded</span> <span class="o">=</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 定义索引里面的类型，上文我们说过，可以把type理解成一个数据表。我们现在要做的就是把我们所有的要全文搜索的字段都存入到es中的一个叫&#39;_doc&#39;的表中。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">searchableAs</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s1">&#39;_doc&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 定义有那些字段需要搜索
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">public</span> <span class="k">function</span> <span class="nf">toSearchableArray</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//user_name加上前缀以区别。因为不同的表里可能会有相同的字段。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">//mysql中的字段是name,email,created_at。在es中我们存储的user_name，user_email,user_created_at。是可以自定义的。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;post_title&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;post_description&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">description</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;post_content&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">content</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;post_html_content&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">html_content</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>3、把<code>mysql</code>中数据同步到<code>es</code>中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//把现有的数据同步es中一个索引叫‘estest’，类型叫‘_doc’
</span></span></span><span class="line"><span class="cl"><span class="c1">//把User中到数据同步到es中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">scout</span><span class="o">:</span><span class="nx">import</span> <span class="s2">&#34;App\Models\Post&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">//显示如下，即为导入成功：
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Imported</span> <span class="p">[</span><span class="nx">App\Models\Post</span><span class="p">]</span> <span class="nx">models</span> <span class="nx">up</span> <span class="nx">to</span> <span class="nx">ID</span><span class="o">:</span> <span class="mi">113</span>
</span></span><span class="line"><span class="cl"><span class="nx">All</span> <span class="p">[</span><span class="nx">App\Models\Post</span><span class="p">]</span> <span class="nx">records</span> <span class="nx">have</span> <span class="nx">been</span> <span class="nx">imported</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//如果你已经做过同步了，然后你不小心手动删除或者增加了mysql中到数据，那么你要清空一下es的数据,再从新导入数据。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">scout</span><span class="o">:</span><span class="nx">flush</span> <span class="s2">&#34;App\Models\Post&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">//显示如下，即为清空成功：
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Flushed</span> <span class="p">[</span><span class="nx">App\Models\Post</span><span class="p">]</span> <span class="nx">models</span> <span class="nx">up</span> <span class="nx">to</span> <span class="nx">ID</span><span class="o">:</span> <span class="mi">116</span>
</span></span><span class="line"><span class="cl"><span class="nx">All</span> <span class="p">[</span><span class="nx">App\Models\Post</span><span class="p">]</span> <span class="nx">records</span> <span class="nx">have</span> <span class="nx">been</span> <span class="nx">flushed</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//重新导入
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">scout</span><span class="o">:</span><span class="nx">import</span> <span class="s2">&#34;App\Models\Post&#34;</span>
</span></span></code></pre></div><p>4、搜索例子</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> * 获取搜索结果并返回 TestController
</span></span></span><span class="line"><span class="cl"><span class="cm"> * */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">elasticSearch</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$posts</span> <span class="o">=</span> <span class="nx">Post</span><span class="o">::</span><span class="na">search</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">input</span><span class="p">(</span><span class="s1">&#39;search&#39;</span><span class="p">))</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">(</span><span class="nx">json_encode</span><span class="p">([</span><span class="s1">&#39;status&#39;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;msg&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;ok&#39;</span><span class="p">,</span><span class="s1">&#39;data&#39;</span><span class="o">=&gt;</span><span class="nv">$posts</span><span class="p">]));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>5、效果展示：</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190308-laravel-elasticsearch01.png" alt="搜索前效果图"></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190308-laravel-elasticsearch02.png" alt="搜索后效果图"></p>
<h3 id="几个基本的概念">几个基本的概念</h3>
<table>
<thead>
<tr>
<th>Column 1</th>
<th>Column 2</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Cluster</code></td>
<td>集群。可以理解为一个或者多个服务器的集合。用来保存咱们的数据的。群集由唯一名称标识，默认情况下为“elasticsearch”。</td>
</tr>
<tr>
<td><code>Node</code></td>
<td>节点。是集群中单个的服务器。本例子中我的服务器就是本地的127.0.0.1，它就是一个节点。</td>
</tr>
<tr>
<td><code>Index</code></td>
<td>索引。可以理解为msyql中的一个数据库，索引由名称标识（必须全部小写）。</td>
</tr>
<tr>
<td><code>Type</code></td>
<td>类型。可以理解为msyql中的一个表。注意：6.0版本前可以有多个类型。6.0以后的版本已经弃用。一个index下只能有一个type。这个地方当初没有看明白，我项目中好几个model模型都要做全文搜索。所以在每一个model中都定义了一个type。查询自然是不能成功。所以是一个小坑。希望读到的人不要重复这样的错误。也就是说我们把要做全文搜索的字段存进es中一个数据库名字叫index，数据表名字叫type的表中。不管你要查询的字段在哪个model模型中。</td>
</tr>
<tr>
<td><code>Document</code></td>
<td>文档。可以理解为一条数据。</td>
</tr>
</tbody>
</table>
<h3 id="结束语">结束语</h3>
<ul>
<li>只是简单的试用了下<code>ElasticSearch</code>的<strong>简单搜索</strong>功能，并没有在正式项目中用到过，若要在正式项目中使用，还有很多概念以及用法需要去深入学习。如若有哪里写的不好，望评论指出。😳</li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>Laravel服务之任务调度⏰</title>
			<link>https://blog.gookm.cn/posts/2019/20190304-laravel-crontab/</link>
			<pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190304-laravel-crontab/</guid>
			<description>基础篇
Laravel 的命令调度程序允许你在 Laravel 中对命令调度进行清晰流畅的定义。并且在使用调度程序时，只需要在服务器上增加一条 Cron 项目即可。调度是在 app/Console/Kernel.php 文件的 schedule 方法中定义的。为了方便你开始，该方法已经包含了一个简单的例子。
定义调度 1、在App\Console\Kernel类的schedule方法中定义所有调度任务(Closure)：
protected function schedule(Schedule $schedule) { $schedule-&amp;gt;call(function () { $saying=str_random(10); Map::where(&amp;#39;id&amp;#39;,32)-&amp;gt;update([&amp;#39;value&amp;#39;=&amp;gt;$saying]); })-&amp;gt;hourly(); $schedule-&amp;gt;call(function () { .. })-&amp;gt;everyMinute(); . . . } 2、Artisan命令调度：
除了计划 Closure 调用，你还能调度 Artisan 命令 和操作系统命令。举个例子，你可以给 command 方法传递命令名称或者类名称来调度一个 Artisan 命令： $schedule-&amp;gt;command(&amp;#39;emails:send --force&amp;#39;)-&amp;gt;-&amp;gt;dailyAt(&amp;#39;13:00&amp;#39;); $schedule-&amp;gt;command(EmailsCommand::class, [&amp;#39;--force&amp;#39;])-&amp;gt;weekly(); 3、队列任务调度：
job 方法可以用来调度 队列任务。这个方法提供了一种快捷方式来调度任务，无需使用 call 方法手动创建闭包来调度任务 $schedule-&amp;gt;job(new Heartbeat)-&amp;gt;everyFiveMinutes(); 4、Shell 命令调度：
exec 方法可用于向操作系统发出命令 $shell=&amp;#34;netstat -anp | grep 5200 | grep LISTEN | wc -l&amp;#34;; $shell=&amp;#34;node /home/forge/script.</description>
			<content type="html"><![CDATA[<p><strong>基础篇</strong></p>
<!-- raw HTML omitted -->
<p>Laravel 的命令调度程序允许你在 Laravel 中对命令调度进行清晰流畅的定义。并且在使用调度程序时，只需要在服务器上增加一条 <code>Cron</code> 项目即可。调度是在 <code>app/Console/Kernel.php</code> 文件的 <code>schedule</code> 方法中定义的。为了方便你开始，该方法已经包含了一个简单的例子。</p>
<!-- raw HTML omitted -->
<h3 id="定义调度">定义调度</h3>
<p>1、在<code>App\Console\Kernel</code>类的<code>schedule</code>方法中定义所有调度任务(<code>Closure</code>)：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">function</span> <span class="nf">schedule</span><span class="p">(</span><span class="nx">Schedule</span> <span class="nv">$schedule</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$saying</span><span class="o">=</span><span class="nx">str_random</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Map</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="mi">32</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">([</span><span class="s1">&#39;value&#39;</span><span class="o">=&gt;</span><span class="nv">$saying</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span><span class="o">-&gt;</span><span class="na">hourly</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="o">..</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span><span class="o">-&gt;</span><span class="na">everyMinute</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>2、<code>Artisan</code>命令调度：</p>
<ul>
<li>除了计划 Closure 调用，你还能调度 Artisan 命令 和操作系统命令。举个例子，你可以给 command 方法传递命令名称或者类名称来调度一个 Artisan 命令：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">command</span><span class="p">(</span><span class="s1">&#39;emails:send --force&#39;</span><span class="p">)</span><span class="o">-&gt;-&gt;</span><span class="nx">dailyAt</span><span class="p">(</span><span class="s1">&#39;13:00&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">command</span><span class="p">(</span><span class="nx">EmailsCommand</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;--force&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">weekly</span><span class="p">();</span>
</span></span></code></pre></div><p>3、队列任务调度：</p>
<ul>
<li><code>job</code> 方法可以用来调度 队列任务。这个方法提供了一种快捷方式来调度任务，无需使用 call 方法手动创建闭包来调度任务</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">job</span><span class="p">(</span><span class="k">new</span> <span class="nx">Heartbeat</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">everyFiveMinutes</span><span class="p">();</span>
</span></span></code></pre></div><p>4、<code>Shell</code> 命令调度：</p>
<ul>
<li>exec 方法可用于向操作系统发出命令</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$shell</span><span class="o">=</span><span class="s2">&#34;netstat -anp | grep 5200 | grep LISTEN | wc -l&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$shell</span><span class="o">=</span><span class="s2">&#34;node /home/forge/script.js&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">exec</span><span class="p">(</span><span class="nv">$shell</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">daily</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="启动调度器">启动调度器</h3>
<p>1、打开<code>cron</code>列表文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">crontab -e
</span></span></code></pre></div><p>2、添加要由<code>cron</code>运行的任务</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">* * * * * php /www/wwwroot/promise/artisan schedule:run &gt;&gt; /dev/null 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span></code></pre></div><p>3、保存，显示以下，即成功</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">crontab: installing new crontab
</span></span></code></pre></div><p>4、查看列表任务</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">crontab -l
</span></span></code></pre></div><p><strong>注意：每次修改任务调度相关代码，需要重新编辑并保存cron列表文件。</strong></p>
<h3 id="调度频率设置">调度频率设置</h3>
<p>当然，你可以为你的任务分配多种调度计划：</p>
<table>
<thead>
<tr>
<th>Column 1</th>
<th>Column 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>方法</td>
<td>描述</td>
</tr>
<tr>
<td><code> -&gt;cron('* * * * * *');</code></td>
<td>在自定义的 Cron 时间表上执行该任务</td>
</tr>
<tr>
<td><code>-&gt;everyMinute();</code></td>
<td>每分钟执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;everyFiveMinutes();</code></td>
<td>每五分钟执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;everyTenMinutes();</code></td>
<td>每十分钟执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;everyFifteenMinutes();</code></td>
<td>每十五分钟执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;everyThirtyMinutes();</code></td>
<td>每半小时执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;hourly();</code></td>
<td>每小时执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;hourlyAt(17);</code></td>
<td>每小时的第 17 分钟执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;daily();</code></td>
<td>每天午夜执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;dailyAt('13:00');</code></td>
<td>每天的 13:00 执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;twiceDaily(1, 13);</code></td>
<td>每天的 1:00 和 13:00 分别执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;monthly();</code></td>
<td>每月执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;monthlyOn(4, '15:00');</code></td>
<td>在每个月的第四天的 15:00 执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;quarterly();</code></td>
<td>每季度执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;yearly();</code></td>
<td>每年执行一次任务</td>
</tr>
<tr>
<td><code>-&gt;timezone('America/New_York');</code></td>
<td>设置时区</td>
</tr>
</tbody>
</table>
<h3 id="简单运用">简单运用</h3>
<p>在博客头部加了一个<code>每小时更新一条名言</code>的小功能。🤭
<code>头部背景</code>也是每小时更新的。</p>
]]></content>
		</item>
		
		<item>
			<title>Laravel的API初始搭建之Passport😄</title>
			<link>https://blog.gookm.cn/posts/2019/20190125-laravel-passport/</link>
			<pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190125-laravel-passport/</guid>
			<description>介绍 在 Laravel中，实现基于传统表单的登陆和授权已经非常简单，但是如何满足 API 场景下的授权需求呢？在 API场景里通常通过令牌来实现用户授权，而非维护请求之间的 Session 状态。在 Laravel 项目中使用 Passport 可以轻而易举地实现 API 授权认证，Passport 可以在几分钟之内为你的应用程序提供完整的 OAuth2 服务端实现。Passport 是基于由 Alex Bilbie 维护的 League OAuth2 server 建立的。❤🐷😘
安装 1、安装一个全新 laravel 项目
composer create-project --prefer-dist laravel/laravel passport 2、安装 Laravel Passport 包
Laravel Passport 可以在几分钟内为你的应用实现一个完整的 OAuth2服务器 composer require laravel/passport 3、创建存储客户端和令牌的数据表
Passport 服务提供器使用框架注册自己的数据库迁移目录，因此在注册提供器后，就应该运行 Passport 的迁移命令来自动创建存储客户端和令牌的数据表 php artisan migrate 如果你不打算使用 Passport 的默认迁移，你应该在 AppServiceProvider 的 register 方法中调用 Passport::ignoreMigrations 方法。 你可以用这个命令 php artisan vendor:publish --tag=passport-migrations 导出默认迁移。 4、Passport配置
运行 passport:install 命令来创建生成安全访问令牌时所需的加密密钥，同时，这条命令也会创建用于生成访问令牌的「个人访问」客户端和「密码授权」客户端： php artisan passport:install 上面命令执行后，请将 Laravel\Passport\HasApiTokens Trait 添加到 App\User 模型中，这个 Trait 会给你的模型提供一些辅助函数，用于检查已认证用户的令牌和使用范围： &amp;lt;?</description>
			<content type="html"><![CDATA[<h3 id="介绍">介绍</h3>
<p>在 <code>Laravel</code>中，实现基于传统表单的登陆和授权已经非常简单，但是如何满足 <code>API</code> 场景下的授权需求呢？在 <code>API</code>场景里通常通过令牌来实现用户授权，而非维护请求之间的 <code>Session</code> 状态。在 <code>Laravel</code> 项目中使用 <code>Passport</code> 可以轻而易举地实现 <code>API</code> 授权认证，<code>Passport</code> 可以在几分钟之内为你的应用程序提供完整的 <code>OAuth2</code> 服务端实现。<code>Passport</code> 是基于由 Alex Bilbie 维护的 League OAuth2 server 建立的。❤🐷😘</p>
<h3 id="安装">安装</h3>
<p>1、安装一个全新 <code>laravel</code> 项目</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel passport
</span></span></code></pre></div><p>2、安装  <code>Laravel Passport</code> 包</p>
<ul>
<li><code>Laravel Passport</code> 可以在几分钟内为你的应用实现一个完整的 <code>OAuth2</code>服务器</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require laravel/passport
</span></span></code></pre></div><p>3、创建存储客户端和令牌的数据表</p>
<ul>
<li><code>Passport</code> 服务提供器使用框架注册自己的数据库迁移目录，因此在注册提供器后，就应该运行 <code>Passport</code> 的迁移命令来自动创建存储客户端和令牌的数据表</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan migrate
</span></span></code></pre></div><ul>
<li>如果你不打算使用 <code>Passport</code> 的默认迁移，你应该在 <code>AppServiceProvider</code> 的 <code>register</code> 方法中调用 <code>Passport::ignoreMigrations</code> 方法。 你可以用这个命令 <code>php artisan vendor:publish --tag=passport-migrations</code> 导出默认迁移。</li>
</ul>
<p>4、Passport配置</p>
<ul>
<li>运行 <code>passport:install</code> 命令来创建生成安全访问令牌时所需的加密密钥，同时，这条命令也会创建用于生成访问令牌的「个人访问」客户端和「密码授权」客户端：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan passport:install
</span></span></code></pre></div><ul>
<li>上面命令执行后，请将 <code>Laravel\Passport\HasApiTokens Trait</code> 添加到 <code>App\User</code> 模型中，这个 <code>Trait</code> 会给你的模型提供一些辅助函数，用于检查已认证用户的令牌和使用范围：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Passport\HasApiTokens</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Notifications\Notifiable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Foundation\Auth\User</span> <span class="k">as</span> <span class="nx">Authenticatable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">User</span> <span class="k">extends</span> <span class="nx">Authenticatable</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">HasApiTokens</span><span class="p">,</span> <span class="nx">Notifiable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>接下来，在 <code>AuthServiceProvider</code> 的 <code>boot</code> 方法中调用 <code>Passport::routes</code> 函数。这个函数会注册发出访问令牌并撤销访问令牌、客户端和个人访问令牌所必需的路由：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Providers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Laravel\Passport\Passport</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Gate</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Foundation\Support\Providers\AuthServiceProvider</span> <span class="k">as</span> <span class="nx">ServiceProvider</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">AuthServiceProvider</span> <span class="k">extends</span> <span class="nx">ServiceProvider</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 应用程序的策略映射。
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @var array
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$policies</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;App\Model&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;App\Policies\ModelPolicy&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 注册任何认证/授权服务。
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">registerPolicies</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">Passport</span><span class="o">::</span><span class="na">routes</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>最后，将配置文件 <code>config/auth.php</code> 中授权看守器 <code>guards</code> 的 <code>api</code> 的 <code>driver</code> 选项改为 <code>passport</code>。此调整会让你的应用程序在在验证传入的 <code>API</code> 的请求时使用 <code>Passport</code> 的 <code>TokenGuard</code> 来处理：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;guards&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;web&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;session&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;provider&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;users&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;api&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;passport&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;provider&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;users&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><h3 id="测试">测试</h3>
<p>1、添加 <code>API</code> 路由</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;prefix&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;auth&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;login&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthController@login&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;signup&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthController@signup&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;auth:api&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;logout&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthController@logout&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthController@user&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><p>2、创建<code>AuthController</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:controller AuthController
</span></span></code></pre></div><p>编写如下代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Auth</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\User</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Hash</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Validator</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">AuthController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="c1">//注册
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">signup</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Validator</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">all</span><span class="p">(),</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="s1">&#39;max:255&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="s1">&#39;max:255&#39;</span><span class="p">,</span> <span class="s1">&#39;unique:users&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;required&#39;</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">,</span> <span class="s1">&#39;min:6&#39;</span><span class="p">,</span> <span class="s1">&#39;confirmed&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$user</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">User</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">email</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="nx">bcrypt</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">password</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Successfully created user!&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span> <span class="mi">201</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//登录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">login</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Validator</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">all</span><span class="p">(),</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string|email&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;remember_me&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;boolean&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$credentials</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">only</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="s1">&#39;password&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Auth</span><span class="o">::</span><span class="na">attempt</span><span class="p">(</span><span class="nv">$credentials</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Unauthorized&#39;</span><span class="p">],</span> <span class="mi">401</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="cm">/*$user=User::where(&#39;email&#39;,$request-&gt;email)-&gt;first();
</span></span></span><span class="line"><span class="cl"><span class="cm">    if($user == &#39;&#39;) return response()-&gt;json([&#39;message&#39; =&gt; &#39;邮箱号不存在！&#39;],402);
</span></span></span><span class="line"><span class="cl"><span class="cm">    if(! Hash::check($request-&gt;password,$user-&gt;password)) return response()-&gt;json([&#39;message&#39; =&gt; &#39;密码不正确！&#39;],401);*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$tokenResult</span> <span class="o">=</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">createToken</span><span class="p">(</span><span class="s1">&#39;Personal Access Token&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$token</span> <span class="o">=</span> <span class="nv">$tokenResult</span><span class="o">-&gt;</span><span class="na">token</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">remember_me</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">expires_at</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addWeeks</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$token</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;access_token&#39;</span> <span class="o">=&gt;</span> <span class="nv">$tokenResult</span><span class="o">-&gt;</span><span class="na">accessToken</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;token_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Bearer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;expires_at&#39;</span> <span class="o">=&gt;</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">parse</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="nv">$tokenResult</span><span class="o">-&gt;</span><span class="na">token</span><span class="o">-&gt;</span><span class="na">expires_at</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//退出
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">logout</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">token</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">revoke</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Successfully logged out&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//登录用户信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">user</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span></code></pre></div><h3 id="postman调用">Postman调用</h3>
<p>1、注册</p>
<p><code>Headers</code> ：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Content</span><span class="o">-</span><span class="nx">Type</span> <span class="o">:</span> <span class="nx">application</span><span class="o">/</span><span class="nx">json</span>
</span></span></code></pre></div><p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190125-laravel-passport01.jpg" alt="注册"></p>
<p>2、登录</p>
<p><code>Headers</code> ：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Content</span><span class="o">-</span><span class="nx">Type</span> <span class="o">:</span> <span class="nx">application</span><span class="o">/</span><span class="nx">json</span>
</span></span></code></pre></div><p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190125-laravel-passport02.jpg" alt="登录"></p>
<p>3、退出</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190125-laravel-passport03.jpg" alt="退出"></p>
<p>注意：<code>Bearer</code> 和 <code>token</code>之间有个空格哦！！！！</p>
<p>4、用户信息</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2019/20190125-laravel-passport04.jpg" alt="用户信息"></p>
<p>注意：<code>Bearer</code> 和 <code>token</code> 之间有个空格哦！！！！</p>
<p>参考：<a href="https://laravel-china.org/docs/laravel/5.7/passport/2270">https://laravel-china.org/docs/laravel/5.7/passport/2270</a></p>
]]></content>
		</item>
		
		<item>
			<title>Laravel模型常用属性</title>
			<link>https://blog.gookm.cn/posts/2019/20190111-laravel-eloquent/</link>
			<pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2019/20190111-laravel-eloquent/</guid>
			<description>模型常用属性 指定自定义数据表 protected $table = &amp;#39;users&amp;#39;; 主键 protected $primaryKey = &amp;#39;id&amp;#39;; 非递增或者非数值的主键 public $incrementing = false; 主键不是一个整数 protected $keyType = &amp;#39;string&amp;#39;; 不想让 Eloquent 自动管理created_at 和 updated_at public $timestamps = false; 自定义时间戳的格式 protected $dateFormat = &amp;#39;U&amp;#39;; 自定义存储时间戳的字段名 const CREATED_AT = &amp;#39;creation_date&amp;#39;; const UPDATED_AT = &amp;#39;last_update&amp;#39;; 为模型指定一个不同的连接 protected $connection = &amp;#39;connection-name&amp;#39;; 定义哪些模型属性是可以被批量赋值的(白名单) protected $fillable = [&amp;#39;name&amp;#39;]; 不允许被批量赋值(黑名单) protected $guarded = [&amp;#39;price&amp;#39;]; 需要转换成日期的属性 protected $dates = [&amp;#39;deleted_at&amp;#39;]; 此模型的事件映射 protected $dispatchesEvents = [ &amp;#39;saved&amp;#39; =&amp;gt; UserSaved::class, &amp;#39;deleted&amp;#39; =&amp;gt; UserDeleted::class, ]; 模型转换为数组时应当隐藏的字段 protected $hidden = [&amp;#39;password&amp;#39;, &amp;#39;remember_token&amp;#39;,]; 数组中的属性会被展示 protected $visible = [&amp;#39;username&amp;#39;, &amp;#39;email&amp;#39;]; 加载模型关联数据 protected $with = [&amp;#39;comments&amp;#39;]; 加载模型关联数据数量 protected $withCount = [&amp;#39;comments&amp;#39;]; 给定字段默认值 protected $attributes = [&amp;#39;status&amp;#39; =&amp;gt; self::STATUS_CREATED,]; 字段转换为对应的类型 protected $casts = [ &amp;#39;id&amp;#39; =&amp;gt; &amp;#39;integer&amp;#39;, &amp;#39;info&amp;#39; =&amp;gt; &amp;#39;array&amp;#39;, &amp;#39;is_online&amp;#39; =&amp;gt; &amp;#39;boolean&amp;#39;, ]; 模型转换为数组时应当追加的虚拟字段 例如访问器 protected $appends = [&amp;#39;tag&amp;#39;]; 指示模型当前是否强制删除 protected $forceDeleting = false; 默认分页数量 protected $perPage = 20; 模型更新时应当一并更新的关联关系 protected $touches = [&amp;#39;post&amp;#39;]; </description>
			<content type="html"><![CDATA[<h3 id="模型常用属性">模型常用属性</h3>
<ul>
<li>指定自定义数据表</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$table</span> <span class="o">=</span> <span class="s1">&#39;users&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>主键</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$primaryKey</span> <span class="o">=</span> <span class="s1">&#39;id&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>非递增或者非数值的主键</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="nv">$incrementing</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>主键不是一个整数</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$keyType</span> <span class="o">=</span> <span class="s1">&#39;string&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>不想让 Eloquent 自动管理created_at 和 updated_at</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="nv">$timestamps</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>自定义时间戳的格式</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$dateFormat</span> <span class="o">=</span> <span class="s1">&#39;U&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>自定义存储时间戳的字段名</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">const</span> <span class="no">CREATED_AT</span> <span class="o">=</span> <span class="s1">&#39;creation_date&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">const</span> <span class="no">UPDATED_AT</span> <span class="o">=</span> <span class="s1">&#39;last_update&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>为模型指定一个不同的连接</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$connection</span> <span class="o">=</span> <span class="s1">&#39;connection-name&#39;</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>定义哪些模型属性是可以被批量赋值的(白名单)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$fillable</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>不允许被批量赋值(黑名单)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$guarded</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;price&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>需要转换成日期的属性</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$dates</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;deleted_at&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>此模型的事件映射</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$dispatchesEvents</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;saved&#39;</span> <span class="o">=&gt;</span> <span class="nx">UserSaved</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;deleted&#39;</span> <span class="o">=&gt;</span> <span class="nx">UserDeleted</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>模型转换为数组时应当隐藏的字段</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$hidden</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">,</span> <span class="s1">&#39;remember_token&#39;</span><span class="p">,];</span>
</span></span></code></pre></div><ul>
<li>数组中的属性会被展示</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$visible</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>加载模型关联数据</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$with</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;comments&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>加载模型关联数据数量</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$withCount</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;comments&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>给定字段默认值</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$attributes</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;status&#39;</span> <span class="o">=&gt;</span> <span class="nx">self</span><span class="o">::</span><span class="na">STATUS_CREATED</span><span class="p">,];</span>
</span></span></code></pre></div><ul>
<li>字段转换为对应的类型</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$casts</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;integer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;info&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;array&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;is_online&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;boolean&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"> <span class="p">];</span>
</span></span></code></pre></div><ul>
<li>模型转换为数组时应当追加的虚拟字段 例如访问器</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$appends</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;tag&#39;</span><span class="p">];</span>
</span></span></code></pre></div><ul>
<li>指示模型当前是否强制删除</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$forceDeleting</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>默认分页数量</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$perPage</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span></span></code></pre></div><ul>
<li>模型更新时应当一并更新的关联关系</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$touches</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;post&#39;</span><span class="p">];</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>使用LaravelS🚀</title>
			<link>https://blog.gookm.cn/posts/2018/20181228-laravel-swoole/</link>
			<pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20181228-laravel-swoole/</guid>
			<description>Laravels 介绍 LaravelS是一个胶水项目，用于快速集成Swoole到Laravel或Lumen，然后赋予它们更好的性能、更多可能性。 在使用laravels之前，必须先装上swoole的扩展。
swoole文档：https://wiki.swoole.com/wiki/index/prid-1
laraves文档：https://github.com/hhxsv5/laravel-s
环境：在VMware虚拟机中自己搭的环境，Centos7，PHP7.2.12，Nginx1.14.2，MySQL 5.5.60。
安装 Swoole 扩展 1、直接 pecl install swoole ,会报错，因为装有php老版本的依赖，所以要装新的
yum install -y php72w-mysqlnd php72w-fpm php70w-pecl-redis php72w-common php72w-pdo php72w php72w-gd php72w-gd php72w-cli php72w-mbstring php72w-devel 因为我是PHP7.2，如果你是PHP7.0,将上面的php72替换为php70即可。
2、如果报错：
PHP Parse error: syntax error, unexpected //&amp;#39;new&amp;#39; (T_NEW) in /usr/share/pear/PEAR/Frontend.php on //line 91 解决方案：
安装PECL //php版本 &amp;gt; 7 wget http://pear.php.net/go-pear.phar php go-pear.phar //php版本 &amp;lt; 7 yum install php-pear 3、安装swoole包
1.pecl install swoole 2.WARNING:channel &amp;#34;pecl.php.net&amp;#34; has updated its protocols,use &amp;#34;pecl channel-update pecl.</description>
			<content type="html"><![CDATA[<h3 id="laravels-介绍">Laravels 介绍</h3>
<blockquote>
<p>LaravelS是一个胶水项目，用于快速集成Swoole到Laravel或Lumen，然后赋予它们更好的性能、更多可能性。
在使用laravels之前，必须先装上swoole的扩展。</p>
</blockquote>
<p>swoole文档：<a href="https://wiki.swoole.com/wiki/index/prid-1">https://wiki.swoole.com/wiki/index/prid-1</a></p>
<p>laraves文档：<a href="https://github.com/hhxsv5/laravel-s">https://github.com/hhxsv5/laravel-s</a></p>
<p>环境：在VMware虚拟机中自己搭的环境，Centos7，PHP7.2.12，Nginx1.14.2，MySQL 5.5.60。</p>
<h3 id="安装-swoole-扩展">安装 Swoole 扩展</h3>
<p>1、直接 <code>pecl install swoole</code> ,会报错，因为装有php老版本的依赖，所以要装新的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">yum install -y php72w-mysqlnd php72w-fpm php70w-pecl-redis php72w-common php72w-pdo php72w php72w-gd php72w-gd php72w-cli php72w-mbstring php72w-devel
</span></span></code></pre></div><p>因为我是PHP7.2，如果你是PHP7.0,将上面的php72替换为php70即可。</p>
<p>2、如果报错：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PHP Parse error:  syntax error, unexpected //<span class="s1">&#39;new&#39;</span> <span class="o">(</span>T_NEW<span class="o">)</span> in /usr/share/pear/PEAR/Frontend.php on //line <span class="m">91</span>
</span></span></code></pre></div><p>解决方案：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">安装PECL
</span></span><span class="line"><span class="cl">//php版本 &gt; <span class="m">7</span>
</span></span><span class="line"><span class="cl">wget http://pear.php.net/go-pear.phar
</span></span><span class="line"><span class="cl">php go-pear.phar
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">//php版本 &lt; <span class="m">7</span>
</span></span><span class="line"><span class="cl">yum install php-pear
</span></span></code></pre></div><p>3、安装swoole包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">1.pecl install swoole
</span></span><span class="line"><span class="cl">2.WARNING:channel <span class="s2">&#34;pecl.php.net&#34;</span> has updated its protocols,use <span class="s2">&#34;pecl channel-update pecl.php.net&#34;</span> to update.
</span></span><span class="line"><span class="cl">需要更新：pecl channel-update pecl.php.net
</span></span><span class="line"><span class="cl">3.查找下php.ini的位置：php -i <span class="p">|</span>grep php.ini
</span></span><span class="line"><span class="cl">4.然后在php.ini中增加：extension<span class="o">=</span>swoole.so
</span></span><span class="line"><span class="cl">5.重启下php：systemctl restart php
</span></span><span class="line"><span class="cl">6.查看下是否已经成功加载了swoole:php -m <span class="p">|</span> grep swoole
</span></span></code></pre></div><p>如果还没装上，推荐参考：<a href="https://www.cnblogs.com/phpwechat/p/8417331.html">https://www.cnblogs.com/phpwechat/p/8417331.html</a></p>
<h3 id="使用laravels">使用LaravelS</h3>
<p>1、安装 <code>laravels</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require <span class="s2">&#34;hhxsv5/laravel-s:~3.3&#34;</span> -vvv
</span></span></code></pre></div><p>2、注册 <code>Service Provider</code>, 位于 <code>config/app.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;providers&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>3、发布配置和二进制文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan laravels publish
</span></span></code></pre></div><p>4、修改配置 <code>config/laravels.php</code>：监听的IP、端口等。</p>
<p>5、配置 <code>web.confg</code> 文件，我的是这样</p>
<pre tabindex="0"><code class="language-apacheconfig" data-lang="apacheconfig">map $http_upgrade $connection_upgrade {
    default upgrade;
    &#39;&#39;      close;
}
upstream laravels {
    # 通过 IP:Port 连接
    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;
    # 通过 UnixSocket Stream 连接，小诀窍：将socket文件放在/dev/shm目录下，可获得更好的性能
    #server unix:/xxxpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;
    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;
    #server 192.168.1.2:5200 backup;
    keepalive 16;
}
server {
    listen 80;
    # 别忘了绑Host哟
    server_name laras.test;
    root /var/www/laras/public;
    #access_log /yyypath/log/nginx/$server_name.access.log  main;
    autoindex off;
    index index.html index.htm;
    # Nginx处理静态资源(建议开启gzip)，LaravelS处理动态资源。
    location / {
        index  index.php index.html index.htm;
        try_files $uri $uri/ /index.php?$query_string;
        if (!-e $request_filename){  
            rewrite ^/(.*) /index.php last;  
        } 
    }
    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
    
    location ~* ^.+\.(jpg|jpeg|gif|png|bmp)$ {  
        access_log off;  
        root /var/www/laras/public;  
        expires 30d;  
        break; }
    # 当请求PHP文件时直接响应404，防止暴露public/*.php
    #location ~* \.php$ {
    #    return 404;
    #}
    # Http和WebSocket共存，Nginx通过location区分
    # !!! WebSocket连接时路径为/ws
    # Javascript: var ws = new WebSocket(&#34;ws://laravels.com/ws&#34;);
    location =/ws {
        proxy_http_version 1.1;
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout：如果60秒内被代理的服务器没有响应数据给Nginx，那么Nginx会关闭当前连接；同时，Swoole的心跳设置也会影响连接的关闭
        # proxy_read_timeout 60s;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        proxy_set_header Server-Port $server_port;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://laravels;
    }
    location @laravels {
        proxy_http_version 1.1;
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        proxy_set_header Server-Port $server_port;
        proxy_set_header Connection &#34;&#34;;
        proxy_pass http://laravels;
    }
}
</code></pre><p>6、毫秒级定时任务 <code>App\Jobs\Timer\TestCronJob</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//如laravels文档 我的是这样 仅用于测试
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">client_send</span><span class="p">(</span><span class="s1">&#39;123456789&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Test</span><span class="o">::</span><span class="na">create</span><span class="p">([</span><span class="s1">&#39;num&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;66&#39;</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">//namespace App\Services\WebSocketClientService
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">client_send</span><span class="p">(</span><span class="nv">$msg</span><span class="p">,</span><span class="nv">$url</span><span class="o">=</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span><span class="nv">$port</span><span class="o">=</span><span class="mi">5200</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocketClientService</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="nv">$port</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$msg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">         <span class="cm">/*$data = @$client-&gt;recv();
</span></span></span><span class="line"><span class="cl"><span class="cm">        \Log::info($data);*/</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>7、启用 <code>WebSocket</code> 服务器 <code>App\Services\WebSocketService</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">如 laravels 文档 
</span></span><span class="line"><span class="cl">https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E5%90%AF%E7%94%A8websocket%E6%9C%8D%E5%8A%A1%E5%99%A8
</span></span></code></pre></div><p>8、视图页面开启 <code>websocket</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">ws</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="s2">&#34;ws://&#34;</span><span class="o">+</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="o">+</span><span class="s2">&#34;/ws?c=&#34;</span><span class="o">+</span><span class="s2">&#34;{{ csrf_token() }}&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//成功连接websoc的时候
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">ws</span><span class="p">.</span><span class="nx">onopen</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ws onopen&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">//        ws.send(&#39;client msg&#39;);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//连接错误的时候
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">ws</span><span class="p">.</span><span class="nx">onerror</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;ws onerror&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="cl">    <span class="nx">ws</span><span class="p">.</span><span class="nx">onmessage</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></span></code></pre></div><p>9、开启服务
重启 <code>nginx</code> 和 <code>php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">systemctl</span>  <span class="nx">restart</span> <span class="nx">nginx</span>
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span>   <span class="nx">restart</span>  <span class="nx">php</span><span class="o">-</span><span class="nx">fpm</span>
</span></span></code></pre></div><p>开启 <code>laravels</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">php</span>  <span class="nx">bin</span><span class="o">/</span><span class="nx">laravels</span>  <span class="nx">starts</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>再次安装 Homestead</title>
			<link>https://blog.gookm.cn/posts/2018/20180929-reinstall-homestead/</link>
			<pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180929-reinstall-homestead/</guid>
			<description>Homestead 的安装记录
下载并安装 VirtualBox https://pan.baidu.com/s/1v_DiOlOOKZ3TWEjxAo1chw 提密码：xlcx 之后按照提示操作一步一步进行安装即可。 参考：我的安装位置 D:\VirtualBox ubuntu的iso文件下载：http://releases.ubuntu.com/18.04/ 参考：ubuntu-18.04.1-live-server-amd64.iso 2018-07-25 23:39 812M服务器安装64位PC（AMD64）计算机图像（标准下载） 建议重启电脑 下载并安装Vagrant 链接：https://pan.baidu.com/s/1zoB04XJmeY1lmhpnLVpnKw 提取码：lej9 然后一步一步按照默认安装即可。 参考：我的安装位置 D:\vagrant 建议重启电脑 安装和使用 Homestead 1、下载 Homestead 虚拟机盒子：
链接：https://pan.baidu.com/s/1fnyCkBC_IrPXjkI2Tw7Zng 提取码：jpci 参考：我的存放位置位置 D:\vagrant\下 2、在解压目录中 lc-homestead-6.1.1-2018090400 运行以下命令导入 Box：
vagrant box add metadata.json 3、下载 Homestead 管理脚本：
git clone https://git.coding.net/summerblue/homestead.git Homestead 参考：我的存放位置 D:\
4、下载完成之后我们使用命令行进入 Homestead 目录，再使用 Git 检出我们需要的 Homestead 版本：
git checkout v7.8.0 来自 laravel-china 教程：为了保证后续讲解的流畅性，请注意版本的一致性，这里我们使用 v7.8.0
5、接下来需要初始化 Homestead：
bash init.sh #（在Homestead下执行） 会在 Homestead 下多出三个文件：Homestead.yaml ，after.</description>
			<content type="html"><![CDATA[<p><code>Homestead</code> 的安装记录</p>
<h3 id="下载并安装-virtualbox">下载并安装 VirtualBox</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">https://pan.baidu.com/s/1v_DiOlOOKZ3TWEjxAo1chw  提密码：xlcx
</span></span><span class="line"><span class="cl">之后按照提示操作一步一步进行安装即可。
</span></span><span class="line"><span class="cl">参考：我的安装位置  D:\VirtualBox
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ubuntu的iso文件下载：http://releases.ubuntu.com/18.04/
</span></span><span class="line"><span class="cl">参考：ubuntu-18.04.1-live-server-amd64.iso  2018-07-25 23:39 812M服务器安装64位PC（AMD64）计算机图像（标准下载）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">建议重启电脑
</span></span></code></pre></div><h3 id="下载并安装vagrant">下载并安装Vagrant</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">链接：https://pan.baidu.com/s/1zoB04XJmeY1lmhpnLVpnKw 提取码：lej9
</span></span><span class="line"><span class="cl">然后一步一步按照默认安装即可。
</span></span><span class="line"><span class="cl">参考：我的安装位置  D:\vagrant
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">建议重启电脑
</span></span></code></pre></div><h3 id="安装和使用-homestead">安装和使用 Homestead</h3>
<p>1、下载 <code>Homestead</code> 虚拟机盒子：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">链接：https://pan.baidu.com/s/1fnyCkBC_IrPXjkI2Tw7Zng 提取码：jpci
</span></span><span class="line"><span class="cl">参考：我的存放位置位置  D:\vagrant\下
</span></span></code></pre></div><p>2、在解压目录中 <code>lc-homestead-6.1.1-2018090400</code> 运行以下命令导入 <code>Box</code>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">vagrant</span> <span class="nx">box</span> <span class="nx">add</span> <span class="nx">metadata</span><span class="o">.</span><span class="nx">json</span>
</span></span></code></pre></div><p>3、下载 <code>Homestead</code> 管理脚本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">git</span> <span class="k">clone</span> <span class="nx">https</span><span class="o">://</span><span class="nx">git</span><span class="o">.</span><span class="nx">coding</span><span class="o">.</span><span class="nx">net</span><span class="o">/</span><span class="nx">summerblue</span><span class="o">/</span><span class="nx">homestead</span><span class="o">.</span><span class="nx">git</span> <span class="nx">Homestead</span>
</span></span></code></pre></div><p>参考：我的存放位置  D:\</p>
<p>4、下载完成之后我们使用命令行进入 <code>Homestead</code> 目录，再使用 <code>Git</code> 检出我们需要的 <code>Homestead</code> 版本：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">git</span> <span class="nx">checkout</span> <span class="nx">v7</span><span class="o">.</span><span class="mf">8.0</span>
</span></span></code></pre></div><p>来自 <code>laravel-china</code> 教程：为了保证后续讲解的流畅性，请注意版本的一致性，这里我们使用 <code>v7.8.0</code></p>
<p>5、接下来需要初始化 <code>Homestead</code>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">bash</span> <span class="nx">init</span><span class="o">.</span><span class="nx">sh</span>  <span class="c1">#（在Homestead下执行）
</span></span></span></code></pre></div><p>会在 <code>Homestead</code> 下多出三个文件：<code>Homestead.yaml</code>  ，<code>after.sh</code>   ，<code>aliases</code></p>
<h3 id="ssh-秘钥登录配置">SSH 秘钥登录配置</h3>
<p>Homestead.yaml 配置文件下的authorize: ~/.ssh/id_rsa.pub（SSH 秘钥登录配置）</p>
<p>1、先使用以下命令来检查主机上是否已经生成过 <code>SSH Key</code>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">ls</span> <span class="o">-</span><span class="nx">al</span> <span class="o">~/.</span><span class="nx">ssh</span>
</span></span></code></pre></div><p>2、如果存在 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 的话，请跳过以下生成 <code>SSH</code> 的步骤继续阅读剩下内容。
否则使用以下方法来生成 <code>SSH Key</code>，请将 <code>your_email@example.com</code> 替换为你的邮箱：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">ssh</span><span class="o">-</span><span class="nx">keygen</span> <span class="o">-</span><span class="nx">t</span> <span class="nx">rsa</span> <span class="o">-</span><span class="nx">C</span> <span class="s2">&#34;your_email@example.com&#34;</span>
</span></span></code></pre></div><p>注意：全部默认 <code>Enter</code> 即可</p>
<p>3、检查是否生成：<code>ls -al ~/.ssh</code>，会发现多出一下两个文件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">SSH</span> <span class="nx">秘钥的两个文件：</span>
</span></span><span class="line"><span class="cl"><span class="nx">id_rsa</span> <span class="nx">——</span> <span class="nx">SSH</span> <span class="nx">秘钥的</span> <span class="nx">私钥</span> <span class="p">(</span><span class="k">Private</span> <span class="nx">Key</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">id_rsa</span><span class="o">.</span><span class="nx">pub</span> <span class="nx">——</span> <span class="nx">SSH</span> <span class="nx">秘钥的</span> <span class="nx">公钥</span> <span class="p">(</span><span class="k">Public</span> <span class="nx">Key</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="homesteadyaml-配置文件">Homestead.yaml 配置文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">//参考：我是这样配置的</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;192.168.10.10&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">memory</span><span class="p">:</span><span class="w"> </span><span class="m">2048</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">cpus</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">virtualbox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">authorize</span><span class="p">:</span><span class="w"> </span><span class="l">~/.ssh/id_rsa.pub</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">keys</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">~/.ssh/id_rsa</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">folders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">E:/code/homestead  //本机存放代码位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/code  //虚拟机存放代码位置</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sites</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">laravel.test   //项目访问域名，记得hosts文件的添加</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/code/laravel/public  //虚拟机项目访问入口文件</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">xxx   </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/code/xxx  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">databases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">laravel   //第一个项目数据库名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">xxx   //此项目数据库名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># blackfire:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - id: foo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       token: bar</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       client-id: foo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       client-token: bar</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ports:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - send: 50000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       to: 5000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - send: 7777</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       to: 777</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       protocol: udp</span><span class="w">
</span></span></span></code></pre></div><h3 id="需要注意">需要注意：</h3>
<p>需要注意（均在本地的Homestead下操作）</p>
<p>1、在我们每次对 <code>Homestead.yaml</code> 文件进行了更改之后，都需要运行下面命令来使其更改生效：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">vagrant</span> <span class="nx">provision</span> <span class="o">&amp;&amp;</span> <span class="nx">vagrant</span> <span class="nx">reload</span>
</span></span></code></pre></div><p>2、数据库相关</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">默认账户：homestead  密码：secret
</span></span><span class="line"><span class="cl">连上虚拟机：mysql -u homestead -p    进入数据库
</span></span></code></pre></div><p>3、当 <code>vagrant up</code> 出现 <code>Vagrant could not detect VirtualBox!</code> 是可能的问题是：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">VBOX_INSTALL_PATH或VBOX_MSI_INSTALL_PATH环境变量。
</span></span></code></pre></div><p>我是直接重启电脑就好了~~~</p>
<p>4、<code>vagrant</code> 相关命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">vagrant</span> <span class="nx">init</span>	<span class="c1">#初始化 vagrant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">vagrant</span> <span class="nx">up</span>	    <span class="c1">#启动 vagrant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">vagrant</span> <span class="nx">halt</span>	<span class="c1">#关闭 vagrant
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">vagrant</span> <span class="nx">ssh</span>	    <span class="c1">#通过SSH登录vagrant（需要先启动 vagrant）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">vagrant</span> <span class="nx">provision</span>	<span class="c1">#重新应用更改 vagrant 配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">vagrant</span> <span class="nx">destroy</span>	    <span class="c1">#删除 vagrant
</span></span></span></code></pre></div><p>5、异常退出后，<code>vagrant up</code> 报错：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">vagrant</span> <span class="nx">haltThere</span> <span class="nx">was</span> <span class="nx">an</span> <span class="nx">error</span> <span class="k">while</span> <span class="nx">executing</span> <span class="sb">`VBoxManage`</span><span class="p">,</span> <span class="nx">a</span> <span class="nx">CLI</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">Vagrant</span> <span class="k">for</span> <span class="nx">controlling</span> <span class="nx">VirtualBox</span><span class="o">.</span> <span class="nx">The</span> <span class="nx">command</span> <span class="k">and</span> <span class="nx">std</span> <span class="nx">err</span> <span class="nx">is</span> <span class="nx">shown</span> <span class="nx">below</span><span class="o">.</span>
</span></span></code></pre></div><p>解决：重启电脑或者在任务管理器结束所有 <code>VirtualBox</code> 相关进程</p>
]]></content>
		</item>
		
		<item>
			<title>Linux环境搭建</title>
			<link>https://blog.gookm.cn/posts/2018/20180906-centos-lnmp/</link>
			<pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180906-centos-lnmp/</guid>
			<description>PHP环境搭建 Vm下载地址：https://www.landiannews.com/archives/40619.html CentOSiso: http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso 1、安装需要的库 yum -y install rsync net-snmp syslog net-snmp-devel wget patch screen gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers ImageMagick-devel net-snmp-devel gd xinetd pcre-devel cmake 2、防火墙添加端口 firewall-cmd --zone=public --add-port=80/tcp --permanent firewall-cmd --zone=public --add-port=443/tcp --permanent firewall-cmd --zone=public --add-port=3306/tcp --permanent firewall-cmd --reload 3、安装mysql 3.</description>
			<content type="html"><![CDATA[<h3 id="php环境搭建">PHP环境搭建</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Vm下载地址：https</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">landiannews</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">archives</span><span class="o">/</span><span class="mf">40619.</span><span class="nx">html</span>
</span></span><span class="line"><span class="cl"><span class="nx">CentOSiso</span><span class="o">:</span> <span class="nx">http</span><span class="o">://</span><span class="nx">isoredirect</span><span class="o">.</span><span class="nx">centos</span><span class="o">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">centos</span><span class="o">/</span><span class="mi">7</span><span class="o">/</span><span class="nx">isos</span><span class="o">/</span><span class="nx">x86_64</span><span class="o">/</span><span class="nx">CentOS</span><span class="o">-</span><span class="mi">7</span><span class="o">-</span><span class="nx">x86_64</span><span class="o">-</span><span class="nx">Minimal</span><span class="o">-</span><span class="mf">1804.</span><span class="nx">iso</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、安装需要的库</span>
</span></span><span class="line"><span class="cl"><span class="nx">yum</span> <span class="o">-</span><span class="nx">y</span> <span class="nx">install</span> <span class="nx">rsync</span> <span class="nx">net</span><span class="o">-</span><span class="nx">snmp</span> <span class="nx">syslog</span> <span class="nx">net</span><span class="o">-</span><span class="nx">snmp</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">wget</span> <span class="nx">patch</span> <span class="nx">screen</span> <span class="nx">gcc</span> <span class="nx">gcc</span><span class="o">-</span><span class="nx">c</span><span class="o">++</span> <span class="nx">autoconf</span> <span class="nx">libjpeg</span> <span class="nx">libjpeg</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">libpng</span> <span class="nx">libpng</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">freetype</span> <span class="nx">freetype</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">libxml2</span> <span class="nx">libxml2</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">zlib</span> <span class="nx">zlib</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">glibc</span> <span class="nx">glibc</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">glib2</span> <span class="nx">glib2</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">bzip2</span> <span class="nx">bzip2</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">ncurses</span> <span class="nx">ncurses</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">curl</span> <span class="nx">curl</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">e2fsprogs</span> <span class="nx">e2fsprogs</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">krb5</span> <span class="nx">krb5</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">libidn</span> <span class="nx">libidn</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">openssl</span> <span class="nx">openssl</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">openldap</span> <span class="nx">openldap</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">nss_ldap</span> <span class="nx">openldap</span><span class="o">-</span><span class="nx">clients</span> <span class="nx">openldap</span><span class="o">-</span><span class="nx">servers</span> <span class="nx">ImageMagick</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">net</span><span class="o">-</span><span class="nx">snmp</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">gd</span> <span class="nx">xinetd</span> <span class="nx">pcre</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">cmake</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、防火墙添加端口</span>
</span></span><span class="line"><span class="cl"><span class="nx">firewall</span><span class="o">-</span><span class="nx">cmd</span> <span class="o">--</span><span class="nx">zone</span><span class="o">=</span><span class="k">public</span> <span class="o">--</span><span class="nx">add</span><span class="o">-</span><span class="nx">port</span><span class="o">=</span><span class="mi">80</span><span class="o">/</span><span class="nx">tcp</span> <span class="o">--</span><span class="nx">permanent</span>
</span></span><span class="line"><span class="cl"><span class="nx">firewall</span><span class="o">-</span><span class="nx">cmd</span> <span class="o">--</span><span class="nx">zone</span><span class="o">=</span><span class="k">public</span> <span class="o">--</span><span class="nx">add</span><span class="o">-</span><span class="nx">port</span><span class="o">=</span><span class="mi">443</span><span class="o">/</span><span class="nx">tcp</span> <span class="o">--</span><span class="nx">permanent</span>
</span></span><span class="line"><span class="cl"><span class="nx">firewall</span><span class="o">-</span><span class="nx">cmd</span> <span class="o">--</span><span class="nx">zone</span><span class="o">=</span><span class="k">public</span> <span class="o">--</span><span class="nx">add</span><span class="o">-</span><span class="nx">port</span><span class="o">=</span><span class="mi">3306</span><span class="o">/</span><span class="nx">tcp</span> <span class="o">--</span><span class="nx">permanent</span>
</span></span><span class="line"><span class="cl"><span class="nx">firewall</span><span class="o">-</span><span class="nx">cmd</span> <span class="o">--</span><span class="nx">reload</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="nx">、安装mysql</span>
</span></span><span class="line"><span class="cl"><span class="mf">3.1</span><span class="nx">、yum install</span> <span class="o">-</span><span class="nx">y mariadb</span> <span class="nx">mariadb</span><span class="o">-</span><span class="nx">server</span> <span class="nx">mariadb</span><span class="o">-</span><span class="nx">libs</span> <span class="nx">mariadb</span><span class="o">-</span><span class="nx">devel</span>
</span></span><span class="line"><span class="cl"><span class="mf">3.2</span><span class="nx">、systemctl</span> <span class="nx">start</span> <span class="nx">mariadb</span>
</span></span><span class="line"><span class="cl"><span class="mf">3.3</span><span class="nx">、systemctl</span> <span class="nx">enable</span> <span class="nx">mariadb</span>
</span></span><span class="line"><span class="cl"><span class="mf">3.4</span><span class="nx">、https</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">cnblogs</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">me80</span><span class="o">/</span><span class="nx">p</span><span class="o">/</span><span class="mf">7218883.</span><span class="nx">html</span>
</span></span><span class="line"><span class="cl"><span class="mf">3.5</span><span class="nx">、设置远程链接，所有root账号链接的远程用户，设置其密码为123456</span>
</span></span><span class="line"><span class="cl"><span class="nx">grant</span> <span class="nx">all</span> <span class="nx">privileges</span> <span class="nx">on</span> <span class="o">*.*</span> <span class="nx">to</span> <span class="nx">root</span><span class="o">@</span><span class="s1">&#39;%&#39;</span><span class="nx">identified</span> <span class="nx">by</span> <span class="s1">&#39;123456&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">flush</span> <span class="nx">privileges</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">4</span><span class="nx">、安装php7</span>
</span></span><span class="line"><span class="cl"><span class="mf">4.1</span><span class="nx">、安装源：</span>
</span></span><span class="line"><span class="cl"><span class="nx">rpm</span> <span class="o">-</span><span class="nx">Uvh</span> <span class="nx">https</span><span class="o">://</span><span class="nx">dl</span><span class="o">.</span><span class="nx">fedoraproject</span><span class="o">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">pub</span><span class="o">/</span><span class="nx">epel</span><span class="o">/</span><span class="nx">epel</span><span class="o">-</span><span class="nx">release</span><span class="o">-</span><span class="nx">latest</span><span class="o">-</span><span class="mf">7.</span><span class="nx">noarch</span><span class="o">.</span><span class="nx">rpm</span>
</span></span><span class="line"><span class="cl"><span class="nx">rpm</span> <span class="o">-</span><span class="nx">Uvh</span> <span class="nx">https</span><span class="o">://</span><span class="nx">mirror</span><span class="o">.</span><span class="nx">webtatic</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">yum</span><span class="o">/</span><span class="nx">el7</span><span class="o">/</span><span class="nx">webtatic</span><span class="o">-</span><span class="nx">release</span><span class="o">.</span><span class="nx">rpm</span>
</span></span><span class="line"><span class="cl"><span class="nx">下载对应当前系统版本的nginx包</span><span class="p">(</span><span class="nx">package</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># wget  http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">建立nginx的yum仓库</span>
</span></span><span class="line"><span class="cl"><span class="c1"># rpm -ivh nginx-release-centos-7-0.el7.ngx.noarch.rpm
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">下载并安装nginx</span>
</span></span><span class="line"><span class="cl"><span class="c1"># yum -y install nginx
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">启动nginx服务</span>
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">start</span> <span class="nx">nginx</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">enable</span> <span class="nx">nginx</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">启动php</span><span class="o">-</span><span class="nx">fpm</span>  
</span></span><span class="line"><span class="cl"><span class="nx">systemctl start php</span><span class="o">-</span><span class="nx">fpm</span>  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">php7</span><span class="o">.</span><span class="mi">2</span><span class="nx">依赖包</span>
</span></span><span class="line"><span class="cl"><span class="nx">yum</span> <span class="o">-</span><span class="nx">y</span> <span class="nx">remove</span> <span class="nx">php</span><span class="o">*</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">yum</span> <span class="o">-</span><span class="nx">y</span> <span class="nx">install</span> <span class="nx">php72w</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">cli</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">common</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">devel</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">embedded</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">fpm</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">gd</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">mbstring</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">mysqlnd</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">opcache</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">pdo</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">xml</span> <span class="nx">php72w</span><span class="o">-</span><span class="nx">bcmath</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">curl</span> <span class="o">-</span><span class="nx">sS</span> <span class="nx">https</span><span class="o">://</span><span class="nx">getcomposer</span><span class="o">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">installer</span> <span class="o">|</span> <span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">mv</span> <span class="nx">composer</span><span class="o">.</span><span class="nx">phar</span> <span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">local</span><span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">composer</span>
</span></span><span class="line"><span class="cl"><span class="nx">composer</span> <span class="nx">config</span> <span class="o">-</span><span class="nx">g</span> <span class="nx">repo</span><span class="o">.</span><span class="nx">packagist</span> <span class="nx">composer</span> <span class="nx">https</span><span class="o">://</span><span class="nx">packagist</span><span class="o">.</span><span class="nx">phpcomposer</span><span class="o">.</span><span class="nx">com</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="nx">fastcgi_param</span>  <span class="nx">SCRIPT_FILENAME</span>  <span class="nv">$document_root$fastcgi_script_name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">vi</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">selinux</span><span class="o">/</span><span class="nx">config</span> <span class="c1">#SELINUX=enforcing #注释掉 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">SELINUX</span><span class="o">=</span><span class="nx">disabled</span> <span class="c1">#增加 :wq! #保存退出 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">setenforce</span> <span class="mi">0</span> <span class="c1">#使配置立即生效
</span></span></span></code></pre></div><h3 id="nginx配置">Nginx配置</h3>
<ul>
<li>/root/etc/nginx/conf.d</li>
</ul>
<pre tabindex="0"><code class="language-apacheconfig" data-lang="apacheconfig">server {
    listen       80;
    server_name  local.laravel.test;
    location / {
        root   /var/www/laravel/public;
        index  index.php index.html index.htm;
        try_files $uri $uri/ /index.php?$query_string;
        if (!-e $request_filename){
            rewrite ^/(.*) /index.php last;
        }
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /var/www/laravel/public;
    }
    location ~ \.php$ {
        root           /var/www/laravel/public;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
</code></pre><h3 id="phpnginx启动">PHP/Nginx启动</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">enable</span> <span class="nx">nginx</span>
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">enable</span> <span class="nx">php</span><span class="o">-</span><span class="nx">fpm</span>
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">restart</span> <span class="nx">nginx</span>
</span></span><span class="line"><span class="cl"><span class="nx">systemctl</span> <span class="nx">restart</span> <span class="nx">php</span><span class="o">-</span><span class="nx">fpm</span>
</span></span></code></pre></div><h3 id="更改权限">更改权限</h3>
<ul>
<li>创建完laravel项目后，更改权限</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">chmod</span> <span class="o">-</span><span class="nx">R</span> <span class="mo">0777</span> <span class="nx">storage</span>
</span></span><span class="line"><span class="cl"><span class="nx">chmod</span> <span class="o">-</span><span class="nx">R</span> <span class="mo">0777</span> <span class="k">public</span>
</span></span><span class="line"><span class="cl"><span class="nx">chmod</span> <span class="o">-</span><span class="nx">R</span> <span class="mo">0777</span> <span class="nx">bootstrap</span>
</span></span></code></pre></div><h3 id="svn提交问题解决">SVN提交问题解决</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">安装svn：yum</span> <span class="nx">install</span> <span class="o">-</span><span class="nx">y</span> <span class="nx">subversion</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="nx">add：</span>
</span></span><span class="line"><span class="cl"><span class="nx">svn</span> <span class="nx">add</span> <span class="err">$</span><span class="p">(</span><span class="nx">svn</span> <span class="nx">st</span> <span class="o">|</span> <span class="nx">grep</span> <span class="o">?</span> <span class="o">|</span> <span class="nx">sed</span> <span class="s1">&#39;s/\?//g&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">svn</span> <span class="nx">st</span> <span class="o">|</span> <span class="nx">awk</span> <span class="s1">&#39;{if ( $1 == &#34;?&#34;) { print $2}}&#39;</span> <span class="o">|</span> <span class="nx">xargs</span> <span class="nx">svn</span> <span class="nx">add</span>
</span></span><span class="line"><span class="cl"><span class="nx">svn</span> <span class="nx">status</span><span class="o">|</span><span class="nx">grep</span> <span class="o">?</span> <span class="o">|</span><span class="nx">awk</span> <span class="s1">&#39;{print $2}&#39;</span><span class="o">|</span><span class="nx">xargs</span> <span class="nx">svn</span> <span class="nx">add</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">del</span><span class="o">:</span>
</span></span><span class="line"><span class="cl"><span class="nx">svn</span> <span class="nx">status</span><span class="o">|</span><span class="nx">grep</span> <span class="o">!</span> <span class="o">|</span><span class="nx">awk</span> <span class="s1">&#39;{print $2}&#39;</span><span class="o">|</span><span class="nx">xargs</span> <span class="nx">svn</span> <span class="nx">del</span>
</span></span><span class="line"><span class="cl"><span class="nx">svn　resolved</span> <span class="nx">路径</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>腾讯云存储的简单使用🚗</title>
			<link>https://blog.gookm.cn/posts/2018/20180806-tencent-cos/</link>
			<pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180806-tencent-cos/</guid>
			<description>导语 将一些图片文件存储在本地，加载慢，耗资源。可以选择将文件上传至云端，例如七牛云，阿里云，腾讯云等都可以作为选择方案，简单记录下将图片文件上传至腾讯云存储的过程。
对象存储 COS 简介
对象存储（Cloud Object Storage，简称：COS）是腾讯云提供的一种存储海量文件的分布式存储服务，用户可通过网络随时存储和查看数据。腾讯云 COS 使所有用户都能使用具备高扩展性、低成本、可靠和安全的数据存储服务。
文档地址：https://cloud.tencent.com/document/product/436/11365
上传前准备 快速入门流程图：
在注册完并创建好存储桶后，需要拿到相关配置信息，APPID，SecretId，SecretKey（密钥管理），在存储桶下创建一个test文件夹，本次测试图片全部上传到该文件夹下，当然你也可以不创建，存储桶检测到没有该文件夹，会自动创建。本次记录只是走到了上传对象 。
测试过程 1、composer腾讯云COS对象存储 V5包
composer require freyo/flysystem-qcloud-cos-v5 2、在config/app.php的providers下添加
Freyo\Flysystem\QcloudCOSv5\ServiceProvider::class, 3、在app/filesystems.php中的disks里下添加
&amp;#39;disks&amp;#39;=&amp;gt;[ // ... &amp;#39;cosv5&amp;#39; =&amp;gt; [ &amp;#39;driver&amp;#39; =&amp;gt; &amp;#39;cosv5&amp;#39;, &amp;#39;region&amp;#39; =&amp;gt; env(&amp;#39;COSV5_REGION&amp;#39;, &amp;#39;ap-guangzhou&amp;#39;), &amp;#39;credentials&amp;#39; =&amp;gt; [ &amp;#39;appId&amp;#39; =&amp;gt; env(&amp;#39;COSV5_APP_ID&amp;#39;), &amp;#39;secretId&amp;#39; =&amp;gt; env(&amp;#39;COSV5_SECRET_ID&amp;#39;), &amp;#39;secretKey&amp;#39; =&amp;gt; env(&amp;#39;COSV5_SECRET_KEY&amp;#39;), ], &amp;#39;timeout&amp;#39; =&amp;gt; env(&amp;#39;COSV5_TIMEOUT&amp;#39;, 60), &amp;#39;connect_timeout&amp;#39; =&amp;gt; env(&amp;#39;COSV5_CONNECT_TIMEOUT&amp;#39;, 60), &amp;#39;bucket&amp;#39; =&amp;gt; env(&amp;#39;COSV5_BUCKET&amp;#39;), &amp;#39;cdn&amp;#39; =&amp;gt; env(&amp;#39;COSV5_CDN&amp;#39;), &amp;#39;scheme&amp;#39; =&amp;gt; env(&amp;#39;COSV5_SCHEME&amp;#39;, &amp;#39;https&amp;#39;), ], ], 4、在.</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<p>将一些图片文件存储在本地，加载慢，耗资源。可以选择将文件上传至云端，例如七牛云，阿里云，腾讯云等都可以作为选择方案，简单记录下将图片文件上传至腾讯云存储的过程。</p>
<p>对象存储 COS 简介</p>
<blockquote>
<p>对象存储（Cloud Object Storage，简称：COS）是腾讯云提供的一种存储海量文件的分布式存储服务，用户可通过网络随时存储和查看数据。腾讯云 COS 使所有用户都能使用具备高扩展性、低成本、可靠和安全的数据存储服务。</p>
</blockquote>
<p>文档地址：<a href="https://cloud.tencent.com/document/product/436/11365">https://cloud.tencent.com/document/product/436/11365</a></p>
<h3 id="上传前准备">上传前准备</h3>
<p>快速入门流程图：</p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180806-tencent-cos01.png" alt="流程"></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180806-tencent-cos02.jpg" alt="存储桶列表"></p>
<p>在注册完并创建好存储桶后，需要拿到相关配置信息，<code>APPID</code>，<code>SecretId</code>，<code>SecretKey</code>（密钥管理），在存储桶下创建一个test文件夹，本次测试图片全部上传到该文件夹下，当然你也可以不创建，存储桶检测到没有该文件夹，会自动创建。本次记录只是走到了上传对象 。</p>
<h3 id="测试过程">测试过程</h3>
<p>1、<code>composer</code>腾讯云COS对象存储 V5包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require freyo/flysystem-qcloud-cos-v5
</span></span></code></pre></div><p>2、在<code>config/app.php</code>的<code>providers</code>下添加</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Freyo\Flysystem\QcloudCOSv5\ServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span></code></pre></div><p>3、在<code>app/filesystems.php</code>中的<code>disks</code>里下添加</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;disks&#39;</span><span class="o">=&gt;</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;cosv5&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;cosv5&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;region&#39;</span>          <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_REGION&#39;</span><span class="p">,</span> <span class="s1">&#39;ap-guangzhou&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;credentials&#39;</span>     <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">              <span class="s1">&#39;appId&#39;</span>     <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_APP_ID&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">              <span class="s1">&#39;secretId&#39;</span>  <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_SECRET_ID&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">              <span class="s1">&#39;secretKey&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_SECRET_KEY&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="p">],</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;timeout&#39;</span>         <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_TIMEOUT&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;connect_timeout&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_CONNECT_TIMEOUT&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;bucket&#39;</span>          <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_BUCKET&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;cdn&#39;</span>             <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_CDN&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">          <span class="s1">&#39;scheme&#39;</span>          <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;COSV5_SCHEME&#39;</span><span class="p">,</span> <span class="s1">&#39;https&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>4、在<code>.env</code>中添加相关配置数据</p>
<pre tabindex="0"><code class="language-dotenv" data-lang="dotenv"># cosv5
FILESYSTEM_DRIVER=cosv5    //或在app/filesystems.php修改&#39;default&#39; =&gt; &#39;cosv5&#39;,
COSV5_REGION=ap-guangzhou
COSV5_APP_ID=125600****
COSV5_SECRET_ID=AKIDPFwZahxVA60j**********JTO8lDTHiaL
COSV5_SECRET_KEY=kT7MVUKsJYeZ********CTcaMzazEH8q
COSV5_TIMEOUT=60
COSV5_CONNECT_TIMEOUT=60
COSV5_BUCKET=test1-1256003521
COSV5_CDN=https://test1-1256003521.cos.ap-guangzhou.myqcloud.com
COSV5_SCHEME=https
</code></pre><p>5、相关路由</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//腾讯云存储测试
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/cos&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@cos&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;cos&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/cos/put&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@filePut&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;cos.put&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>6、<code>TestController</code>中编写如下代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> * 腾讯云存储表单页
</span></span></span><span class="line"><span class="cl"><span class="cm"> * */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">cos</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$imgs</span><span class="o">=</span><span class="nx">CosImage</span><span class="o">::</span><span class="na">latest</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;cos.cos&#39;</span><span class="p">,</span><span class="nx">compact</span><span class="p">(</span><span class="s1">&#39;imgs&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> * 将接收到的图片资源传到腾讯云COS
</span></span></span><span class="line"><span class="cl"><span class="cm"> * */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">filePut</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$fileContents</span><span class="o">=</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">file</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$path</span><span class="o">=</span><span class="nx">Storage</span><span class="o">::</span><span class="na">disk</span><span class="p">(</span><span class="s1">&#39;cosv5&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="nv">$fileContents</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$path</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="nv">$result</span><span class="o">=</span><span class="nx">CosImage</span><span class="o">::</span><span class="na">create</span><span class="p">([</span><span class="s1">&#39;url_img&#39;</span><span class="o">=&gt;</span><span class="nv">$path</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$result</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">return</span> <span class="nx">back</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span><span class="s1">&#39;上传成功&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="结果">结果</h3>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180806-tencent-cos03.jpg" alt="文件列表"></p>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180806-tencent-cos04.jpg" alt="效果图"></p>
<p><strong>只是做了简单的对象上传，后面的包括下载对象，上传对象，删除存储桶等并没有做！！！</strong></p>
]]></content>
		</item>
		
		<item>
			<title>腾讯云短信的简单使用</title>
			<link>https://blog.gookm.cn/posts/2018/20180805-tencent-sms/</link>
			<pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180805-tencent-sms/</guid>
			<description>导语 试过云片和聚合的短信，由于一些原因，审核都没通过，于是就转战了腾讯云的短信服务，难道是因为本人使用的是腾讯云服务器，所以提交不到一个小时就审核通过了？哈哈哈&amp;hellip;..
腾讯云文档平台
发送前准备 https://cloud.tencent.com/document/product/382/18071#.E5.8F.91.E9.80.81.E5.89.8D.E5.87.86.E5.A4.87
大致流程：添加应用-&amp;gt;点击新增的应用-&amp;gt;国内短信-&amp;gt;短信内容配置-&amp;gt;短信签名和短信正文 短信签名图（注意这里的签名内容须为 ICP备案的负责人名称+网站名称）： 短信正文即模板图： 下面记录一下测试过程 1、composer了一个全新的laravel框架5.7：
composer create-project --prefer-dist laravel/laravel test 2、没有从官方下载SDK，直接composer一个很好用的包（因为是overtrue出品）：
composer require &amp;#34;overtrue/easy-sms&amp;#34; 3、由于该组件还没有 Laravel 的 ServiceProvider，为了方便使用，我们可以自己封装一下。
首先在 config 目录中增加 easysms.php 文件 touch config/easysms.php config/easysms.php , 填入如下内容 &amp;lt;?php return [ // HTTP 请求的超时时间（秒） &amp;#39;timeout&amp;#39; =&amp;gt; 5.0, // 默认发送配置 &amp;#39;default&amp;#39; =&amp;gt; [ // 网关调用策略，默认：顺序调用 &amp;#39;strategy&amp;#39; =&amp;gt; \Overtrue\EasySms\Strategies\OrderStrategy::class, // 默认可用的发送网关 &amp;#39;gateways&amp;#39; =&amp;gt; [&amp;#39;qcloud&amp;#39;,], ], // 可用的网关配置 &amp;#39;gateways&amp;#39; =&amp;gt; [ &amp;#39;errorlog&amp;#39; =&amp;gt; [&amp;#39;file&amp;#39; =&amp;gt; &amp;#39;/tmp/easy-sms.log&amp;#39;,], &amp;#39;qcloud&amp;#39; =&amp;gt; [ &amp;#39;sdk_app_id&amp;#39; =&amp;gt; env(&amp;#39;QCLOUD_SMS_SDK_APP_ID&amp;#39;), &amp;#39;app_key&amp;#39; =&amp;gt; env(&amp;#39;QCLOUD_SMS_APP_KEY&amp;#39;), ], ], ]; .</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<p>试过<code>云片</code>和<code>聚合</code>的短信，由于一些原因，审核都没通过，于是就转战了<code>腾讯云</code>的短信服务，难道是因为本人使用的是腾讯云服务器，所以提交不到一个小时就审核通过了？哈哈哈&hellip;..</p>
<p><a href="https://cloud.tencent.com/document/product">腾讯云文档平台</a></p>
<!-- raw HTML omitted -->
<h3 id="发送前准备">发送前准备</h3>
<p><a href="https://cloud.tencent.com/document/product/382/18071#.E5.8F.91.E9.80.81.E5.89.8D.E5.87.86.E5.A4.87">https://cloud.tencent.com/document/product/382/18071#.E5.8F.91.E9.80.81.E5.89.8D.E5.87.86.E5.A4.87</a></p>
<!-- raw HTML omitted -->
<pre tabindex="0"><code>大致流程：添加应用-&gt;点击新增的应用-&gt;国内短信-&gt;短信内容配置-&gt;短信签名和短信正文
</code></pre><ul>
<li>短信签名图（注意这里的签名内容须为 <code>ICP备案的负责人名称</code>+<code>网站名称</code>）：</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180805-tencent-sms01.jpg" alt="签名"></p>
<ul>
<li>短信正文即模板图：</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180805-tencent-sms02.jpg" alt="模板"></p>
<h3 id="下面记录一下测试过程">下面记录一下测试过程</h3>
<p>1、<code>composer</code>了一个全新的<code>laravel</code>框架5.7：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel <span class="nb">test</span>
</span></span></code></pre></div><p>2、没有从官方下载SDK，直接<code>composer</code>一个很好用的包（因为是overtrue出品）：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require <span class="s2">&#34;overtrue/easy-sms&#34;</span>
</span></span></code></pre></div><p>3、由于该组件还没有 <code>Laravel</code> 的 <code>ServiceProvider</code>，为了方便使用，我们可以自己封装一下。</p>
<ul>
<li>首先在 <code>config</code> 目录中增加 <code>easysms.php</code> 文件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">touch config/easysms.php
</span></span></code></pre></div><ul>
<li><code>config/easysms.php</code> , 填入如下内容</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// HTTP 请求的超时时间（秒）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;timeout&#39;</span> <span class="o">=&gt;</span> <span class="mf">5.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 默认发送配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;default&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 网关调用策略，默认：顺序调用
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;strategy&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Overtrue\EasySms\Strategies\OrderStrategy</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 默认可用的发送网关
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;gateways&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;qcloud&#39;</span><span class="p">,],</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 可用的网关配置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;gateways&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;errorlog&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;file&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;/tmp/easy-sms.log&#39;</span><span class="p">,],</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;qcloud&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;sdk_app_id&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;QCLOUD_SMS_SDK_APP_ID&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;app_key&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;QCLOUD_SMS_APP_KEY&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><ul>
<li><code>.env</code>配置</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># qcloud sms</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">QCLOUD_SMS_SDK_APP_ID=140018xxxx</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">QCLOUD_SMS_APP_KEY=9a88180e4a4004520610434f40fxxxxx</span><span class="w">
</span></span></span></code></pre></div><ul>
<li>然后创建一个 <code>ServiceProvider</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:provider EasySmsServiceProvider
</span></span></code></pre></div><ul>
<li>修改文件 <code>app/providers/EasySmsServiceProvider.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Providers</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Overtrue\EasySms\EasySms</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Support\ServiceProvider</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">EasySmsServiceProvider</span> <span class="k">extends</span> <span class="nx">ServiceProvider</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Bootstrap the application services.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * Register the application services.
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return void
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">register</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">singleton</span><span class="p">(</span><span class="nx">EasySms</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="k">new</span> <span class="nx">EasySms</span><span class="p">(</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;easysms&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="o">-&gt;</span><span class="na">alias</span><span class="p">(</span><span class="nx">EasySms</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="s1">&#39;easysms&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>最后 打开<code>config/app.php</code> 在 <code>providers</code> 中增加 <code>App\Providers\EasySmsServiceProvider::class</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">App\Providers\EasySmsServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span></code></pre></div><p>4、写好路由：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="c1">//腾讯云短信测试
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/sms&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@sms&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;sms&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/sms_send&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@smsSend&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;sms.send&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;/sms_validate&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@validateSmsCode&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;sms.validate&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/sms_success&#39;</span><span class="p">,</span> <span class="s1">&#39;TestController@validateSmsCode&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;sms.success&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>5、开始短信的基础页面和逻辑：</p>
<ul>
<li>发送短信表单页面</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180805-tencent-sms03.jpg" alt="短信表单"></p>
<ul>
<li><code>TestController</code>拿到<code>phone</code>，然后去调用腾讯云短信服务，像该手机号发送短信验证码</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Overtrue\EasySms\EasySms</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> * 调用腾讯云发送短信验证码
</span></span></span><span class="line"><span class="cl"><span class="cm"> * */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">smsSend</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$easySms</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;easysms&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$expire_minutes</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$code</span> <span class="o">=</span> <span class="nx">str_pad</span><span class="p">(</span><span class="nx">random_int</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9999</span><span class="p">),</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">STR_PAD_LEFT</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$data</span><span class="o">=</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;code&#39;</span><span class="o">=&gt;</span><span class="nv">$code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;phone&#39;</span><span class="o">=&gt;</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;sms_content&#39;</span> <span class="o">=&gt;</span> <span class="s2">&#34; </span><span class="si">{</span><span class="nv">$code</span><span class="si">}</span><span class="s2">为您的登录验证码，请于</span><span class="si">{</span><span class="nv">$expire_minutes</span><span class="si">}</span><span class="s2">分钟内填写。如非本人操作，请忽略本短信。 &#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$res</span><span class="o">=</span><span class="nv">$easySms</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;content&#39;</span> <span class="o">=&gt;</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;sms_content&#39;</span><span class="p">],]);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$res</span><span class="p">[</span><span class="s1">&#39;qcloud&#39;</span><span class="p">][</span><span class="s1">&#39;status&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;success&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nx">SmsMessage</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$expired_at</span> <span class="o">=</span> <span class="nx">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addMinutes</span><span class="p">(</span><span class="nv">$expire_minutes</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 缓存验证码 10 分钟过期
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">\Cache</span><span class="o">::</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;smsKey_&#39;</span><span class="o">.</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;phone&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span> <span class="o">=&gt;</span> <span class="nv">$code</span><span class="p">],</span> <span class="nv">$expired_at</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;status&#39;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;msg&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;已发送&#39;</span><span class="p">,</span><span class="s1">&#39;data&#39;</span><span class="o">=&gt;</span><span class="nv">$res</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">[</span><span class="s1">&#39;status&#39;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span><span class="s1">&#39;msg&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;发送异常&#39;</span><span class="p">,</span><span class="s1">&#39;data&#39;</span><span class="o">=&gt;</span><span class="nv">$data</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">catch</span> <span class="p">(</span><span class="nx">NoGatewayAvailableException</span> <span class="nv">$e</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$e</span><span class="o">-&gt;</span><span class="na">getResults</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>然后简单验证一下，这里只是做个测试</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">* 短信验证码验证
</span></span></span><span class="line"><span class="cl"><span class="cm">* */</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">validateSmsCode</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="nx">cache</span><span class="p">(</span><span class="s1">&#39;smsKey_&#39;</span><span class="o">.</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">)</span> <span class="o">!=</span> <span class="s1">&#39;&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">cache</span><span class="p">(</span><span class="s1">&#39;smsKey_&#39;</span><span class="o">.</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">phoneNum</span><span class="p">)[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">code</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;sms_success&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="nx">back</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">with</span><span class="p">([</span><span class="s1">&#39;sms_validate&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;验证失败&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">withInput</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="结果">结果</h4>
<ul>
<li>手机收到的效果：</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180805-tencent-sms04.jpg" alt="效果"></p>
<ul>
<li>简单登录后：</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/20180805-tencent-sms05.jpg" alt="首页"></p>
<!-- raw HTML omitted -->
<p><strong>只是做了测试短信的发送是否成功，后续的登录验证并没有做！！！！</strong></p>
]]></content>
		</item>
		
		<item>
			<title>Laravel之假数据（Seeder）</title>
			<link>https://blog.gookm.cn/posts/2018/20180718-laravel-seeder/</link>
			<pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180718-laravel-seeder/</guid>
			<description>Laravel 包含一个填充类可以为你的数据库填充测试数据。所有的填充类都放在 database/seeds 目录下. 你可以随意为填充类命名， 但是更建议您遵守类似 UsersTableSeeder 的命名规范。通常， Laravel 默认定义了一个DatabaseSeeder 类。通过这个类，你可以用 call 方法来运行其它的 seed 类从而控制数据填充的顺序。
命令创建 php artisan make:model Models/Product -mf -fm 参数代表同时生成 factory 工厂文件和 migration 数据库迁移文件 生成product模型文件：app/Models/Product.php -m生成product的迁移文件：database/migrations/&amp;lt; your_date &amp;gt;_create_products_table.php -f生成product的工厂文件：database/factories/ModelsProductFactory.php 更新自动加载 重命名工厂文件之后需要执行 composer dumpautoload，否则会找不到对应的工厂文件。 将工厂文件重命名： &amp;gt; mv database/factories/ModelsProductFactory.php database/factories/ProductFactory.php &amp;gt; composer dumpautoload 介绍工厂文件 模型文件和迁移文件写法就不介绍了，介绍下工厂文件的例子： factory 工厂文件会使用 faker 来自动生成字段的内容，默认情况下是英文，可以修改成中文： //config/app.php &amp;#39;faker_locale&amp;#39; =&amp;gt; &amp;#39;zh_CN&amp;#39;, 代码 &amp;lt;?php use Faker\Generator as Faker; $factory-&amp;gt;define(App\Models\Product::class, function (Faker $faker) { $image = $faker-&amp;gt;randomElement([ &amp;#34;https://lccdn.phphub.org/uploads/images/201806/01/5320/7kG1HekGK6.jpg&amp;#34;, &amp;#34;https://lccdn.</description>
			<content type="html"><![CDATA[<blockquote>
<p>Laravel 包含一个填充类可以为你的数据库填充测试数据。所有的填充类都放在 database/seeds 目录下. 你可以随意为填充类命名， 但是更建议您遵守类似 UsersTableSeeder 的命名规范。通常， Laravel 默认定义了一个DatabaseSeeder 类。通过这个类，你可以用 call 方法来运行其它的 seed 类从而控制数据填充的顺序。</p>
</blockquote>
<h3 id="命令创建">命令创建</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:model Models/Product -mf
</span></span></code></pre></div><ul>
<li>-fm 参数代表同时生成 factory 工厂文件和 migration 数据库迁移文件</li>
<li>生成product模型文件：app/Models/Product.php</li>
<li>-m生成product的迁移文件：database/migrations/&lt; your_date &gt;_create_products_table.php</li>
<li>-f生成product的工厂文件：database/factories/ModelsProductFactory.php</li>
</ul>
<h3 id="更新自动加载">更新自动加载</h3>
<ul>
<li>重命名工厂文件之后需要执行 <code>composer dumpautoload</code>，否则会找不到对应的工厂文件。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">将工厂文件重命名：
</span></span><span class="line"><span class="cl">&gt; mv database/factories/ModelsProductFactory.php database/factories/ProductFactory.php
</span></span><span class="line"><span class="cl">&gt; composer dumpautoload
</span></span></code></pre></div><h3 id="介绍工厂文件">介绍工厂文件</h3>
<ul>
<li>模型文件和迁移文件写法就不介绍了，介绍下工厂文件的例子：
factory 工厂文件会使用 faker 来自动生成字段的内容，默认情况下是英文，可以修改成中文：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//config/app.php     
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="s1">&#39;faker_locale&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;zh_CN&#39;</span><span class="p">,</span>
</span></span></code></pre></div><ul>
<li>代码</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Faker\Generator</span> <span class="k">as</span> <span class="nx">Faker</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$factory</span><span class="o">-&gt;</span><span class="na">define</span><span class="p">(</span><span class="nx">App\Models\Product</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nx">Faker</span> <span class="nv">$faker</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$image</span> <span class="o">=</span> <span class="nv">$faker</span><span class="o">-&gt;</span><span class="na">randomElement</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;https://lccdn.phphub.org/uploads/images/201806/01/5320/7kG1HekGK6.jpg&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;https://lccdn.phphub.org/uploads/images/201806/01/5320/1B3n0ATKrn.jpg&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;https://lccdn.phphub.org/uploads/images/201806/01/5320/r3BNRe4zXG.jpg&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;title&#39;</span>        <span class="o">=&gt;</span> <span class="nv">$faker</span><span class="o">-&gt;</span><span class="na">word</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;description&#39;</span>  <span class="o">=&gt;</span> <span class="nv">$faker</span><span class="o">-&gt;</span><span class="na">sentence</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;image&#39;</span>        <span class="o">=&gt;</span> <span class="nv">$image</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;on_sale&#39;</span>      <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;rating&#39;</span>       <span class="o">=&gt;</span> <span class="nv">$faker</span><span class="o">-&gt;</span><span class="na">numberBetween</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;sold_count&#39;</span>   <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;review_count&#39;</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;price&#39;</span>        <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><h3 id="创建seeder">创建Seeder</h3>
<ul>
<li>然后创建一个 Seeder 文件用来批量创建商品：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:seeder ProductsSeeder
</span></span></code></pre></div><ul>
<li><code>database/seeds/ProductsSeeder.php</code>,写法例子：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 创建 30 个商品
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$products</span> <span class="o">=</span> <span class="nx">factory</span><span class="p">(</span><span class="nx">\App\Models\Product</span><span class="o">::</span><span class="na">class</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">create</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="最后执行这个seeder">最后执行这个Seeder</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan db:seed --class<span class="o">=</span>ProductsSeeder
</span></span></code></pre></div><h3 id="seeder文件注册">Seeder文件注册</h3>
<ul>
<li>或者可以把 Seeder 文件(<code>database/seeds/DatabaseSeeder.php</code>)注册到 DatabaseSeeder 中：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Database\Seeder</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DatabaseSeeder</span> <span class="k">extends</span> <span class="nx">Seeder</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">run</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="nx">UsersSeeder</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="nx">ProductsSeeder</span><span class="o">::</span><span class="na">class</span><span class="p">);</span>  
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="运行所有seeder">运行所有Seeder</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">//这个命令会执行你写在DatabaseSeeder.php里面所有的类的run函数
</span></span><span class="line"><span class="cl">php artisan db:seed
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Git基础操作👣</title>
			<link>https://blog.gookm.cn/posts/2018/20180710-git-study/</link>
			<pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180710-git-study/</guid>
			<description>Git基础命令🧐 查看本地分支 git branch 查看本地分支与远程分支 git branch -a 创建分支 git branch [分支名] 创建分支并切换到这个分支下 git checkout -b [分支名] 从远程分支上创建某个分支并切换到这个分支下 // 示例: git checkout -b test origin/test git checkout -b 分支名/[远程分支名] 删除一个已被终止的分支 git branch -d &amp;lt;branch_name&amp;gt; 删除一个正打开的分支 git branch -D &amp;lt;branch_name&amp;gt; /恢复被删除的分支 git branch &amp;lt;branch_name&amp;gt; &amp;lt;hash_val&amp;gt; 合并某分支到当前分支 git merge [分支名] 推送本地某个分支到远程某个分支 // 示例: git push 远程主机名:[远程分支名] git push origin master:master 拉取远程某个分支到本地某个分支 // 示例: git pull 远程主机名:[本地分支名] git pull origin master:master 储藏当前工作状态（可多次）新建的文件须先add再stash git stash //简写 git stash save &amp;#34;message&amp;#34; //备注 查看当前储藏 git stash list 恢复某一储藏版本 // 示例: git stash apply stash@{0} git stash apply [stash@{0}] 删除某一储藏版本 // 示例: git stash drop stash@{0} git stash drop [stash@{0}] 恢复最新的储藏，并把最新的储藏删掉 git stash pop 待续 .</description>
			<content type="html"><![CDATA[<h3 id="git基础命令">Git基础命令🧐</h3>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2018/git_workflow.jpg" alt="Git基础流程"></p>
<ul>
<li>查看本地分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch
</code></pre><ul>
<li>查看本地分支与远程分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch -a
</code></pre><ul>
<li>创建分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch [分支名]
</code></pre><ul>
<li>创建分支并切换到这个分支下</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git checkout -b [分支名]
</code></pre><ul>
<li>从远程分支上创建某个分支并切换到这个分支下</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">// 示例: git checkout -b test origin/test
git checkout -b 分支名/[远程分支名]
</code></pre><ul>
<li>删除一个已被终止的分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch -d &lt;branch_name&gt;
</code></pre><ul>
<li>删除一个正打开的分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch -D &lt;branch_name&gt;
</code></pre><ul>
<li>/恢复被删除的分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git branch &lt;branch_name&gt; &lt;hash_val&gt;
</code></pre><ul>
<li>合并某分支到当前分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git merge [分支名]
</code></pre><ul>
<li>推送本地某个分支到远程某个分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">// 示例: git push 远程主机名:[远程分支名]
git push origin master:master
</code></pre><ul>
<li>拉取远程某个分支到本地某个分支</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">// 示例: git pull 远程主机名:[本地分支名]
git pull origin master:master
</code></pre><ul>
<li>储藏当前工作状态（可多次）新建的文件须先<code>add</code>再<code>stash</code></li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git stash  //简写
git stash save &#34;message&#34; //备注
</code></pre><ul>
<li>查看当前储藏</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git stash list 
</code></pre><ul>
<li>恢复某一储藏版本</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">// 示例: git stash apply stash@{0}
 git stash apply [stash@{0}]
</code></pre><ul>
<li>删除某一储藏版本</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">// 示例: git stash drop stash@{0}
git stash drop [stash@{0}] 
</code></pre><ul>
<li>恢复最新的储藏，并把最新的储藏删掉</li>
</ul>
<pre tabindex="0"><code class="language-git" data-lang="git">git stash pop
</code></pre><p>待续 . . .</p>
]]></content>
		</item>
		
		<item>
			<title>Laravel之异常处理（Exception）</title>
			<link>https://blog.gookm.cn/posts/2018/20180703-laravel-exception/</link>
			<pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180703-laravel-exception/</guid>
			<description>当你启动一个新的 Laravel 项目时，错误及异常处理是已为你配置好了的。App\Exceptions\Handler 类负责记录应用程序触发的所有异常并呈现给用户。在本文档中，我们将深入探讨这个类。
创建异常处理类： php artisan make:exception InvalidRequestException 编写代码 编写 app/Exceptions/InvalidRequestException.php 文件 &amp;lt;?php namespace App\Exceptions; use Exception; use Illuminate\Http\Request; class InvalidRequestException extends Exception { public function __construct(string $message = &amp;#34;&amp;#34;, int $code = 400) { parent::__construct($message, $code); } public function render(Request $request) { if ($request-&amp;gt;expectsJson()) { // json() 方法第二个参数就是 Http 返回码 return response()-&amp;gt;json([&amp;#39;msg&amp;#39; =&amp;gt; $this-&amp;gt;message], $this-&amp;gt;code); } return view(&amp;#39;pages.error&amp;#39;, [&amp;#39;msg&amp;#39; =&amp;gt; $this-&amp;gt;message]); } } Laravel 5.5 之后支持在异常类中定义 render() 方法，该异常被触发时系统会调用 render() 方法来输出，我们在 render() 里判断如果是 AJAX 请求则返回 JSON 格式的数据，否则就返回一个错误页面。 创建这个错误页面 创建文件touch resources/views/pages/error.</description>
			<content type="html"><![CDATA[<blockquote>
<p>当你启动一个新的 Laravel 项目时，错误及异常处理是已为你配置好了的。App\Exceptions\Handler 类负责记录应用程序触发的所有异常并呈现给用户。在本文档中，我们将深入探讨这个类。</p>
</blockquote>
<h3 id="创建异常处理类">创建异常处理类：</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:exception InvalidRequestException
</span></span></code></pre></div><h3 id="编写代码">编写代码</h3>
<ul>
<li>编写 <code>app/Exceptions/InvalidRequestException.php</code> 文件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Exceptions</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">InvalidRequestException</span> <span class="k">extends</span> <span class="nx">Exception</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">string</span> <span class="nv">$message</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nx">int</span> <span class="nv">$code</span> <span class="o">=</span> <span class="mi">400</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$message</span><span class="p">,</span> <span class="nv">$code</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">render</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">expectsJson</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// json() 方法第二个参数就是 Http 返回码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">message</span><span class="p">],</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">code</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;pages.error&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">message</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>Laravel 5.5 之后支持在异常类中定义 render() 方法，该异常被触发时系统会调用 render() 方法来输出，我们在 render() 里判断如果是 AJAX 请求则返回 JSON 格式的数据，否则就返回一个错误页面。</li>
</ul>
<h3 id="创建这个错误页面">创建这个错误页面</h3>
<ul>
<li>创建文件<code>touch resources/views/pages/error.blade.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;panel panel-default&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;panel-heading&#34;</span><span class="p">&gt;</span>错误<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;panel-body text-center&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ $msg }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">a</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-primary&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ route(&#39;root&#39;) }}&#34;</span><span class="p">&gt;</span>返回首页<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span></code></pre></div><h3 id="屏蔽异常信息写入日志">屏蔽异常信息写入日志</h3>
<ul>
<li>当异常触发时 Laravel 默认会把异常的信息和调用栈打印到日志里，当然也可以选择屏蔽此类异常信息写入日志</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">app</span><span class="o">/</span><span class="nx">Exceptions</span><span class="o">/</span><span class="nx">Handler</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$dontReport</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="nx">InvalidRequestException</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h3 id="一般还需要定义一个系统异常">一般还需要定义一个系统异常</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:exception InternalException
</span></span></code></pre></div><h3 id="系统异常">系统异常</h3>
<ul>
<li>捕捉系统异常 <code>app/Exceptions/InternalException.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Exceptions</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Exception</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">InternalException</span> <span class="k">extends</span> <span class="nx">Exception</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$msgForUser</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nx">string</span> <span class="nv">$message</span><span class="p">,</span> <span class="nx">string</span> <span class="nv">$msgForUser</span> <span class="o">=</span> <span class="s1">&#39;系统内部错误&#39;</span><span class="p">,</span> <span class="nx">int</span> <span class="nv">$code</span> <span class="o">=</span> <span class="mi">500</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$message</span><span class="p">,</span> <span class="nv">$code</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">msgForUser</span> <span class="o">=</span> <span class="nv">$msgForUser</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">render</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">expectsJson</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">msgForUser</span><span class="p">],</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">code</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;pages.error&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">msgForUser</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>系统异常就让它写入日志</li>
</ul>
<h3 id="用法">用法</h3>
<ul>
<li>如 <code>InvalidRequestException</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$email</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$token</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="k">throw</span> <span class="k">new</span> <span class="nx">InvalidRequestException</span><span class="p">(</span><span class="s1">&#39;验证链接不正确&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>模型文件中访问器&amp;修改器的用法🍺</title>
			<link>https://blog.gookm.cn/posts/2018/20180623-laravel-attr/</link>
			<pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180623-laravel-attr/</guid>
			<description>当你在 Eloquent 模型实例中获取或设置某些属性值的时候，访问器和修改器允许你对 Eloquent 属性值进行格式化。例如，你可能想要使用 Laravel 加密器 来加密一个即将被保存在数据库中的值，而从 Eloquent 模型访问该属性时自动解密其值
访问器 访问器：若要定义一个访问器，则须在你的模型上创建一个 getFooAttribute 方法。要访问的 Foo 字段需使用「驼峰式」来命名。在这个例子中，我们将为 first_name 属性定义一个访问器。当 Eloquent 尝试获取 first_name 的值时，将会自动调用此访问器：
1、在模型文件中 app/Models/UserAddress.php
public function getFullAddressAttribute() { return &amp;#34;{$this-&amp;gt;province}{$this-&amp;gt;city}{$this-&amp;gt;district}{$this-&amp;gt;address}&amp;#34;; } 2、public function getFullAddressAttribute() 创建了一个访问器，在之后的代码里可以直接通过 $address-&amp;gt;full_address 来获取完整的地址，而不用每次都去拼接
修改器 修改器：若要定义一个修改器，则须在模型上定义一个 setFooAttribute 方法。要访问的 Foo 字段需使用「驼峰式」命名。让我们再来定义一个 first_name 属性的修改器。当我们尝试在模型上设置 first_name 的值时，该修改器将被自动调用：
1、在模型文件中 app/Models/UserAddress.php
public function setFirstNameAttribute($value) { $this-&amp;gt;attributes[&amp;#39;first_name&amp;#39;] = strtolower($value); } 2、public function setFirstNameAttribute() 创建了一个修改器，在之后的代码里可以直接通过 $user-&amp;gt;first_name 来获取首字母小写的名字。</description>
			<content type="html"><![CDATA[<blockquote>
<p>当你在 Eloquent 模型实例中获取或设置某些属性值的时候，访问器和修改器允许你对 Eloquent 属性值进行格式化。例如，你可能想要使用 Laravel 加密器 来加密一个即将被保存在数据库中的值，而从 Eloquent 模型访问该属性时自动解密其值</p>
</blockquote>
<h3 id="访问器">访问器</h3>
<blockquote>
<p>访问器：若要定义一个访问器，则须在你的模型上创建一个 getFooAttribute 方法。要访问的 Foo 字段需使用「驼峰式」来命名。在这个例子中，我们将为 first_name 属性定义一个访问器。当 Eloquent 尝试获取 first_name 的值时，将会自动调用此访问器：</p>
</blockquote>
<p>1、在模型文件中 <code>app/Models/UserAddress.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">getFullAddressAttribute</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="s2">&#34;</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">province</span><span class="si">}{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">city</span><span class="si">}{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">district</span><span class="si">}{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">address</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span></code></pre></div><p>2、<code>public function getFullAddressAttribute()</code> 创建了一个访问器，在之后的代码里可以直接通过 <code>$address-&gt;full_address</code> 来获取完整的地址，而不用每次都去拼接</p>
<h3 id="修改器">修改器</h3>
<blockquote>
<p>修改器：若要定义一个修改器，则须在模型上定义一个 setFooAttribute 方法。要访问的 Foo 字段需使用「驼峰式」命名。让我们再来定义一个 first_name 属性的修改器。当我们尝试在模型上设置 first_name 的值时，该修改器将被自动调用：</p>
</blockquote>
<p>1、在模型文件中 <code>app/Models/UserAddress.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">setFirstNameAttribute</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">attributes</span><span class="p">[</span><span class="s1">&#39;first_name&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">strtolower</span><span class="p">(</span><span class="nv">$value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>2、<code>public function setFirstNameAttribute()</code> 创建了一个修改器，在之后的代码里可以直接通过 <code>$user-&gt;first_name</code> 来获取首字母小写的名字。</p>
]]></content>
		</item>
		
		<item>
			<title>Laravel之中间件（Middleware）🌼</title>
			<link>https://blog.gookm.cn/posts/2018/20180614-laravel-middlleware02/</link>
			<pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180614-laravel-middlleware02/</guid>
			<description> 希望用户在验证邮箱之后才能正常使用系统的功能，当用户尚未验证邮箱时，访问其他页面都会被重定向到一个提示验证邮箱的页面。对于这种需求可以通过中间件来解决，把需要验证邮箱的路由放到拥有这个中间件的路由组中，当用户访问这些路由时会先执行中间件检查是否验证了邮箱。
创建中间件 通过 make:middleware 命令来创建一个中间件 php artisan make:middleware CheckIfEmailVerified 编写代码 app/Http/Middleware/CheckIfEmailVerified.php public function handle($request, Closure $next) { if (!$request-&amp;gt;user()-&amp;gt;email_verified) { // 如果是 AJAX 请求，则通过 JSON 返回 if ($request-&amp;gt;expectsJson()) { return response()-&amp;gt;json([&amp;#39;msg&amp;#39; =&amp;gt; &amp;#39;请先验证邮箱&amp;#39;], 400); } return redirect(route(&amp;#39;email_verify_notice&amp;#39;)); } return $next($request); } 当中间件被执行时，Laravel 会调用中间件的 handle 方法，第一个参数是当前请求对象，第二个参数是执行下一个中间件的闭包函数。$next($request) 代表执行下一个中间件。
注册中间件 最后再在 Kernel 中注册我们刚刚创建的中间件 app/Http/Kernel.php protected $routeMiddleware = [ &amp;#39;email_verified&amp;#39; =&amp;gt; \App\Http\Middleware\CheckIfEmailVerified::class, ]; 测试 Route::group([&amp;#39;middleware&amp;#39; =&amp;gt; &amp;#39;auth&amp;#39;], function() { Route::group([&amp;#39;middleware&amp;#39; =&amp;gt; &amp;#39;email_verified&amp;#39;], function() { Route::get(&amp;#39;/test&amp;#39;, function() { return &amp;#39;Your email is verified&amp;#39;; }); }); }); </description>
			<content type="html"><![CDATA[<blockquote>
<p>希望用户在验证邮箱之后才能正常使用系统的功能，当用户尚未验证邮箱时，访问其他页面都会被重定向到一个提示验证邮箱的页面。对于这种需求可以通过中间件来解决，把需要验证邮箱的路由放到拥有这个中间件的路由组中，当用户访问这些路由时会先执行中间件检查是否验证了邮箱。</p>
</blockquote>
<h3 id="创建中间件">创建中间件</h3>
<ul>
<li>通过 <code>make:middleware</code> 命令来创建一个中间件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:middleware CheckIfEmailVerified
</span></span></code></pre></div><h3 id="编写代码">编写代码</h3>
<ul>
<li><code>app/Http/Middleware/CheckIfEmailVerified.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Closure</span> <span class="nv">$next</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">email_verified</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 如果是 AJAX 请求，则通过 JSON 返回
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">expectsJson</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">response</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">json</span><span class="p">([</span><span class="s1">&#39;msg&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;请先验证邮箱&#39;</span><span class="p">],</span> <span class="mi">400</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">redirect</span><span class="p">(</span><span class="nx">route</span><span class="p">(</span><span class="s1">&#39;email_verify_notice&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$next</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>当中间件被执行时，Laravel 会调用中间件的 handle 方法，第一个参数是当前请求对象，第二个参数是执行下一个中间件的闭包函数。$next($request) 代表执行下一个中间件。</p>
<h3 id="注册中间件">注册中间件</h3>
<ul>
<li>最后再在 <code>Kernel</code> 中注册我们刚刚创建的中间件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">app</span><span class="o">/</span><span class="nx">Http</span><span class="o">/</span><span class="nx">Kernel</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$routeMiddleware</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;email_verified&#39;</span> <span class="o">=&gt;</span> <span class="nx">\App\Http\Middleware\CheckIfEmailVerified</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h3 id="测试">测试</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span><span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;auth&#39;</span><span class="p">],</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span><span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;email_verified&#39;</span><span class="p">],</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/test&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s1">&#39;Your email is verified&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"> <span class="p">});</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>第三方登录之Github</title>
			<link>https://blog.gookm.cn/posts/2018/20180519-socialite-github/</link>
			<pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180519-socialite-github/</guid>
			<description>导语 所谓的第三方登录，就是利用用户在第三方平台上已有的账号来快速完成自己应用的登录或者注册的功能，常用的协议为 OAuth 2.0，基本上每个 APP，都会集成微信，微博等第三方登录，方便用户快速的登录并开始使用。
关于 OAuth 2.0 协议，可以先参考阮一峰的 理解OAuth 2.0 了解一下 OAuth 2.0 的概念。OAuth 2.0 的授权模式一共有4种，常用的模式为 授权码模式。
简单的解释一下流程👇
1. 客户端（app/浏览器）将用户导向第三方认证服务器 2. 用户在第三方认证服务器，选择是否给予客户端授权 3. 用户同意授权后，认证服务器将用户导向客户端事先指定的 重定向URI，同时附上一个授权码。 4. 客户端将授权码发送至服务器，服务器通过授权码以及 APP_SECRET 向第三方服务器申请 access_token 5. 服务器通过 access_token，向第三方服务器申请用户数据，完成登录流程 以上是一个基本流程，无论是网页应用，还是手机应用，流程都基本相同。
配置 使用 overtrue/laravel-socialite 来实现 Github 登录，支持国内应用的 Laravel 扩展包，比如微信、QQ、微博等。当然，你用laravel/socialite包也是可以的，不过对QQ，微博等国内的就不支持了。
1、安装Laravel扩展包
composer require &amp;#34;overtrue/laravel-socialite:~2.0&amp;#34; 2、注册服务 (config/app.php)
&amp;#39;providers&amp;#39; =&amp;gt; [ // Other service providers... Overtrue\LaravelSocialite\ServiceProvider::class, ], 3、把 Socialite facade 加入到 aliases 数组中 config/app.php
&amp;#39;Socialite&amp;#39; =&amp;gt; Laravel\Socialite\Facades\Socialite::class, 4、添加上应用程序所使用的 OAuth 服务的凭证(config/services.</description>
			<content type="html"><![CDATA[<h3 id="导语">导语</h3>
<blockquote>
<p>所谓的第三方登录，就是利用用户在第三方平台上已有的账号来快速完成自己应用的登录或者注册的功能，常用的协议为 OAuth 2.0，基本上每个 APP，都会集成微信，微博等第三方登录，方便用户快速的登录并开始使用。</p>
</blockquote>
<ul>
<li>
<p>关于 OAuth 2.0 协议，可以先参考阮一峰的 <a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html">理解OAuth 2.0</a> 了解一下 OAuth 2.0 的概念。OAuth 2.0 的授权模式一共有4种，常用的模式为 授权码模式。</p>
</li>
<li>
<p>简单的解释一下流程👇</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 客户端（app/浏览器）将用户导向第三方认证服务器
</span></span><span class="line"><span class="cl">2. 用户在第三方认证服务器，选择是否给予客户端授权
</span></span><span class="line"><span class="cl">3. 用户同意授权后，认证服务器将用户导向客户端事先指定的 重定向URI，同时附上一个授权码。
</span></span><span class="line"><span class="cl">4. 客户端将授权码发送至服务器，服务器通过授权码以及 APP_SECRET 向第三方服务器申请 access_token
</span></span><span class="line"><span class="cl">5. 服务器通过 access_token，向第三方服务器申请用户数据，完成登录流程
</span></span></code></pre></div><p>以上是一个基本流程，无论是网页应用，还是手机应用，流程都基本相同。</p>
<h3 id="配置">配置</h3>
<p>使用 <code>overtrue/laravel-socialite</code> 来实现 Github 登录，支持国内应用的 Laravel 扩展包，比如微信、QQ、微博等。当然，你用laravel/socialite包也是可以的，不过对QQ，微博等国内的就不支持了。</p>
<p>1、安装Laravel扩展包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require <span class="s2">&#34;overtrue/laravel-socialite:~2.0&#34;</span>
</span></span></code></pre></div><p>2、注册服务 (<code>config/app.php</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;providers&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Other service providers...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">Overtrue\LaravelSocialite\ServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>3、把 <code>Socialite facade</code> 加入到 <code>aliases</code> 数组中 <code>config/app.php</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;Socialite&#39;</span> <span class="o">=&gt;</span> <span class="nx">Laravel\Socialite\Facades\Socialite</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span></code></pre></div><p>4、添加上应用程序所使用的 OAuth 服务的凭证(<code>config/services.php</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;github&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;client_id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;d53ab19b1c64d0f7****&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;client_secret&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;3d90bf64d4fa2aa4*****ecc67646651cec32491&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;redirect&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;http://test.test/login/github/callback&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>5、Github申请应用</p>
<p>点击<a href="https://github.com/settings/applications/new">链接</a>到申请页面：</p>
<table>
<thead>
<tr>
<th>Column 1</th>
<th>Column 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>Application name</td>
<td>test</td>
</tr>
<tr>
<td>Homepage URL</td>
<td><a href="http://test.test/">http://test.test/</a></td>
</tr>
<tr>
<td>Application description</td>
<td>测试GitHub登录</td>
</tr>
<tr>
<td>Authorization callback URL</td>
<td><a href="http://test.test/login/github/callback">http://test.test/login/github/callback</a> （注意）</td>
</tr>
</tbody>
</table>
<p>申请后会拿到<code>Client ID</code>和<code>Client Secret</code>。</p>
<h3 id="实现github登录">实现GitHub登录</h3>
<p>1、需要两个路由：一个重定向用户到 Github 授权，另一个在 Github 验证之后接收回调</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//第三方登录测试
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;login/github&#39;</span><span class="p">,</span> <span class="s1">&#39;Auth\LoginController@redirectToProvider&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;githubLogin&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;login/github/callback&#39;</span><span class="p">,</span> <span class="s1">&#39;Auth\LoginController@handleProviderCallback&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>2、接下来给 <code>LoginControlle</code>r 控制添加两个方法，<code>redirectToProvider</code> 方法重定向到 Github 授权页面，<code>handleProviderCallback</code>方法在 Github 验证之后接收回调(<code>Auth\LoginControllrt.php</code>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//重定向到 Github 授权页面
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">redirectToProvider</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">Socialite</span><span class="o">::</span><span class="na">driver</span><span class="p">(</span><span class="s1">&#39;github&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">// 在 Github 验证之后接收回调
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">protected</span> <span class="nv">$github_user</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">handleProviderCallback</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$github_user</span> <span class="o">=</span> <span class="nx">Socialite</span><span class="o">::</span><span class="na">driver</span><span class="p">(</span><span class="s1">&#39;github&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">user</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$user</span><span class="o">=</span><span class="nx">User</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;github_name&#39;</span><span class="p">,</span><span class="nv">$github_user</span><span class="o">-&gt;</span><span class="na">nickname</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="k">empty</span><span class="p">(</span><span class="nv">$user</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$user</span><span class="o">=</span><span class="nx">User</span><span class="o">::</span><span class="na">create</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;name&#39;</span><span class="o">=&gt;</span><span class="nv">$github_user</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;email&#39;</span><span class="o">=&gt;</span><span class="nv">$github_user</span><span class="o">-&gt;</span><span class="na">email</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;github_name&#39;</span><span class="o">=&gt;</span><span class="nv">$github_user</span><span class="o">-&gt;</span><span class="na">nickname</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;avatar&#39;</span><span class="o">=&gt;</span><span class="nv">$github_user</span><span class="o">-&gt;</span><span class="na">avatar</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;verified&#39;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">\Auth</span><span class="o">::</span><span class="na">login</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">Redirect</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">guest</span><span class="p">(</span><span class="s1">&#39;/home&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="结束语">结束语</h3>
<blockquote>
<p>即使生活是一片沙漠🏜，也要在沙漠中开出花朵🌼。</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>Laravel的API初始搭建之JWT</title>
			<link>https://blog.gookm.cn/posts/2018/20180505-api-jwt/</link>
			<pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180505-api-jwt/</guid>
			<description>写接口好写，但麻烦的是起步，需要做一些安全的措施，下面就记录一下Laravel的初始API搭建步骤！！！
安装laravel（5.5） 对于 LTS 版本，例如 Laravel 5.1，提供两年的错误修复和三年的安全修复。这些版本提供最长时间的支持和维护。对于一般版本，则只是提供六个月的错误修复和为期一年的安全修复。
composer create-project --prefer-dist laravel/laravel blog &amp;#34;5.5.*&amp;#34; 安装DingoAPI（参考文档） dingo/api 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。更多的功能，还需要仔细阅读 DingoApi 的 文档 来深入的学习和理解。
Laravel 5.5 的适配版本为dingo/api:v2.0.0-alpha2，所以我们需要安装这个 tag composer require dingo/api:2.0.0-alpha2 会报错：You requirements could not be resolved to an installable set of packages 原因：dingo 的文档中有说明，现在这个包还处在开发阶段，没有一个稳定的 release 版本， dingo/api 依赖的 dingo/blueprint 与 phpunit 都依赖了 phpdocumentor/reflection-docblock 但是依赖的版本不同， 导致出现了冲突。但是我们发现 dingo/blueprint 的开发版本 dev-master 解决了冲突，可以正常安装； 解决：修改一下 composer.json &amp;#34;config&amp;#34;: { &amp;#34;preferred-install&amp;#34;: &amp;#34;dist&amp;#34;, &amp;#34;sort-packages&amp;#34;: true, &amp;#34;optimize-autoloader&amp;#34;: true }, &amp;#34;minimum-stability&amp;#34; : &amp;#34;dev&amp;#34;, &amp;#34;prefer-stable&amp;#34; : true, minimum-stability&amp;#34; : &amp;#34;dev&amp;#34; #设定的最低稳定性的版本为 dev 也就是可以依赖开发版本的扩展包； &amp;#34;prefer-stable&amp;#34; : true —— Composer 优先使用更稳定的包版本。 dingo 的配置文件 publish 出来： php artisan vendor:publish 4、在.</description>
			<content type="html"><![CDATA[<p><strong>写接口好写，但麻烦的是起步，需要做一些安全的措施，下面就记录一下Laravel的初始API搭建步骤！！！</strong></p>
<h3 id="安装laravel55">安装laravel（5.5）</h3>
<p>对于 LTS 版本，例如 Laravel 5.1，提供两年的错误修复和三年的安全修复。这些版本提供最长时间的支持和维护。对于一般版本，则只是提供六个月的错误修复和为期一年的安全修复。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel blog <span class="s2">&#34;5.5.*&#34;</span>
</span></span></code></pre></div><h3 id="安装dingoapi参考文档">安装DingoAPI（参考文档）</h3>
<blockquote>
<p>dingo/api 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。更多的功能，还需要仔细阅读 DingoApi 的 文档 来深入的学习和理解。</p>
</blockquote>
<ul>
<li>Laravel 5.5 的适配版本为dingo/api:v2.0.0-alpha2，所以我们需要安装这个 tag</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require dingo/api:2.0.0-alpha2
</span></span></code></pre></div><ul>
<li>会报错：You requirements could not be resolved to an installable set of packages</li>
<li>原因：dingo 的文档中有说明，现在这个包还处在开发阶段，没有一个稳定的 release 版本，
dingo/api 依赖的 dingo/blueprint 与 phpunit 都依赖了 phpdocumentor/reflection-docblock 但是依赖的版本不同，
导致出现了冲突。但是我们发现 dingo/blueprint 的开发版本 dev-master 解决了冲突，可以正常安装；</li>
<li>解决：修改一下 composer.json</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s2">&#34;config&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;preferred-install&#34;</span><span class="o">:</span> <span class="s2">&#34;dist&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sort-packages&#34;</span><span class="o">:</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;optimize-autoloader&#34;</span><span class="o">:</span> <span class="k">true</span>
</span></span><span class="line"><span class="cl"><span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;minimum-stability&#34;</span> <span class="o">:</span> <span class="s2">&#34;dev&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="s2">&#34;prefer-stable&#34;</span> <span class="o">:</span> <span class="k">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="nx">minimum</span><span class="o">-</span><span class="nx">stability</span><span class="s2">&#34; : &#34;</span><span class="nx">dev</span><span class="s2">&#34; #设定的最低稳定性的版本为 dev 也就是可以依赖开发版本的扩展包；
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span><span class="nx">prefer</span><span class="o">-</span><span class="nx">stable</span><span class="s2">&#34; : true —— Composer 优先使用更稳定的包版本。
</span></span></span></code></pre></div><ul>
<li>dingo 的配置文件 publish 出来：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan vendor:publish
</span></span></code></pre></div><p>4、在.env中增加如下代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">API_STANDARDS_TREE=prs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">API_SUBTYPE=laraapi</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">API_PREFIX=api</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">API_VERSION=v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">API_DEBUG=true</span><span class="w">
</span></span></span></code></pre></div><p>注释：
prs：未对外发布的，提供给公司 app，单页应用，桌面应用等（x,vnd）
API_SUBTYPE 一般情况下是我们项目的简称，我们的项目叫laraapi
Accept: application/&lt;API_STANDARDS_TREE&gt;.&lt;API_SUBTYPE&gt;.v1+json（使用 Accept 头来指定我们需要访问的 API 版）</p>
<h3 id="测试">测试</h3>
<ul>
<li>路由文件（api.php）：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$api</span> <span class="o">=</span> <span class="nx">app</span><span class="p">(</span><span class="s1">&#39;Dingo\Api\Routing\Router&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$api</span><span class="o">-&gt;</span><span class="na">version</span><span class="p">(</span><span class="s1">&#39;v1&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nv">$api</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$api</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;version&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">response</span><span class="p">(</span><span class="s1">&#39;this is version v1&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><ul>
<li>在postman中请求会返回this is version v1（默认v1）
<a href="http://jwt.test/api/version">http://jwt.test/api/version</a></li>
</ul>
<h3 id="节流处理防止攻击">节流处理防止攻击</h3>
<ul>
<li><code>routes/api.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$api</span><span class="o">-&gt;</span><span class="na">version</span><span class="p">(</span><span class="s1">&#39;v1&#39;</span><span class="p">,</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;namespace&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;App\Http\Controllers\Api&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span> <span class="k">function</span><span class="p">(</span><span class="nv">$api</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$api</span><span class="o">-&gt;</span><span class="na">group</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;middleware&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;api.throttle&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;limit&#39;</span> <span class="o">=&gt;</span> <span class="nx">config</span><span class="p">(</span><span class="s1">&#39;api.rate_limits.sign.limit&#39;</span><span class="p">),</span><span class="c1">//总分钟下总多少次
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="s1">&#39;expires&#39;</span> <span class="o">=&gt;</span> <span class="nx">config</span><span class="p">(</span><span class="s1">&#39;api.rate_limits.sign.expires&#39;</span><span class="p">),</span><span class="c1">//总分钟数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">],</span> <span class="k">function</span><span class="p">(</span><span class="nv">$api</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 用户注册
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$api</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">,</span> <span class="s1">&#39;UsersController@store&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;api.users.store&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span></code></pre></div><ul>
<li>写成配置，可以更方便的控制调用频率（config/api.php）：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm"> * 接口频率限制
</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;rate_limits&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 访问频率限制，次数/分钟
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;access&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;expires&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RATE_LIMITS_EXPIRES&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;limit&#39;</span>  <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;RATE_LIMITS&#39;</span><span class="p">,</span> <span class="mi">60</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 登录相关，次数/分钟
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;sign&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;expires&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;SIGN_RATE_LIMITS_EXPIRES&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;limit&#39;</span>  <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;SIGN_RATE_LIMITS&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><ul>
<li>增加了两种限制，一种登录相关的，一分钟可以调用10次，一种是访问相关的，一分钟调用60次。</li>
</ul>
<h3 id="登录api获取jwt令牌">登录API获取JWT令牌</h3>
<ul>
<li>参考文档</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"> JWT 是 JSON Web Token 的缩写，是一个非常轻巧的规范，
</span></span><span class="line"><span class="cl"> 这个规范允许我们使用 JWT 在用户和服务器之间传递安全可靠的信息。
</span></span><span class="line"><span class="cl"> JWT 由头部（header）、载荷（payload）与签名（signature）组成。
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"> JWT 最后是通过 Base64 编码的，也就是说，它可以被翻译回原来的样子来的。所以不要在 JWT 中存放一些敏感信息。
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"> Token 验证
</span></span><span class="line"><span class="cl"> 有了 token 之后该如何验证 token 的有效性，并得到 token 对应的用户呢？
</span></span><span class="line"><span class="cl"> 其实原理很简单，DingoApi 为我们准备好了 api.auth 这个中间件
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"> - 获取客户端提交的 token
</span></span><span class="line"><span class="cl"> - 检测 token 中的签名 signature 是否正确
</span></span><span class="line"><span class="cl"> - 判断 payload 数据中的 exp，是否已经过期
</span></span><span class="line"><span class="cl"> - 根据 payload 数据中的 sub，取数据库中验证用户是否存在
</span></span><span class="line"><span class="cl"> - 上述检测不正确，则抛出相应异常
</span></span></code></pre></div><ul>
<li>安装</li>
</ul>
<p>1、安装 jwt-auth</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">composer</span> <span class="k">require</span> <span class="nx">tymon</span><span class="o">/</span><span class="nx">jwt</span><span class="o">-</span><span class="nx">auth</span><span class="o">:</span><span class="mf">1.0</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="nx">rc</span><span class="o">.</span><span class="mi">2</span>
</span></span></code></pre></div><p>2、需要设置一下 JWT 的 secret，这个 secret 很重要，用于最后的签名，更换这个secret 会导致之前生成的所有 token 无效。
<code>php artisan jwt:secret</code> （可以看到在 .env 文件中，增加了一行 JWT_SECRET）</p>
<p>3、修改 <code>config/auth.php</code>，将 api guard 的 driver 改为 jwt</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;guards&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;web&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;session&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;provider&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;users&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;api&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;jwt&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;provider&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;users&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>4、修改 <code>config/api.php</code>，auth 中增加 JWT 相关的配置</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;auth&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;jwt&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Dingo\Api\Auth\Provider\JWT&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span>
</span></span></code></pre></div><p>5、<code>user(app\Models\User.php)</code> 模型需要继承 <code>Tymon\JWTAuth\Contracts\JWTSubject</code> 接口，并实现接口的两个方法 <code>getJWTIdentifier()</code> 和 <code>getJWTCustomClaims()</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Models</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Tymon\JWTAuth\Contracts\JWTSubject</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Notifications\Notifiable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Foundation\Auth\User</span> <span class="k">as</span> <span class="nx">Authenticatable</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Auth</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">User</span> <span class="k">extends</span> <span class="nx">Authenticatable</span> <span class="k">implements</span> <span class="nx">JWTSubject</span>
</span></span><span class="line"><span class="cl"><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="o">.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Rest omitted for brevity
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getJWTIdentifier</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getKey</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">getJWTCustomClaims</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="测试-1">测试</h3>
<p><code>php artisan tinker</code> 做如下测试：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$user</span> <span class="o">=</span> <span class="nx">App\Models\User</span><span class="o">::</span><span class="na">first</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">fromUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="用户登录测试">用户登录测试</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、增加路由</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 登录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$api</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;authorizations&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthorizationsController@store&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;api.authorizations.store&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、创建登录的</span> <span class="nx">request</span>
</span></span><span class="line"><span class="cl"><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">request</span> <span class="nx">Api</span><span class="o">/</span><span class="nx">AuthorizationRequest</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">rules</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string|min:6&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="nx">、app</span><span class="o">/</span><span class="nx">Http</span><span class="o">/</span><span class="nx">Controllers</span><span class="o">/</span><span class="nx">Api</span><span class="o">/</span><span class="nx">AuthorizationsController</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">store</span><span class="p">(</span><span class="nx">AuthorizationRequest</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$credentials</span><span class="p">[</span><span class="s1">&#39;username&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">username</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$credentials</span><span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">password</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$token</span> <span class="o">=</span> <span class="nx">\Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">attempt</span><span class="p">(</span><span class="nv">$credentials</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">errorUnauthorized</span><span class="p">(</span><span class="s1">&#39;用户名或密码错误&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">array</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;access_token&#39;</span> <span class="o">=&gt;</span> <span class="nv">$token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;token_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Bearer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;expires_in&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">factory</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getTTL</span><span class="p">()</span> <span class="o">*</span> <span class="mi">60</span>
</span></span><span class="line"><span class="cl">    <span class="p">])</span><span class="o">-&gt;</span><span class="na">setStatusCode</span><span class="p">(</span><span class="mi">201</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"> <span class="mi">4</span><span class="nx">、创建app\Http\Controllers\Api\Controller</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"> <span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Controllers\Api</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Dingo\Api\Routing\Helpers</span><span class="p">;</span><span class="c1">//重点
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">use</span> <span class="nx">App\Http\Controllers\Controller</span> <span class="k">as</span> <span class="nx">BaseController</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Controller</span> <span class="k">extends</span> <span class="nx">BaseController</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">use</span> <span class="nx">Helpers</span><span class="p">;</span><span class="c1">//重点目的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><h3 id="刷新删除-token">刷新/删除 token</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、首先增加路由routes</span><span class="o">/</span><span class="nx">api</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 刷新token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$api</span><span class="o">-&gt;</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;authorizations/current&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthorizationsController@update&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;api.authorizations.update&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 删除token
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$api</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">(</span><span class="s1">&#39;authorizations/current&#39;</span><span class="p">,</span> <span class="s1">&#39;AuthorizationsController@destroy&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;api.authorizations.destroy&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、app</span><span class="o">/</span><span class="nx">Http</span><span class="o">/</span><span class="nx">Controllers</span><span class="o">/</span><span class="nx">Api</span><span class="o">/</span><span class="nx">AuthorizationsController</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">update</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$token</span> <span class="o">=</span> <span class="nx">Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">refresh</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">respondWithToken</span><span class="p">(</span><span class="nv">$token</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">destroy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">logout</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">noContent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">protected</span> <span class="k">function</span> <span class="nf">respondWithToken</span><span class="p">(</span><span class="nv">$token</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">response</span><span class="o">-&gt;</span><span class="na">array</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;access_token&#39;</span> <span class="o">=&gt;</span> <span class="nv">$token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;token_type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Bearer&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;expires_in&#39;</span> <span class="o">=&gt;</span> <span class="nx">Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">factory</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getTTL</span><span class="p">()</span> <span class="o">*</span> <span class="mi">60</span>
</span></span><span class="line"><span class="cl">        <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></div><h3 id="其他">其他</h3>
<ul>
<li>artisan 获取 token</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、增加一个Artisan</span> <span class="nx">命令</span>
</span></span><span class="line"><span class="cl"><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">command</span> <span class="nx">GenerateToken</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、修改文件app</span><span class="o">/</span><span class="nx">Console</span><span class="o">/</span><span class="nx">Commands</span><span class="o">/</span><span class="nx">GenerateToken</span><span class="o">.</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Console\Commands</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">App\Models\User</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Console\Command</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">GenerateToken</span> <span class="k">extends</span> <span class="nx">Command</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$signature</span> <span class="o">=</span> <span class="s1">&#39;laraapi:generate-token&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="nv">$description</span> <span class="o">=</span> <span class="s1">&#39;快速为用户生成 token&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userId</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">ask</span><span class="p">(</span><span class="s1">&#39;输入用户 id&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$user</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$userId</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$user</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">error</span><span class="p">(</span><span class="s1">&#39;用户不存在&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 一年以后过期
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nv">$ttl</span> <span class="o">=</span> <span class="mi">365</span><span class="o">*</span><span class="mi">24</span><span class="o">*</span><span class="mi">60</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">info</span><span class="p">(</span><span class="nx">\Auth</span><span class="o">::</span><span class="na">guard</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">setTTL</span><span class="p">(</span><span class="nv">$ttl</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">fromUser</span><span class="p">(</span><span class="nv">$user</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Vagrant安装之旅😈</title>
			<link>https://blog.gookm.cn/posts/2018/20180425-install-vagrant/</link>
			<pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180425-install-vagrant/</guid>
			<description>记vagrant安装之旅
思考 首先，vagrant是什么？
Vagrant目前是国内互联网公司应用最多的内部开发环境工具。Vagrant是我们开发者的福音，使我们完全摆脱了重复配置环境的处境。Vagrant简单的配置，丰富的自动化脚本资源以及分享的便捷性都是我们应该学习的思想，节省开发人员的大量准备工作时间,使开发人员更专注公司业务开发。
开始 1、下载VirtualBox 5.1.38 x86/AMD64 下载地址：https://www.virtualbox.org/wiki/Download_Old_Builds_5_1 2、下载Vagrant 1.8.6.msi 下载地址：https://releases.hashicorp.com/vagrant/1.8.6/ 3、下载box，我选的是以ubuntu作为系统镜像 下载地址：https://pan.baidu.com/s/1nS_12Vccdiara-iLAnht5w 密码：ktjw 4、然后傻瓜式安装这两个软件，vagrant安装完后需要重启电脑 5、新建目录 如code/boxes，将ubuntu-14.04-amd64.box放在boxes下 6、添加打造属于自己的box，vagrant box add ubuntu1404 ubuntu-14.04-amd64.box 7、初始化box，vagrant init ubuntu1404，此时会在boxes下生成Vagrantfile配置文件 8、此时执行vagrant up 启动虚拟机，然后vagrant ssh 进入虚拟机 9、这个时候你就可以在该虚拟机上配置你自己想要的系统环境，比如安装nginx PHP MySQL redis等等 10、导出自己的box，vagrant package --output ubuntu1404_testbox --base ubuntu1404 11、Vagrantfile相关配置 config.vm.box=&amp;#34;ubuntu1404&amp;#34; //box 名称 config.vm.hostname=&amp;#34;lnmp&amp;#34; //配置hostname config.vm.network &amp;#34;private_network&amp;#34;,ip:&amp;#34;192.168.22.20&amp;#34; //配置私有网络ip vb.customize [&amp;#34;modifyvm&amp;#34;,:id,&amp;#34;--memory&amp;#34;,&amp;#34;1024&amp;#34;] //修改内存 vb.name=&amp;#34;testname&amp;#34; //修改virtualbox的名称 12、vagrant up 可能会遇到的问题： Vagrant was unable to mount VirtualBox shared folders. This is usually because the filesystem &amp;#34;vboxsf&amp;#34; is not available.</description>
			<content type="html"><![CDATA[<p><strong>记vagrant安装之旅</strong></p>
<h3 id="思考">思考</h3>
<p>首先，vagrant是什么？</p>
<blockquote>
<p>Vagrant目前是国内互联网公司应用最多的内部开发环境工具。Vagrant是我们开发者的福音，使我们完全摆脱了重复配置环境的处境。Vagrant简单的配置，丰富的自动化脚本资源以及分享的便捷性都是我们应该学习的思想，节省开发人员的大量准备工作时间,使开发人员更专注公司业务开发。</p>
</blockquote>
<h3 id="开始">开始</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、下载VirtualBox</span> <span class="mf">5.1</span><span class="o">.</span><span class="mi">38</span>  <span class="nx">x86</span><span class="o">/</span><span class="nx">AMD64</span>
</span></span><span class="line"><span class="cl"><span class="nx">下载地址：https</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">virtualbox</span><span class="o">.</span><span class="nx">org</span><span class="o">/</span><span class="nx">wiki</span><span class="o">/</span><span class="nx">Download_Old_Builds_5_1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、下载Vagrant</span> <span class="mf">1.8</span><span class="o">.</span><span class="mf">6.</span><span class="nx">msi</span>
</span></span><span class="line"><span class="cl"><span class="nx">下载地址：https</span><span class="o">://</span><span class="nx">releases</span><span class="o">.</span><span class="nx">hashicorp</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">vagrant</span><span class="o">/</span><span class="mf">1.8</span><span class="o">.</span><span class="mi">6</span><span class="o">/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="nx">、下载box，我选的是以ubuntu作为系统镜像</span>
</span></span><span class="line"><span class="cl"><span class="nx">下载地址：https</span><span class="o">://</span><span class="nx">pan</span><span class="o">.</span><span class="nx">baidu</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">s</span><span class="o">/</span><span class="mi">1</span><span class="nx">nS_12Vccdiara</span><span class="o">-</span><span class="nx">iLAnht5w</span>  <span class="nx">密码：ktjw</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">4</span><span class="nx">、然后傻瓜式安装这两个软件，vagrant安装完后需要重启电脑</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">5</span><span class="nx">、新建目录</span> <span class="nx">如code</span><span class="o">/</span><span class="nx">boxes，将ubuntu</span><span class="o">-</span><span class="mf">14.04</span><span class="o">-</span><span class="nx">amd64</span><span class="o">.</span><span class="nx">box放在boxes下</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">6</span><span class="nx">、添加打造属于自己的box，vagrant</span> <span class="nx">box</span> <span class="nx">add</span> <span class="nx">ubuntu1404</span> <span class="nx">ubuntu</span><span class="o">-</span><span class="mf">14.04</span><span class="o">-</span><span class="nx">amd64</span><span class="o">.</span><span class="nx">box</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="nx">、初始化box，vagrant</span> <span class="nx">init</span> <span class="nx">ubuntu1404，此时会在boxes下生成Vagrantfile配置文件</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">8</span><span class="nx">、此时执行vagrant</span> <span class="nx">up</span> <span class="nx">启动虚拟机，然后vagrant</span> <span class="nx">ssh</span> <span class="nx">进入虚拟机</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">9</span><span class="nx">、这个时候你就可以在该虚拟机上配置你自己想要的系统环境，比如安装nginx</span> <span class="nx">PHP</span> <span class="nx">MySQL</span> <span class="nx">redis等等</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">10</span><span class="nx">、导出自己的box，vagrant</span> <span class="nx">package</span> <span class="o">--</span><span class="nx">output</span> <span class="nx">ubuntu1404_testbox</span>  <span class="o">--</span><span class="nx">base</span> <span class="nx">ubuntu1404</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="mi">11</span><span class="nx">、Vagrantfile相关配置</span>
</span></span><span class="line"><span class="cl">  <span class="nx">config</span><span class="o">.</span><span class="nx">vm</span><span class="o">.</span><span class="nx">box</span><span class="o">=</span><span class="s2">&#34;ubuntu1404&#34;</span> <span class="c1">//box 名称
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">config</span><span class="o">.</span><span class="nx">vm</span><span class="o">.</span><span class="nx">hostname</span><span class="o">=</span><span class="s2">&#34;lnmp&#34;</span>   <span class="c1">//配置hostname
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">config</span><span class="o">.</span><span class="nx">vm</span><span class="o">.</span><span class="nx">network</span> <span class="s2">&#34;private_network&#34;</span><span class="p">,</span><span class="nx">ip</span><span class="o">:</span><span class="s2">&#34;192.168.22.20&#34;</span>  <span class="c1">//配置私有网络ip
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">vb</span><span class="o">.</span><span class="nx">customize</span> <span class="p">[</span><span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span><span class="o">:</span><span class="nx">id</span><span class="p">,</span><span class="s2">&#34;--memory&#34;</span><span class="p">,</span><span class="s2">&#34;1024&#34;</span><span class="p">]</span>  <span class="c1">//修改内存
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nx">vb</span><span class="o">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&#34;testname&#34;</span>  <span class="c1">//修改virtualbox的名称
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl"><span class="mi">12</span><span class="nx">、vagrant</span> <span class="nx">up</span> <span class="nx">可能会遇到的问题：</span>
</span></span><span class="line"><span class="cl"><span class="nx">Vagrant</span> <span class="nx">was</span> <span class="nx">unable</span> <span class="nx">to</span> <span class="nx">mount</span> <span class="nx">VirtualBox</span> <span class="nx">shared</span> <span class="nx">folders</span><span class="o">.</span> <span class="k">This</span> <span class="nx">is</span> <span class="nx">usually</span>
</span></span><span class="line"><span class="cl"><span class="nx">because</span> <span class="nx">the</span> <span class="nx">filesystem</span> <span class="s2">&#34;vboxsf&#34;</span> <span class="nx">is</span> <span class="k">not</span> <span class="nx">available</span><span class="o">.</span> <span class="k">This</span> <span class="nx">filesystem</span> <span class="nx">is</span>
</span></span><span class="line"><span class="cl"><span class="nx">made</span> <span class="nx">available</span> <span class="nx">via</span> <span class="nx">the</span> <span class="nx">VirtualBox</span> <span class="nx">Guest</span> <span class="nx">Additions</span> <span class="k">and</span> <span class="nx">kernel</span> <span class="nx">module</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="nx">Please</span> <span class="nx">verify</span> <span class="nx">that</span> <span class="nx">these</span> <span class="nx">guest</span> <span class="nx">additions</span> <span class="nx">are</span> <span class="nx">properly</span> <span class="nx">installed</span> <span class="nx">in</span> <span class="nx">the</span>
</span></span><span class="line"><span class="cl"><span class="nx">guest</span><span class="o">.</span> <span class="k">This</span> <span class="nx">is</span> <span class="k">not</span> <span class="nx">a</span> <span class="nx">bug</span> <span class="nx">in</span> <span class="nx">Vagrant</span> <span class="k">and</span> <span class="nx">is</span> <span class="nx">usually</span> <span class="nx">caused</span> <span class="nx">by</span> <span class="nx">a</span> <span class="nx">faulty</span>
</span></span><span class="line"><span class="cl"><span class="nx">Vagrant</span> <span class="nx">box</span><span class="o">.</span> <span class="k">For</span> <span class="nx">context</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">command</span> <span class="nx">attempted</span> <span class="nx">was</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">mount</span> <span class="o">-</span><span class="nx">t</span> <span class="nx">vboxsf</span> <span class="o">-</span><span class="nx">o</span> <span class="nx">uid</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span><span class="nx">gid</span><span class="o">=</span><span class="mi">1000</span> <span class="nx">vagrant</span> <span class="o">/</span><span class="nx">vagrant</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">The</span> <span class="nx">error</span> <span class="nx">output</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">command</span> <span class="nx">was</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">mount</span><span class="o">:</span> <span class="nx">unknown</span> <span class="nx">filesystem</span> <span class="nx">type</span> <span class="s1">&#39;vboxsf&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nx">以上为执行vagrant</span> <span class="nx">up</span> <span class="nx">时的报错，说是Vagrant无法挂载VirtualBox共享文件夹，</span>
</span></span><span class="line"><span class="cl"><span class="nx">解决方法是执行vagrant</span> <span class="nx">plugin</span> <span class="nx">install</span> <span class="nx">vagrant</span><span class="o">-</span><span class="nx">vbguest，然后再尝试vagrant</span> <span class="nx">up</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="mi">13</span><span class="nx">、资源推荐：</span>
</span></span><span class="line"><span class="cl">  <span class="nx">慕课在线视频：https</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">imooc</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">learn</span><span class="o">/</span><span class="mi">805</span>
</span></span><span class="line"><span class="cl">  <span class="nx">视频对应资料：https</span><span class="o">://</span><span class="nx">github</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">apanly</span><span class="o">/</span><span class="nx">mooc</span><span class="o">/</span><span class="nx">tree</span><span class="o">/</span><span class="nx">master</span><span class="o">/</span><span class="nx">vagrant</span>
</span></span><span class="line"><span class="cl">  <span class="nx">vagrant</span> <span class="nx">up解决：https</span><span class="o">://</span><span class="nx">blog</span><span class="o">.</span><span class="nx">csdn</span><span class="o">.</span><span class="nx">net</span><span class="o">/</span><span class="nx">changjiangwang</span><span class="o">/</span><span class="nx">article</span><span class="o">/</span><span class="nx">details</span><span class="o">/</span><span class="mi">79129510</span>
</span></span><span class="line"><span class="cl">                <span class="nx">https</span><span class="o">://</span><span class="nx">github</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">scotch</span><span class="o">-</span><span class="nx">io</span><span class="o">/</span><span class="nx">scotch</span><span class="o">-</span><span class="nx">box</span><span class="o">/</span><span class="nx">issues</span><span class="o">/</span><span class="mi">296</span>
</span></span><span class="line"><span class="cl">  <span class="nx">vagrant学习手册：https</span><span class="o">://</span><span class="nx">www</span><span class="o">.</span><span class="nx">vagrantup</span><span class="o">.</span><span class="nx">com</span><span class="o">/</span><span class="nx">intro</span><span class="o">/</span><span class="nx">getting</span><span class="o">-</span><span class="nx">started</span><span class="o">/</span><span class="nx">index</span><span class="o">.</span><span class="nx">html</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">14</span><span class="nx">、常用命令：</span>
</span></span><span class="line"><span class="cl"><span class="err">$</span> <span class="nx">vagrant</span> <span class="o">-</span><span class="nx">v</span>        <span class="c1"># 显示当前版本
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">init</span>      <span class="c1"># 初始化
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">up</span>        <span class="c1"># 启动虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">halt</span>      <span class="c1"># 关闭虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">reload</span>    <span class="c1"># 重启虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">ssh</span>       <span class="c1"># SSH 至虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">suspend</span>   <span class="c1"># 挂起虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">resume</span>    <span class="c1"># 唤醒虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">status</span>    <span class="c1"># 查看虚拟机运行状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">destroy</span>   <span class="c1"># 销毁当前虚拟机
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">status</span>    <span class="c1"># 查看VM当前的状态
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#box管理命令
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">box</span> <span class="k">list</span>    <span class="c1"># 查看本地box列表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">box</span> <span class="nx">add</span> <span class="nx">boxname</span> <span class="nx">系统镜像名</span>    <span class="c1"># 添加box到列表
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">$</span> <span class="nx">vagrant</span> <span class="nx">box</span> <span class="nx">remove</span> <span class="nx">boxname</span>  <span class="c1"># 从box列表移除
</span></span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Gogs</title>
			<link>https://blog.gookm.cn/posts/2018/20180410-gogs/</link>
			<pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180410-gogs/</guid>
			<description>成果体验地址
centos7安装部署gogs 前提是mysql、git都已经安装好了，可以直接往下走： 1.下载gogo压缩包 https://dl.gogs.io/ 选择对应的版本下载 我这里下载的是gogs_v0.9.141_linux_amd64.tar.gz 2.上传到服务器对应的目录 并解压 我这里上传的是在/home下 然后tar -zxvf gogs_v0.9.141_linux_amd64.tar.gz 3.开启服务./gogo web 后台运行 nohup ./gogs web &amp;amp; 4.开放放行3000端口 或关闭防火墙 然后运行http://服务器公网ip:3000/install进行安装 windows下安装部署gogs -前提是mysql、git都已经安装好了，可以直接往下走：
1.下载对应的版本，我下的是windows amd64 https://gogs.io/docs/installation/install_from_binary 2.开始安装 a.解压下载到的gogs，将gogs文件夹移动到一个磁盘，如E盘 b.在gogs文件夹内进行添加文件夹和文件 在gogs 目录下新建 custom 和 log 目录 在custom 目录下再新建conf 目录 在conf 目录下新建 app.ini 文件 在app.ini文件里加入如下内容 [repository] ROOT = D:/GitProject [database] PATH = 127.0.0.1:3306 在log 目录下新建gogs.log 文件 要注意 log 目录要给与当前系统的登录用户添加、编辑权限 c.在mysql中新建gogs数据库 3.cmd中进入到gogs文件夹 执行gogs.exe web开启服务 在浏览器中http://127.0.0.1:3000/install开始配置安装 此时关闭cmd服务就会停止，要想添加为windows服务，需要下载nssm，并添加环境变量 相关的访问url及其他的一些配置信息都在 custom/conf/app.ini 里面
成果体验地址 当然你也可以直接进这个地址，把这个当你的个人仓库使用。</description>
			<content type="html"><![CDATA[<p><a href="http://118.25.43.60:3000/">成果体验地址</a></p>
<h3 id="centos7安装部署gogs">centos7安装部署gogs</h3>
<ul>
<li>前提是mysql、git都已经安装好了，可以直接往下走：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.下载gogo压缩包  https://dl.gogs.io/
</span></span><span class="line"><span class="cl">选择对应的版本下载  我这里下载的是gogs_v0.9.141_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.上传到服务器对应的目录 并解压
</span></span><span class="line"><span class="cl">我这里上传的是在/home下  然后tar -zxvf gogs_v0.9.141_linux_amd64.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.开启服务./gogo web  后台运行   nohup ./gogs web &amp;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4.开放放行3000端口 或关闭防火墙 然后运行http://服务器公网ip:3000/install进行安装
</span></span></code></pre></div><h3 id="windows下安装部署gogs">windows下安装部署gogs</h3>
<p>-前提是mysql、git都已经安装好了，可以直接往下走：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.下载对应的版本，我下的是windows amd64
</span></span><span class="line"><span class="cl">https://gogs.io/docs/installation/install_from_binary
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.开始安装
</span></span><span class="line"><span class="cl">a.解压下载到的gogs，将gogs文件夹移动到一个磁盘，如E盘
</span></span><span class="line"><span class="cl">b.在gogs文件夹内进行添加文件夹和文件
</span></span><span class="line"><span class="cl">在gogs 目录下新建 custom 和 log 目录
</span></span><span class="line"><span class="cl">在custom 目录下再新建conf 目录
</span></span><span class="line"><span class="cl">在conf 目录下新建 app.ini 文件
</span></span><span class="line"><span class="cl">在app.ini文件里加入如下内容
</span></span><span class="line"><span class="cl">[repository]
</span></span><span class="line"><span class="cl">ROOT = D:/GitProject
</span></span><span class="line"><span class="cl">[database]
</span></span><span class="line"><span class="cl">PATH = 127.0.0.1:3306
</span></span><span class="line"><span class="cl">在log 目录下新建gogs.log 文件
</span></span><span class="line"><span class="cl">要注意 log 目录要给与当前系统的登录用户添加、编辑权限
</span></span><span class="line"><span class="cl">c.在mysql中新建gogs数据库
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.cmd中进入到gogs文件夹  执行gogs.exe web开启服务
</span></span><span class="line"><span class="cl">在浏览器中http://127.0.0.1:3000/install开始配置安装
</span></span><span class="line"><span class="cl">此时关闭cmd服务就会停止，要想添加为windows服务，需要下载nssm，并添加环境变量
</span></span></code></pre></div><p>相关的访问url及其他的一些配置信息都在 <code>custom/conf/app.ini</code> 里面</p>
<p><a href="http://118.25.43.60:3000/">成果体验地址</a>  当然你也可以直接进这个地址，把这个当你的个人仓库使用。</p>
]]></content>
		</item>
		
		<item>
			<title>模型观察者触发邮件通知</title>
			<link>https://blog.gookm.cn/posts/2018/20180402-observer-email/</link>
			<pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180402-observer-email/</guid>
			<description>模型观察者(observer)触发邮件通知
思考 需要思考的是，当我们需要发送一个邮件通知的时候，何时触发这个通知呢？
实现 这里用的是观察者模型，例如 App\Abservers\EmailObserver.php ，在该观察模型下编写created()方法，即当数据入库成功后触发这个方法，我们还需要在 AppServiceProvider 的 boot 方法中注册观察者， Email::observe(EmailObserver::class); ，接下来将邮件通知的逻辑写在对应的观察者对应的方法中，例如：
public function created(Email $email) { Mail::to($email)-&amp;gt;send(new EmailSend($email)); } to($email)中的$email为email数据集合，需要注意的是，在这个数据集合中必须要包含有email字段的数据（收件人邮箱），而send(new EmailSend($email))则为发送的邮件内容，这里是将一整条email数据集合作为数据发送了。
利用Markdown 格式的 Mailable 类，为消息体渲染出漂亮、响应式的 HTML 模板，也能自动生成一个纯文本的副本。
php artisan make:mail EmailSend --markdown=email.template 在生成的EmailSend.php中的build()方法中：
public function build() { return $this-&amp;gt;markdown(&amp;#39;email.template&amp;#39;); } 既然是发送邮件，当然需要修改.env中关于邮箱的配置信息了：
MAIL_DRIVER=smtp MAIL_HOST=smtp.qq.com MAIL_PORT=587 MAIL_USERNAME=xxxxxxx@qq.com//发件人邮箱 MAIL_FROM_ADDRESS=xxxxxxx@qq.com//这个需要自己加上，默认没有 MAIL_PASSWORD=授权码 MAIL_ENCRYPTION=tls </description>
			<content type="html"><![CDATA[<p><strong>模型观察者(observer)触发邮件通知</strong></p>
<h3 id="思考">思考</h3>
<p>需要思考的是，当我们需要发送一个邮件通知的时候，何时触发这个通知呢？</p>
<h3 id="实现">实现</h3>
<p>这里用的是观察者模型，例如 <code>App\Abservers\EmailObserver.php</code>  ，在该观察模型下编写<code>created()</code>方法，即当数据入库成功后触发这个方法，我们还需要在 <code>AppServiceProvider</code> 的 <code>boot</code> 方法中注册观察者，  <code>Email::observe(EmailObserver::class);</code> ，接下来将邮件通知的逻辑写在对应的观察者对应的方法中，例如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">created</span><span class="p">(</span><span class="nx">Email</span> <span class="nv">$email</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">Mail</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="nv">$email</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">(</span><span class="k">new</span> <span class="nx">EmailSend</span><span class="p">(</span><span class="nv">$email</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p><code>to($email)</code>中的<code>$email</code>为<code>email</code>数据集合，需要注意的是，在这个数据集合中必须要包含有<code>email</code>字段的数据（收件人邮箱），而<code>send(new EmailSend($email))</code>则为发送的邮件内容，这里是将一整条<code>email</code>数据集合作为数据发送了。</p>
<p>利用Markdown 格式的 Mailable 类，为消息体渲染出漂亮、响应式的 HTML 模板，也能自动生成一个纯文本的副本。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:mail EmailSend --markdown<span class="o">=</span>email.template
</span></span></code></pre></div><p>在生成的<code>EmailSend.php</code>中的<code>build()</code>方法中：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">build</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">markdown</span><span class="p">(</span><span class="s1">&#39;email.template&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>既然是发送邮件，当然需要修改<code>.env</code>中关于邮箱的配置信息了：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">MAIL_DRIVER</span><span class="o">=</span><span class="nx">smtp</span>
</span></span><span class="line"><span class="cl"><span class="nx">MAIL_HOST</span><span class="o">=</span><span class="nx">smtp</span><span class="o">.</span><span class="nx">qq</span><span class="o">.</span><span class="nx">com</span>
</span></span><span class="line"><span class="cl"><span class="nx">MAIL_PORT</span><span class="o">=</span><span class="mi">587</span>
</span></span><span class="line"><span class="cl"><span class="nx">MAIL_USERNAME</span><span class="o">=</span><span class="nx">xxxxxxx</span><span class="o">@</span><span class="nx">qq</span><span class="o">.</span><span class="nx">com</span><span class="c1">//发件人邮箱
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">MAIL_FROM_ADDRESS</span><span class="o">=</span><span class="nx">xxxxxxx</span><span class="o">@</span><span class="nx">qq</span><span class="o">.</span><span class="nx">com</span><span class="c1">//这个需要自己加上，默认没有
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">MAIL_PASSWORD</span><span class="o">=</span><span class="nx">授权码</span>
</span></span><span class="line"><span class="cl"><span class="nx">MAIL_ENCRYPTION</span><span class="o">=</span><span class="nx">tls</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Supervisor配置,每次都会踩好多坑</title>
			<link>https://blog.gookm.cn/posts/2018/20180326-install-supervisor/</link>
			<pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180326-install-supervisor/</guid>
			<description>基本每次都会花好多的时间去踩不同的坑，索性今天就花点时间记录下踩的坑吧！
Supervisor（http://supervisord.org/）是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制。
既然是用Python开发的一个client/server服务，所以我选择间接的通过python来安装supervisor
安装 先安装 Python 的 easy_install，再通过 easy_install 安装 supervisor # yum install python-setuptools # easy_install supervisor 配置文件 生成配置文件，并建立相应目录，管理 supervisor 启动进程 # echo_supervisord_conf &amp;gt; /etc/supervisord.conf # mkdir -p /etc/supervisor/conf.d/ 1 2 编辑 /etc/supervisord.conf，修改 [include] 区块内容： [include] files = /etc/supervisor/conf.d/*.conf 1 2 这样， supervisor 会加载 /etc/supervisor/conf.d/ 下的所有 .conf 文件 自动启动 在 https://github.com/Supervisor/initscripts 下载 CentOS 使用的自动启动服务脚本 centos-systemd-etcs # wget -O /usr/lib/systemd/system/supervisord.service https://github.com/Supervisor/initscripts/raw/master/centos-systemd-etcs 将 supervisord 服务设为自启动 # systemctl enable supervisord.service 输入 supervisorctl 命令可以进入 supervisor 控制台 设置 Laravel 队列 [program:laravel-worker] process_name=%(program_name)s_%(process_num)02d command=/usr/local/php/bin/php /data/wwwroot/app.</description>
			<content type="html"><![CDATA[<p>基本每次都会花好多的时间去踩不同的坑，索性今天就花点时间记录下踩的坑吧！</p>
<blockquote>
<p>Supervisor（http://supervisord.org/）是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制。</p>
</blockquote>
<p>既然是用Python开发的一个client/server服务，所以我选择间接的通过python来安装supervisor</p>
<h3 id="安装">安装</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">先安装 Python 的 easy_install，再通过 easy_install 安装 supervisor
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"># yum install python-setuptools
</span></span><span class="line"><span class="cl"># easy_install supervisor
</span></span></code></pre></div><h3 id="配置文件">配置文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">生成配置文件，并建立相应目录，管理 supervisor 启动进程
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"># echo_supervisord_conf &gt; /etc/supervisord.conf
</span></span><span class="line"><span class="cl"># mkdir -p /etc/supervisor/conf.d/
</span></span><span class="line"><span class="cl">1
</span></span><span class="line"><span class="cl">2
</span></span><span class="line"><span class="cl">编辑 /etc/supervisord.conf，修改 [include] 区块内容：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[include]
</span></span><span class="line"><span class="cl">files = /etc/supervisor/conf.d/*.conf
</span></span><span class="line"><span class="cl">1
</span></span><span class="line"><span class="cl">2
</span></span><span class="line"><span class="cl">这样， supervisor 会加载 /etc/supervisor/conf.d/ 下的所有 .conf 文件
</span></span></code></pre></div><h3 id="自动启动">自动启动</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">在 https://github.com/Supervisor/initscripts 下载 CentOS 使用的自动启动服务脚本 centos-systemd-etcs
</span></span><span class="line"><span class="cl"># wget -O /usr/lib/systemd/system/supervisord.service  https://github.com/Supervisor/initscripts/raw/master/centos-systemd-etcs
</span></span><span class="line"><span class="cl">将 supervisord 服务设为自启动
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># systemctl enable supervisord.service
</span></span><span class="line"><span class="cl">输入 supervisorctl 命令可以进入 supervisor 控制台
</span></span></code></pre></div><h3 id="设置-laravel-队列">设置 Laravel 队列</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="line"><span class="cl"><span class="k">[program:laravel-worker]</span>
</span></span><span class="line"><span class="cl"><span class="na">process_name</span><span class="o">=</span><span class="s">%(program_name)s_%(process_num)02d</span>
</span></span><span class="line"><span class="cl"><span class="na">command</span><span class="o">=</span><span class="s">/usr/local/php/bin/php /data/wwwroot/app.com/artisan queue:work database --sleep=3 --tries=3 --daemon</span>
</span></span><span class="line"><span class="cl"><span class="na">autostart</span><span class="o">=</span><span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">autorestart</span><span class="o">=</span><span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">user</span><span class="o">=</span><span class="s">www</span>
</span></span><span class="line"><span class="cl"><span class="na">numprocs</span><span class="o">=</span><span class="s">8</span>
</span></span><span class="line"><span class="cl"><span class="na">redirect_stderr</span><span class="o">=</span><span class="s">true</span>
</span></span><span class="line"><span class="cl"><span class="na">stdout_logfile</span><span class="o">=</span><span class="s">/data/wwwroot/app.com/storage/logs/queue.log</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="na">//注意：检查你的php所在目录和项目所在目录  是否对应</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="na">这里开启了 8 个 queue:work 进程，并监视他们，如果失败的话，自动重启；在项目的 storage/logs/queue.log 记录日志。</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="na">启动 supervisor 服务：</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># supervisord</span>
</span></span><span class="line"><span class="cl"><span class="na">1</span>
</span></span><span class="line"><span class="cl"><span class="na">至此， supervisor 安装及 Laravel 队列设置完毕</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="na">如果以后配置文件有修改，或者新增，进入 supervisor 控制台，执行下面的命令</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># supervisorctl</span>
</span></span><span class="line"><span class="cl"><span class="na">supervisorctl&gt; reread</span>
</span></span><span class="line"><span class="cl"><span class="na">supervisorctl&gt; update</span>
</span></span><span class="line"><span class="cl"><span class="na">supervisorctl&gt; start laravel-worker:*</span>
</span></span></code></pre></div><h3 id="遇到的一些坑">遇到的一些坑</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.unix:///tmp/supervisor.sock no such file问题
</span></span><span class="line"><span class="cl">重新生成配置文件 echo_supervisord_conf&gt; /etc/supervisord.conf
</span></span><span class="line"><span class="cl">按上面步骤修改配置
</span></span><span class="line"><span class="cl">supervisord -c/etc/supervisord.conf
</span></span><span class="line"><span class="cl">还有一种说法是将supervisord.conf中的/tmp  该为/var下，具体请看https://blog.csdn.net/qq_28885149/article/details/79364685
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.laravel-worker-ui:laravel-worker-ui_00   FATAL     can&#39;t find command &#39;/usr/local/php/bin/php&#39;
</span></span><span class="line"><span class="cl">检查supervisord.conf中的php目录是否正确
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.在使用命令supervisorctl start all启动控制进程时，遇到如下错误
</span></span><span class="line"><span class="cl">unix:///tmp/supervisor.sock no such file
</span></span><span class="line"><span class="cl">出现上述错误的原因是supervisord并未启动，只要在命令行中使用命令supervisord启动supervisord即可。
</span></span></code></pre></div><h3 id="一些相关命令">一些相关命令</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">【启动supervisord】  supervisord  建议supervisord -c/etc/supervisord.conf
</span></span><span class="line"><span class="cl">【停止supervisord】  supervisorctl shutdown
</span></span><span class="line"><span class="cl">【重新加载配置文件】  supervisorctl reload
</span></span><span class="line"><span class="cl">【进程管理】
</span></span><span class="line"><span class="cl">1.启动supervisord管理的所有进程
</span></span><span class="line"><span class="cl">  supervisorctl start all
</span></span><span class="line"><span class="cl">2.停止supervisord管理的所有进程
</span></span><span class="line"><span class="cl">  supervisorctl stop all
</span></span><span class="line"><span class="cl">3.启动supervisord管理的某一个特定进程
</span></span><span class="line"><span class="cl">  supervisorctl start program-name // program-name为[program:xx]中的xx
</span></span><span class="line"><span class="cl">4.停止supervisord管理的某一个特定进程 
</span></span><span class="line"><span class="cl">  supervisorctl stop program-name  // program-name为[program:xx]中的xx
</span></span><span class="line"><span class="cl">5.重启所有进程或所有进程
</span></span><span class="line"><span class="cl">  supervisorctl restart all  // 重启所有
</span></span><span class="line"><span class="cl">  supervisorctl reatart program-name // 重启某一进程，program-name为[program:xx]中的xx
</span></span><span class="line"><span class="cl">6.查看supervisord当前管理的所有进程的状态
</span></span><span class="line"><span class="cl">  supervisorctl status
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>本地Homestead安装😴</title>
			<link>https://blog.gookm.cn/posts/2018/20180320-install-homestead/</link>
			<pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180320-install-homestead/</guid>
			<description>Homestead安装 安装 VirtualBox 安装 Vagrant 导入 Homestead Box 虚拟机盒子 安装 Git 安装 Homestead 管理脚本 配置 Homestead.yaml 文件 启动 Homestead 虚拟机 安装 VirtualBox 下载链接 https://pan.baidu.com/s/15ebprpm0HW3lQYxW4T8xPA 一步一步安装即可 可能发生的错误：缺少iso文件 安装 Vagrant 下载链接 https://pan.baidu.com/s/1yuPDJ_sr7q3MVI0L__-eGA 然后一步一步按照默认安装即可。 Homestead 介绍 Homestead 包含了两个东西：
Homestead 管理脚本； Homestead Box 虚拟机盒子。 下载链接 https://pan.baidu.com/s/1d5PH0XW_Xw1BwujK58GiCQ
1.安装和使用 Homestead
在解压目录中 lt-homestead-3-0-0-2017082400 运行以下命令导入 Box： vagrant box add metadata.json 2. 安装 Git
使用以下命令来检测是否成功安装： git --version git version 2.12.2.windows.2 3. 下载 Homestead 管理脚本
git clone https://git.coding.net/summerblue/homestead.git Homestead 接下来我们需要初始化 Homestead：bash init.</description>
			<content type="html"><![CDATA[<h2 id="homestead安装">Homestead安装</h2>
<ol>
<li>安装 VirtualBox</li>
<li>安装 Vagrant</li>
<li>导入 Homestead Box 虚拟机盒子</li>
<li>安装 Git</li>
<li>安装 Homestead 管理脚本</li>
<li>配置 Homestead.yaml 文件</li>
<li>启动 Homestead 虚拟机</li>
</ol>
<h3 id="安装-virtualbox">安装 VirtualBox</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">下载链接 https://pan.baidu.com/s/15ebprpm0HW3lQYxW4T8xPA
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">一步一步安装即可
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">可能发生的错误：缺少iso文件
</span></span></code></pre></div><h3 id="安装-vagrant">安装 Vagrant</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">下载链接 https://pan.baidu.com/s/1yuPDJ_sr7q3MVI0L__-eGA
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">然后一步一步按照默认安装即可。
</span></span></code></pre></div><h3 id="homestead-介绍">Homestead 介绍</h3>
<p>Homestead 包含了两个东西：</p>
<ul>
<li>Homestead 管理脚本；</li>
<li>Homestead Box 虚拟机盒子。</li>
</ul>
<p>下载链接 <a href="https://pan.baidu.com/s/1d5PH0XW_Xw1BwujK58GiCQ">https://pan.baidu.com/s/1d5PH0XW_Xw1BwujK58GiCQ</a></p>
<p><strong>1.安装和使用 Homestead</strong></p>
<ul>
<li>在解压目录中 lt-homestead-3-0-0-2017082400 运行以下命令导入 Box：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vagrant box add metadata.json
</span></span></code></pre></div><p><strong>2. 安装 Git</strong></p>
<ul>
<li>使用以下命令来检测是否成功安装：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">git --version
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git version 2.12.2.windows.2
</span></span></code></pre></div><p><strong>3. 下载 Homestead 管理脚本</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">git clone https://git.coding.net/summerblue/homestead.git Homestead
</span></span></code></pre></div><ul>
<li>接下来我们需要初始化 Homestead：bash init.sh</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">①虚拟机设置
</span></span><span class="line"><span class="cl">ip: &#34;192.168.10.10&#34;   或 10.1.1.33
</span></span><span class="line"><span class="cl">生成 SSH Key：ssh-keygen -t rsa -C &#34;email@163.com&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">②共享文件夹配置
</span></span><span class="line"><span class="cl">我们可以通过 folders 来指明本机要映射到 Homestead 虚拟机上的文件夹。
</span></span></code></pre></div><ul>
<li>map 对应的是我们本机的文件夹，格式例如：E：/Homestead/Code，以开发者实际项目目录为准。</li>
<li>to 对应的是 Homestead 上的文件夹。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">folders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">D:/Homestead/code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/Code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sites</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">homestead.app</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/Code/Laravel/public</span><span class="w">
</span></span></span></code></pre></div><h3 id="登录vagrant并安装laravel">登录vagrant并安装laravel</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> ~/Homestead <span class="o">&amp;&amp;</span> vagrant up
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vagrant ssh 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> Code 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel laravel <span class="s2">&#34;5.5.*&#34;</span>
</span></span></code></pre></div><p>浏览器访问：local.laravel.com</p>
]]></content>
		</item>
		
		<item>
			<title>PHP设计模式</title>
			<link>https://blog.gookm.cn/posts/2018/20180316-php-mode/</link>
			<pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180316-php-mode/</guid>
			<description>PHP 设计模式
本实验内容仅做设计模式的简单介绍，并不是非常完整的总结性技术文档 这些模式可以分为三个大类。
创建型 在软件工程中，创建型设计模式是处理对象创建机制的设计模式，试图以适当的方式来创建对象。对象创建的基本形式可能会带来设计问题，亦或增加了设计的复杂度。创建型设计模式通过控制这个对象的创建方式来解决此问题。
结构型 在软件工程中，结构型设计模式是通过识别实体之间关系来简化设计的设计模式。
行为型 在软件工程中，行为设计模式是识别对象之间的通用通信模式并实现这些模式的设计模式。 通过这样做，这些模式增加了执行此通信的灵活性。
创建型 抽象工厂模式（Abstract Factory） 目的：在不指定具体类的情况下创建一系列相关或依赖对象。 通常创建的类都实现相同的接口。 抽象工厂的客户并不关心这些对象是如何创建的，它只是知道它们是如何一起运行的。 建造者模式（Builder） 目的：建造者是创建一个复杂对象的一部分接口。 有时候，如果建造者对他所创建的东西拥有较好的知识储备，这个接口就可能成为一个有默认方法的抽象类（又称为适配器）。 如果对象有复杂的继承树，那么对于建造者来说，有一个复杂继承树也是符合逻辑的。 注意：建造者通常有一个「流式接口」，例如 PHPUnit 模拟生成器。 工厂方法模式（Factory Method） 目的：对比简单工厂模式的优点是，您可以将其子类用不同的方法来创建一个对象。 举一个简单的例子，这个抽象类可能只是一个接口。 这种模式是「真正」的设计模式， 因为他实现了S.O.L.I.D原则中「D」的 「依赖倒置」。 这意味着工厂方法模式取决于抽象类，而不是具体的类。 这是与简单工厂模式和静态工厂模式相比的优势。 SOLID原则 单一职责原则SRP:一个类应该有且只有一个去改变它的理由，这意味着一个类应该只有一项工作; 开放封闭原则OCP:对象或实体应该对扩展开放，对修改封闭; 替换原则LSP:在对象x为类型T时q(x)成立,那么当S是T的子类时,对象y为类型S时q(y)也应成立(即对父类的调用同样适用于子类); 接口分离原则ISP:不应强迫客户端实现一个它用不上的接口，或是说客户端不应该被迫依赖它们不使用的方法; 依赖倒置原则DIP:实体必须依靠抽象而不是具体实现。它表示高层次的模块不应该依赖于低层次的模块，它们都应该依赖于抽象; 除SOLID原则外还有很多其它的面向对象原则。如： &amp;#34;组合替代继承&amp;#34;:这是说相对于继承，要更倾向于使用组合； &amp;#34;笛米特法则&amp;#34;：这是说&amp;#34;你的类对其它类知道的越少越好&amp;#34;； &amp;#34;共同封闭原则&amp;#34;：这是说&amp;#34;相关类应该打包在一起&amp;#34;； &amp;#34;稳定抽象原则&amp;#34;：这是说&amp;#34;类越稳定，越应该由抽象类组成&amp;#34;; 多例模式（Multiton） 多例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用『依赖注入模式』。
目的：多例模式是指存在一个类有多个相同实例，而且该实例都是该类本身。这个类叫做多例类。 多例模式的特点是： 多例类可以有多个实例。 多例类必须自己创建、管理自己的实例，并向外界提供自己的实例。 多例模式实际上就是单例模式的推广 举例： 1.2个数据库连接器，比如一个是 MySQL ，另一个是 SQLite 2.多个记录器（一个用于记录调试消息，一个用于记录错误） 对象池模式（Pool） 目的：对象池模式是一种提前准备了一组已经初始化了的对象『池』而不是按需创建或者销毁的创建型设计模式。 对象池的客户端会向对象池中请求一个对象，然后使用这个返回的对象执行相关操作。当客户端使用完毕， 它将把这个特定类型的工厂对象返回给对象池，而不是销毁掉这个对象。 在初始化实例成本高，实例化率高，可用实例不足的情况下，对象池可以极大地提升性能。 在创建对象（尤其是通过网络）时间花销不确定的情况下，通过对象池在可期时间内就可以获得所需的对象。 无论如何，对象池模式在需要耗时创建对象方面，例如创建数据库连接，套接字连接，线程和大型图形对象（比方字体或位图等）， 使用起来都是大有裨益的。在某些情况下，简单的对象池（无外部资源，只占内存）可能效率不高，甚至会有损性能。 原型模式（Prototype） 目的：相比正常创建一个对象 ( new Foo() )，首先创建一个原型，然后克隆它会更节省开销。 示例：大数据量 ( 例如：通过 ORM 模型一次性往数据库插入 1,000,000 条数据 ) 。 简单工厂模式（Simple Factory） 目的：简单工厂模式是一个精简版的工厂模式。 它与静态工厂模式最大的区别是它不是『静态』的。因为非静态，所以你可以拥有多个不同参数的工厂，你可以为其创建子类。 甚至可以模拟（Mock）他，这对编写可测试的代码来讲至关重要。 这也是它比静态工厂模式受欢迎的原因 单例模式（Singleton） 单例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用『依赖注入模式』。</description>
			<content type="html"><![CDATA[<p><strong>PHP 设计模式</strong></p>
<p><strong>本实验内容仅做设计模式的简单介绍，并不是非常完整的总结性技术文档</strong>
这些模式可以分为三个大类。</p>
<ol>
<li>创建型</li>
</ol>
<p>在软件工程中，创建型设计模式是处理对象创建机制的设计模式，试图以适当的方式来创建对象。对象创建的基本形式可能会带来设计问题，亦或增加了设计的复杂度。创建型设计模式通过控制这个对象的创建方式来解决此问题。</p>
<ol start="2">
<li>结构型</li>
</ol>
<p>在软件工程中，结构型设计模式是通过识别实体之间关系来简化设计的设计模式。</p>
<ol start="3">
<li>行为型</li>
</ol>
<p>在软件工程中，行为设计模式是识别对象之间的通用通信模式并实现这些模式的设计模式。 通过这样做，这些模式增加了执行此通信的灵活性。</p>
<h3 id="创建型">创建型</h3>
<ul>
<li>抽象工厂模式（Abstract Factory）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：在不指定具体类的情况下创建一系列相关或依赖对象。 通常创建的类都实现相同的接口。
</span></span><span class="line"><span class="cl">抽象工厂的客户并不关心这些对象是如何创建的，它只是知道它们是如何一起运行的。
</span></span></code></pre></div><ul>
<li>建造者模式（Builder）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：建造者是创建一个复杂对象的一部分接口。
</span></span><span class="line"><span class="cl">有时候，如果建造者对他所创建的东西拥有较好的知识储备，这个接口就可能成为一个有默认方法的抽象类（又称为适配器）。
</span></span><span class="line"><span class="cl">如果对象有复杂的继承树，那么对于建造者来说，有一个复杂继承树也是符合逻辑的。
</span></span><span class="line"><span class="cl">注意：建造者通常有一个「流式接口」，例如 PHPUnit 模拟生成器。
</span></span></code></pre></div><ul>
<li>工厂方法模式（Factory Method）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：对比简单工厂模式的优点是，您可以将其子类用不同的方法来创建一个对象。
</span></span><span class="line"><span class="cl">举一个简单的例子，这个抽象类可能只是一个接口。
</span></span><span class="line"><span class="cl">这种模式是「真正」的设计模式， 因为他实现了S.O.L.I.D原则中「D」的 「依赖倒置」。
</span></span><span class="line"><span class="cl">这意味着工厂方法模式取决于抽象类，而不是具体的类。 这是与简单工厂模式和静态工厂模式相比的优势。
</span></span></code></pre></div><ul>
<li>SOLID原则</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">单一职责原则SRP:一个类应该有且只有一个去改变它的理由，这意味着一个类应该只有一项工作;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">开放封闭原则OCP:对象或实体应该对扩展开放，对修改封闭;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">替换原则LSP:在对象x为类型T时q(x)成立,那么当S是T的子类时,对象y为类型S时q(y)也应成立(即对父类的调用同样适用于子类);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">接口分离原则ISP:不应强迫客户端实现一个它用不上的接口，或是说客户端不应该被迫依赖它们不使用的方法;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">依赖倒置原则DIP:实体必须依靠抽象而不是具体实现。它表示高层次的模块不应该依赖于低层次的模块，它们都应该依赖于抽象;
</span></span></code></pre></div><ul>
<li>除SOLID原则外还有很多其它的面向对象原则。如：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">&#34;组合替代继承&#34;:这是说相对于继承，要更倾向于使用组合；
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34;笛米特法则&#34;：这是说&#34;你的类对其它类知道的越少越好&#34;；
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34;共同封闭原则&#34;：这是说&#34;相关类应该打包在一起&#34;；
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&#34;稳定抽象原则&#34;：这是说&#34;类越稳定，越应该由抽象类组成&#34;;
</span></span></code></pre></div><ul>
<li>多例模式（Multiton）</li>
</ul>
<blockquote>
<p>多例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用『依赖注入模式』。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：多例模式是指存在一个类有多个相同实例，而且该实例都是该类本身。这个类叫做多例类。 多例模式的特点是：
</span></span><span class="line"><span class="cl">多例类可以有多个实例。
</span></span><span class="line"><span class="cl">多例类必须自己创建、管理自己的实例，并向外界提供自己的实例。
</span></span><span class="line"><span class="cl">多例模式实际上就是单例模式的推广
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">举例：
</span></span><span class="line"><span class="cl">1.2个数据库连接器，比如一个是 MySQL ，另一个是 SQLite
</span></span><span class="line"><span class="cl">2.多个记录器（一个用于记录调试消息，一个用于记录错误）
</span></span></code></pre></div><ul>
<li>对象池模式（Pool）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：对象池模式是一种提前准备了一组已经初始化了的对象『池』而不是按需创建或者销毁的创建型设计模式。
</span></span><span class="line"><span class="cl">对象池的客户端会向对象池中请求一个对象，然后使用这个返回的对象执行相关操作。当客户端使用完毕，
</span></span><span class="line"><span class="cl">它将把这个特定类型的工厂对象返回给对象池，而不是销毁掉这个对象。
</span></span><span class="line"><span class="cl">在初始化实例成本高，实例化率高，可用实例不足的情况下，对象池可以极大地提升性能。
</span></span><span class="line"><span class="cl">在创建对象（尤其是通过网络）时间花销不确定的情况下，通过对象池在可期时间内就可以获得所需的对象。
</span></span><span class="line"><span class="cl">无论如何，对象池模式在需要耗时创建对象方面，例如创建数据库连接，套接字连接，线程和大型图形对象（比方字体或位图等），
</span></span><span class="line"><span class="cl">使用起来都是大有裨益的。在某些情况下，简单的对象池（无外部资源，只占内存）可能效率不高，甚至会有损性能。
</span></span></code></pre></div><ul>
<li>原型模式（Prototype）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：相比正常创建一个对象 ( new Foo() )，首先创建一个原型，然后克隆它会更节省开销。
</span></span><span class="line"><span class="cl">示例：大数据量 ( 例如：通过 ORM 模型一次性往数据库插入 1,000,000 条数据 ) 。
</span></span></code></pre></div><ul>
<li>简单工厂模式（Simple Factory）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：简单工厂模式是一个精简版的工厂模式。
</span></span><span class="line"><span class="cl">它与静态工厂模式最大的区别是它不是『静态』的。因为非静态，所以你可以拥有多个不同参数的工厂，你可以为其创建子类。
</span></span><span class="line"><span class="cl">甚至可以模拟（Mock）他，这对编写可测试的代码来讲至关重要。 这也是它比静态工厂模式受欢迎的原因
</span></span></code></pre></div><ul>
<li>单例模式（Singleton）</li>
</ul>
<blockquote>
<p>单例模式被公认为是 反面模式，为了获得更好的可测试性和可维护性，请使用『依赖注入模式』。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：在应用程序调用的时候，只能获得一个对象实例。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">数据库连接
</span></span><span class="line"><span class="cl">日志 (多种不同用途的日志也可能会成为多例模式)
</span></span><span class="line"><span class="cl">在应用中锁定文件 (系统中只存在一个 ...)
</span></span></code></pre></div><ul>
<li>静态工厂模式（Static Factory）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：与抽象工厂模式类似，此模式用于创建一系列相关或相互依赖的对象。 『静态工厂模式』与『抽象工厂模式』的区别在于，
</span></span><span class="line"><span class="cl">    只使用一个静态方法来创建所有类型对象， 此方法通常被命名为 factory 或 build。
</span></span><span class="line"><span class="cl">例子:Zend Framework: Zend_Cache_Backend 或 _Frontend 使用工厂方法创建缓存后端或前端；
</span></span></code></pre></div><h3 id="结构型">结构型</h3>
<ul>
<li>适配器模式（Adapter）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：将一个类的接口转换成可应用的兼容接口。适配器使原本由于接口不兼容而不能一起工作的那些类可以一起工作。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">客户端数据库适配器；
</span></span><span class="line"><span class="cl">使用多个不同的网络服务和适配器来规范数据使得出结果是相同的；
</span></span></code></pre></div><ul>
<li>桥梁模式（Bridge）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：将抽象与实现分离，这样两者可以独立地改变。
</span></span><span class="line"><span class="cl">例子：Symfony 学术桥梁
</span></span></code></pre></div><ul>
<li>组合模式（Composite）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：一组对象与该对象的单个实例的处理方式一致。
</span></span><span class="line"><span class="cl">示例：
</span></span><span class="line"><span class="cl">一个表单类实例在处理其表单所有元素的方法与处理该表单自身实例方法相同，在调用方法 render() 时，
</span></span><span class="line"><span class="cl">会随之遍历它的所有子元素并对他们调用 render() 方法；
</span></span><span class="line"><span class="cl">Zend_Config: 一个配置选项树，每个选项自身就是一个 Zend_Config 对象；
</span></span></code></pre></div><ul>
<li>数据映射模式（Data Mapper）</li>
</ul>
<pre tabindex="0"><code>目标：数据映射器是一种数据访问层，它执行持久性数据存储（通常是关系数据库）和内存数据表示（域层）之间的数据双向传输。 
该模式的目标是保持内存表示和持久数据存储相互独立，并保持数据映射器本身。 
该层由一个或多个映射器（或数据访问对象）组成，执行数据传输。 映射器实现的范围有所不同。 
通用映射器将处理许多不同的域实体类型，专用映射器将处理一个或几个。
    
这种模式的关键点在于，与活动记录模式不同，数据模型遵循单一责任原则。

例子：数据库对象关系映射器（ ORM ）：Doctrine2 使用的 DAO，名字叫做 “ EntityRepository ”。
</code></pre><ul>
<li>装饰模式（Decorator）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：为类实例动态增加新的方法。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Zend Framework: Zend_Form_Element 实例的装饰者；
</span></span><span class="line"><span class="cl">Web Service Layer: 用于 REST 服务的 JSON 和 XML 装饰者 (当然，在这个例子中理应只有一个是被允许的)；
</span></span></code></pre></div><ul>
<li>依赖注入模式（Dependency Injection）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：用松散耦合的方式来更好的实现可测试、可维护和可扩展的代码。
</span></span><span class="line"><span class="cl">用法:DatabaseConfiguration 被注入  DatabaseConnection  并获取所需的  $config 。
</span></span><span class="line"><span class="cl">如果没有依赖注入模式， 配置将直接创建  DatabaseConnection 。这对测试和扩展来说很不好。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Doctrine2 ORM 使用依赖注入。 例如，注入到  Connection  对象的配置。 
</span></span><span class="line"><span class="cl">对于测试而言， 可以轻松的创建可扩展的模拟数据并注入到  Connection  对象中；
</span></span><span class="line"><span class="cl">Symfony 和 Zend Framework 2 已经有了依赖注入的容器。他们通过配置的数组来创建对象，并在需要的地方注入 (在控制器中)；
</span></span></code></pre></div><ul>
<li>门面模式（Facade）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：门面模式的最初目的并不是为了避免让你阅读复杂的 API 文档，这只是一个附带作用。
</span></span><span class="line"><span class="cl">其实它的本意是为了降低耦合性并且遵循 Demeter 定律。
</span></span><span class="line"><span class="cl">一个门面旨在通过嵌入许多（但有时只有一个）接口来分离客户端和子系统。当然，也是为了降低复杂度。
</span></span><span class="line"><span class="cl">门面不会禁止你访问子系统。你可以（应该）有多个门面对应一个子系统。这就是为什么一个好的门面里没有 new 的原因。
</span></span><span class="line"><span class="cl">如果每个方法都有多种创建，那并不是一个门面，而是一个构建器 [抽象的|静态的|简单的] 或是一个工厂 [方法] 。
</span></span><span class="line"><span class="cl">最好的门面是没有 new 的，并且其构造函数带有接口类型提示的参数。 如果你需要创建新的实例，可以使用工厂作为变量。
</span></span></code></pre></div><ul>
<li>流接口模式（Fluent Interface）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：用来编写易于阅读的代码，就像自然语言一样（如英语）。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Doctrine2 的 QueryBuilder，就像下面例子中类似；
</span></span><span class="line"><span class="cl">PHPUnit 使用连贯接口来创建 mock 对象；
</span></span><span class="line"><span class="cl">Yii 框架：CDbCommand 与 CActiveRecord 也使用此模式；
</span></span></code></pre></div><ul>
<li>享元模式（Flyweight）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：为了节约内存的使用，享元模式会尽量使类似的对象共享内存。在大量类似对象被使用的情况中这是十分必要的。
</span></span><span class="line"><span class="cl">常用做法是在外部数据结构中保存类似对象的状态，并在需要时将他们传递给享元对象。
</span></span></code></pre></div><p>代理模式（Proxy）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：链接任何具有高价值或无法复制的代码。
</span></span><span class="line"><span class="cl">例子:Doctrine2 使用代理来实现框架的“魔术”（例如：延迟加载），而用户仍然使用他们自己的实体类且不会使用到代理。
</span></span></code></pre></div><ul>
<li>注册模式（Registry）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：目的是能够存储在应用程序中经常使用的对象实例，通常会使用只有静态方法的抽象类来实现（或使用单例模式）。
</span></span><span class="line"><span class="cl">需要注意的是这里可能会引入全局的状态，我们需要使用依赖注入来避免它。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Zend 框架 1：Zend_Registry 实现了整个应用程序的 logger 对象和前端控制器等；
</span></span><span class="line"><span class="cl">Yii 框架：CWebApplication 具有全部应用程序组件，例如 CWebUser，CUrlManager 等。
</span></span></code></pre></div><h3 id="行为型">行为型</h3>
<p>责任链模式（Chain Of Responsibilities）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：建立一个对象链来按指定顺序处理调用。如果其中一个对象无法处理命令，
</span></span><span class="line"><span class="cl">它会委托这个调用给它的下一个对象来进行处理，以此类推。
</span></span><span class="line"><span class="cl">例子:
</span></span><span class="line"><span class="cl">日记框架，每个链元素自主决定如何处理日记消息;
</span></span><span class="line"><span class="cl">垃圾邮件过滤器;
</span></span><span class="line"><span class="cl">缓存：例如第一个对象是一个 Memcached 接口实例，如果 “丢失” 它会委托数据库接口处理这个调用;
</span></span><span class="line"><span class="cl">Yii 框架: CFilterChain 是一个控制器行为过滤器链。
</span></span><span class="line"><span class="cl">执行点会有链上的过滤器逐个传递，并且只有当所有的过滤器验证通过，这个行为最后才会被调用。
</span></span></code></pre></div><ul>
<li>命令行模式（Command）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：为了封装调用和解耦。
</span></span><span class="line"><span class="cl">我们有一个调用程序和一个接收器。 这种模式使用「命令行」将方法调用委托给接收器并且呈现相同的「执行」方法。 
</span></span><span class="line"><span class="cl">因此，调用程序只知道调用「执行」去处理客户端的命令。接收器会从调用程序中分离出来。
</span></span><span class="line"><span class="cl">这个模式的另一面是取消方法的 execute()，也就是 undo() 。
</span></span><span class="line"><span class="cl">命令行也可以通过最小量的复制粘贴和依赖组合（不是继承）被聚合，从而组合成更复杂的命令集。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">文本编辑器：所有事件都是可以被解除、堆放，保存的命令；
</span></span><span class="line"><span class="cl">Symfony2：SF2 命令可以从 CLI 运行，它的建立只需考虑到命令行模式；
</span></span><span class="line"><span class="cl">大型 CLI 工具使用子程序来分发不同的任务并将它们封装在「模型」中，每个模块都可以通过命令行模式实现（例如：vagrant）。
</span></span></code></pre></div><p>迭代器模式（Iterator）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：让对象变得可迭代并表现得像对象集合。
</span></span><span class="line"><span class="cl">例子：在文件中的所有行（对象表示形式的）上逐行处理文件（也是对象）。
</span></span></code></pre></div><ul>
<li>中介者模式（Mediator）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：本模式提供了一种轻松的多组件之间弱耦合的协同方式。如果你有个“情报中心”，观察者模式也是个好选择，
</span></span><span class="line"><span class="cl">类似于控制器（并非 MVC 意义上的控制器）。所有关联协同的组件（称作 Colleague）仅与 MediatorInterface 接口建立耦合，
</span></span><span class="line"><span class="cl">面向对象编程中这是好事，一个良友胜于有多个朋友。这是该模式的重要特性。
</span></span></code></pre></div><p>备忘录模式（Memento）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：它提供了在不破坏封装（对象不需要具有返回当前状态的函数）的情况下恢复到之前状态（使用回滚）或者获取对象的内部状态。
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">备忘录模式使用 3 个类来实现：Originator，Caretaker 和 Memento。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Memento —— 负责存储 Originator 的 唯一内部状态 ，它可以包含： string，number， array，类的实例等等。
</span></span><span class="line"><span class="cl">Memento 「不是公开的类」（任何人都不应该且不能更改它），并防止 Originator 以外的对象访问它，
</span></span><span class="line"><span class="cl">它提供2个接口：Caretaker 只能看到备忘录的窄接口，他只能将备忘录传递给其他对象。
</span></span><span class="line"><span class="cl">Originator 却可看到备忘录的宽接口，允许它访问返回到先前状态所需要的所有数据。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Originator —— 它负责创建 Memento  ，并记录 外部对象当前时刻的状态， 并可使用 Memento 恢复内部状态。
</span></span><span class="line"><span class="cl">Originator 可根据需要决定 Memento 存储 Originator 的哪些内部状态。
</span></span><span class="line"><span class="cl">Originator 也许（不是应该）有自己的方法（methods）。 但是，他们 不能更改已保存对象的当前状态。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Caretaker —— 负责保存 Memento。 它可以修改一个对象；决定 Originator 中对象当前时刻的状态； 
</span></span><span class="line"><span class="cl">从 Originator 获取对象的当前状态； 或者回滚 Originator 中对象的状态。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">发送一个随机数；
</span></span><span class="line"><span class="cl">并将这个随机数存在时序机中；
</span></span><span class="line"><span class="cl">保存之前控制  ORM Model  中的状态。
</span></span></code></pre></div><ul>
<li>空对象模式（Null Object）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：空对象模式不属于 GoF 设计模式，但是它作为一种经常出现的套路足以被视为设计模式了。它具有如下优点：
</span></span><span class="line"><span class="cl">客户端代码简单
</span></span><span class="line"><span class="cl">可以减少报空指针异常的几率
</span></span><span class="line"><span class="cl">测试用例不需要考虑太多条件
</span></span><span class="line"><span class="cl">返回一个对象或 null 应该用返回对象或者 NullObject 代替。NullObject 简化了死板的代码，消除了客户端代码中的条件检查，
</span></span><span class="line"><span class="cl">例如 if (!is_null($obj)) { $obj-&gt;callSomething(); } 只需 $obj-&gt;callSomething(); 就行。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Symfony2: 空日志；
</span></span><span class="line"><span class="cl">Symfony2: Symfony/Console 空输出；
</span></span><span class="line"><span class="cl">责任链模式中的空处理器；
</span></span><span class="line"><span class="cl">命令行模式中的空命令。
</span></span></code></pre></div><ul>
<li>观察者模式（Observer）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：当对象的状态发生变化时，所有依赖于它的对象都得到通知并被自动更新。它使用的是低耦合的方式。
</span></span><span class="line"><span class="cl">例子：使用观察者模式观察消息队列在 GUI 中的运行情况。
</span></span></code></pre></div><p><strong>PHP 已经定义了2个接口用于快速实现观察者模式：SplObserver 和 SplSubject。</strong></p>
<ul>
<li>规格模式（Specification）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：构建一个清晰的业务规则规范，其中每条规则都能被针对性地检查。
</span></span><span class="line"><span class="cl">每个规范类中都有一个称为isSatisfiedBy的方法，方法判断给定的规则是否满足规范从而返回 true 或 false。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">RulerZ
</span></span></code></pre></div><ul>
<li>状态模式（State）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：状态模式可以基于一个对象的同种事务而封装出不同的行为。
</span></span><span class="line"><span class="cl">它提供一种简洁的方式使得对象在运行时可以改变自身行为，而不必借助单一庞大的条件判断语句。
</span></span></code></pre></div><ul>
<li>策略模式（Strategy）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">术语：上下文    策略    具体策略
</span></span><span class="line"><span class="cl">目的：分离「策略」并使他们之间能互相快速切换。此外，这种模式是一种不错的继承替代方案（替代使用扩展抽象类的方式）。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">对一个对象列表进行排序，一种按照日期，一种按照 id；
</span></span><span class="line"><span class="cl">简化版的的单元测试：例如，在使用文件存储和内存存储之间互相切换。
</span></span></code></pre></div><ul>
<li>模板方法模式（Template Method）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：模板方法模式是一种行为型的设计模式。
</span></span><span class="line"><span class="cl">可能你已经见过这种模式很多次了。它是一种让抽象模板的子类「完成」一系列算法的行为策略。
</span></span><span class="line"><span class="cl">众所周知的「好莱坞原则」：「不要打电话给我们，我们会打电话给你」。
</span></span><span class="line"><span class="cl">这个类不是由子类调用的，而是以相反的方式。怎么做？当然很抽象啦！
</span></span><span class="line"><span class="cl">换而言之，它是一种非常适合框架库的算法骨架。用户只需要实现子类的一种方法，其父类便可去搞定这项工作了。
</span></span><span class="line"><span class="cl">这是一种分离具体类的简单办法，且可以减少复制粘贴，这也是它常见的原因。
</span></span></code></pre></div><ul>
<li>访问者模式（Visitor）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：访问者模式可以让你将对象操作外包给其他对象。这样做的最主要原因就是关注（数据结构和数据操作）分离。
</span></span><span class="line"><span class="cl">但是被访问的类必须定一个契约接受访问者。 (详见例子中的 Role::accept 方法)
</span></span><span class="line"><span class="cl">契约可以是一个抽象类也可直接就是一个接口。在此情况下，每个访问者必须自行选择调用访问者的哪个方法。
</span></span></code></pre></div><p>更多类型</p>
<ul>
<li>委托模式（Delegation）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：在委托模式的示例里，一个对象将它要执行的任务委派给与之关联的帮助对象去执行。
</span></span><span class="line"><span class="cl">在示例中，「组长」声明了 writeCode 方法并使用它，
</span></span><span class="line"><span class="cl">其实「组长」把 writeCode 委托给「菜鸟开发者」的 writeBadCode 方法做了。
</span></span><span class="line"><span class="cl">这种反转责任的做法隐藏了其内部执行 writeBadCode 的细节。
</span></span></code></pre></div><ul>
<li>服务定位器模式（Service Locator）</li>
</ul>
<blockquote>
<p>服务定位器模式被认为是一种反面模式！
服务定位器模式被一些人认为是一种反面模式。它违反了依赖倒置原则。该模式隐藏类的依赖，而不是暴露依赖（如果暴露可通过依赖注入的方式注入依赖）。当某项服务的依赖发生变化时，使用该服务的类的功能将面临被破坏的风险，最终导致系统难以维护。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：服务定位器模式能够降低代码的耦合度，以便获得可测试、可维护和可扩展的代码。
</span></span><span class="line"><span class="cl">DI 模式和服务定位器模式是 IOC 模式的一种实现。
</span></span><span class="line"><span class="cl">用法：使用 ServiceLocator ，你可以为给定的 interface 注册一个服务。
</span></span><span class="line"><span class="cl">通过使用这个 interface，你不需要知道该服务的实现细节，就可以获取并在你应用中使用该服务。
</span></span><span class="line"><span class="cl">你可以在引导程序中配置和注入服务定位器对象。
</span></span><span class="line"><span class="cl">例子：Zend Framework2 使用服务定位器创建和共享框架中使用的服务
</span></span><span class="line"><span class="cl">（EventManager，ModuleManager，以及由模块提供的用户自定义服务等）。
</span></span></code></pre></div><ul>
<li>资源库模式（Repository）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：该模式通过提供集合风格的接口来访问领域对象，从而协调领域和数据映射层。 
</span></span><span class="line"><span class="cl">资料库模式封装了一组存储在数据存储器里的对象和操作它们的方面，这样子为数据持久化层提供了更加面向对象的视角。
</span></span><span class="line"><span class="cl">资料库模式同时也达到了领域层与数据映射层之间清晰分离，单向依赖的目的。
</span></span><span class="line"><span class="cl">例子：
</span></span><span class="line"><span class="cl">Doctrine 2 ORM: 通过资料库协调实体和 DBAL，它包含检索对象的方法；
</span></span><span class="line"><span class="cl">Laravel 框架。
</span></span></code></pre></div><ul>
<li>实体属性值模式（EAV 模式）</li>
</ul>
<blockquote>
<p>实体属性值（Entity&ndash;attribute&ndash;value EAV）模式，可以方便 PHP 实现 EAV 模型。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">目的：实体属性值模型（Entity-attribute-value EAV）是一种用数据模型描述实体的属性（属性，参数），
</span></span><span class="line"><span class="cl">可以用来形容他们潜在巨大，但实际上将适用于给定的实体的数量是相对较少。 
</span></span><span class="line"><span class="cl">在数学中，这种模式被称为一个稀疏矩阵 。 EAV也被称为对象的属性值的模式，垂直的数据库模型和开放式架构。
</span></span></code></pre></div><ul>
<li>反面模式（Anti-pattern）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">说明
</span></span><span class="line"><span class="cl">在软件工程中，一个反面模式（Anti-pattern 或 Antipattern）指的是在实践中明显出现但又低效或是有待优化的设计模式，
</span></span><span class="line"><span class="cl">是用来解决问题的带有共同性的不良方法。它们已经经过研究并分类，以防止日后重蹈覆辙，
</span></span><span class="line"><span class="cl">并能在研发尚未投产的系统时辨认出来。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Andrew Koenig 在 1995 年造了 Anti-pattern 这个词，灵感来自于 GoF 的《设计模式》一书。
</span></span><span class="line"><span class="cl">而这本书则在软件领域引入了“设计模式”（Design Pattern）的概念。
</span></span><span class="line"><span class="cl">三年后 Antipattern 因《AntiPatterns》这本书而获得普及，而它的使用也从软件设计领域扩展到了日常的社会互动中。
</span></span><span class="line"><span class="cl">按《AntiPatterns》作者的说法，可以用至少两个关键因素来把反面模式和不良习惯、错误的实践或糟糕的想法区分开来：
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">行动、过程和结构中的一些重复出现的乍一看是有益的，但最终得不偿失的模式
</span></span><span class="line"><span class="cl">在实践中证明且可重复的清晰记录的重构方案
</span></span><span class="line"><span class="cl">很多反面模式只相当于是错误、咆哮、不可解的问题、或是可能可以避免的糟糕的实践，
</span></span><span class="line"><span class="cl">它们的名字通常都是一些用反话构成的词语。
</span></span><span class="line"><span class="cl">有些时候陷阱（Pitfalls）或黑色模式（Dark Patterns）这些不正式的说法会被用来指代各类反复出现的糟糕的解决方法。
</span></span><span class="line"><span class="cl">因此，一些有争议的候选的反面模式不会被正式承认。
</span></span></code></pre></div><blockquote>
<p>—— 以上摘自 wikipedia</p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>Laravel手动创建数组分页😏</title>
			<link>https://blog.gookm.cn/posts/2018/20180110-laravel-paginate/</link>
			<pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2018/20180110-laravel-paginate/</guid>
			<description>laravel分页功能 有几种方法可以对数据进行分页。最简单的是在 [查询语句构造器] 或 [Eloquent 查询] 中使用 paginate 或 simplePaginate 方法。
paginate用法如下：
//控制器中 $users = DB::table(&amp;#39;users&amp;#39;)-&amp;gt;paginate(15); return view(&amp;#39;user.index&amp;#39;, [&amp;#39;users&amp;#39; =&amp;gt; $users]); //视图中 {{ $users-&amp;gt;links() }} 效果如下：
「上一页」 「1」「2」「3」 「下一页」
simplePaginate用法如下：
//控制器中 $users = User::where(&amp;#39;votes&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, 100)-&amp;gt;simplePaginate(15); return view(&amp;#39;user.index&amp;#39;, compact(&amp;#39;users&amp;#39;)); //视图中 {{ $users-&amp;gt;links() }} 效果如下：
「上一页」 「下一页」
注意：
如果你只需要在分页视图中显示简单的「下一页」和「上一页」的链接，即不需要显示每个页码的链接，更推荐使用 simplePaginate 方法来执行更高效的查询。 目前，Laravel 无法高效执行使用 groupBy 语句的分页操作。如果你需要在分页结果集中使用 groupBy，建议你查询数据库并手动创建分页器。 有时候可能会遇到这种情况，dataA和dataB是从数据库取出的两个不同的数据集合，需要同时将dataA和dataB分配到视图并进行分页展示，那这种情况怎么办呢？ 这种情况可以采用laravel数组分页。
其实在laravel文档中已经有写如何自己使用分页类去分页了，但没有 详细说明。
手动创建分页 如果你想手动创建分页实例并且最终得到一个数组类型的结果，可以根据需求来创建 IlluminatePaginationPaginator 或者 IlluminatePaginationLengthAwarePaginator 实例来实现。
具体可以看IlluminatePaginationLengthAwarePaginator中的这段代码：
public function __construct($items, $total, $perPage, $currentPage = null, array $options = []) { foreach ($options as $key =&amp;gt; $value) { $this-&amp;gt;{$key} = $value; } $this-&amp;gt;total = $total; $this-&amp;gt;perPage = $perPage; $this-&amp;gt;lastPage = max((int) ceil($total / $perPage), 1); $this-&amp;gt;path = $this-&amp;gt;path !</description>
			<content type="html"><![CDATA[<h3 id="laravel分页功能">laravel分页功能</h3>
<p>有几种方法可以对数据进行分页。最简单的是在 [查询语句构造器] 或 [Eloquent 查询] 中使用 paginate 或 simplePaginate 方法。</p>
<p>paginate用法如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//控制器中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$users</span> <span class="o">=</span> <span class="nx">DB</span><span class="o">::</span><span class="na">table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">paginate</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;user.index&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;users&#39;</span> <span class="o">=&gt;</span> <span class="nv">$users</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//视图中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">{{</span> <span class="nv">$users</span><span class="o">-&gt;</span><span class="na">links</span><span class="p">()</span> <span class="p">}}</span>
</span></span></code></pre></div><p>效果如下：</p>
<p>「上一页」 「1」「2」「3」 「下一页」</p>
<p>simplePaginate用法如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//控制器中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$users</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;votes&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;&#39;</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">simplePaginate</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;user.index&#39;</span><span class="p">,</span> <span class="nx">compact</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//视图中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">{{</span> <span class="nv">$users</span><span class="o">-&gt;</span><span class="na">links</span><span class="p">()</span> <span class="p">}}</span>
</span></span></code></pre></div><p>效果如下：</p>
<p>「上一页」 「下一页」</p>
<p>注意：</p>
<ol>
<li>如果你只需要在分页视图中显示简单的「下一页」和「上一页」的链接，即不需要显示每个页码的链接，更推荐使用 simplePaginate 方法来执行更高效的查询。</li>
<li>目前，Laravel 无法高效执行使用 groupBy 语句的分页操作。如果你需要在分页结果集中使用 groupBy，建议你查询数据库并手动创建分页器。</li>
</ol>
<p>有时候可能会遇到这种情况，dataA和dataB是从数据库取出的两个不同的数据集合，需要同时将dataA和dataB分配到视图并进行分页展示，那这种情况怎么办呢？
<img src="https://segmentfault.com/img/bVbbGnP?w=277&amp;h=235" alt=""></p>
<p><strong>这种情况可以采用laravel数组分页。</strong></p>
<p>其实在laravel文档中已经有写如何自己使用分页类去分页了，但没有 详细说明。</p>
<h3 id="手动创建分页">手动创建分页</h3>
<p>如果你想手动创建分页实例并且最终得到一个数组类型的结果，可以根据需求来创建 IlluminatePaginationPaginator 或者 IlluminatePaginationLengthAwarePaginator 实例来实现。</p>
<p>具体可以看IlluminatePaginationLengthAwarePaginator中的这段代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="fm">__construct</span><span class="p">(</span><span class="nv">$items</span><span class="p">,</span> <span class="nv">$total</span><span class="p">,</span> <span class="nv">$perPage</span><span class="p">,</span> <span class="nv">$currentPage</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span> <span class="o">=</span> <span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$options</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$key</span><span class="p">}</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">total</span> <span class="o">=</span> <span class="nv">$total</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">perPage</span> <span class="o">=</span> <span class="nv">$perPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">lastPage</span> <span class="o">=</span> <span class="nx">max</span><span class="p">((</span><span class="nx">int</span><span class="p">)</span> <span class="nx">ceil</span><span class="p">(</span><span class="nv">$total</span> <span class="o">/</span> <span class="nv">$perPage</span><span class="p">),</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span> <span class="o">!==</span> <span class="s1">&#39;/&#39;</span> <span class="o">?</span> <span class="nx">rtrim</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="o">:</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">path</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">currentPage</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setCurrentPage</span><span class="p">(</span><span class="nv">$currentPage</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">pageName</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">items</span> <span class="o">=</span> <span class="nv">$items</span> <span class="nx">instanceof</span> <span class="nx">Collection</span> <span class="o">?</span> <span class="nv">$items</span> <span class="o">:</span> <span class="nx">Collection</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="nv">$items</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="具体实现代码">具体实现代码</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//控制器中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">(</span><span class="nx">LiveService</span> <span class="nv">$liveService</span><span class="p">,</span> <span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//数据A
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$dataA</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//数据B
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$dataB</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">toArray</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$data</span> <span class="o">=</span> <span class="nx">array_merge</span><span class="p">(</span><span class="nv">$dataA</span><span class="p">,</span> <span class="nv">$dataB</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//当前页数 默认1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$page</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">page</span> <span class="o">?:</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//每页的条数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$perPage</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//计算每页分页的初始位置
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$offset</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$page</span> <span class="o">*</span> <span class="nv">$perPage</span><span class="p">)</span> <span class="o">-</span> <span class="nv">$perPage</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="c1">//实例化LengthAwarePaginator类，并传入对应的参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$data</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">LengthAwarePaginator</span><span class="p">(</span><span class="nx">array_slice</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$offset</span><span class="p">,</span> <span class="nv">$perPage</span><span class="p">,</span> <span class="k">true</span><span class="p">),</span> <span class="nx">count</span><span class="p">(</span><span class="nv">$data</span><span class="p">),</span> <span class="nv">$perPage</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$page</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;path&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">url</span><span class="p">(),</span> <span class="s1">&#39;query&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">query</span><span class="p">()]);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="s1">&#39;admin.users.index&#39;</span><span class="p">,</span> <span class="nx">compact</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//视图中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">{{</span> <span class="nv">$data</span><span class="o">-&gt;</span><span class="na">links</span><span class="p">()</span> <span class="p">}}</span>
</span></span></code></pre></div><p>以上基本就完成了数组分页，大致流程就是控制器获取到当前页数，实例化LengthAwarePaginator类并传入必要的参数，根据每页的条数利用array_slice()方法获取每页要显示的数据。</p>
<p><a href="https://segmentfault.com/a/1190000015138587">另一参考地址</a></p>
]]></content>
		</item>
		
		<item>
			<title>Laravel中发送Ajax请求🏃‍♂️</title>
			<link>https://blog.gookm.cn/posts/2017/20171108-laravel-ajax/</link>
			<pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20171108-laravel-ajax/</guid>
			<description>ajax请求验证,添加数据 $(&amp;#34;#submit2&amp;#34;).click(function () { var _error = 0; if ($(&amp;#34;.addtit&amp;#34;).val() == &amp;#34;&amp;#34;) { _error = 1 } if (_error == 1) { layer.msg(&amp;#39;所有信息必须填写&amp;#39;, {icon: 5, time: 980}); return false; } $.ajax({ type:&amp;#39;post&amp;#39;, url:&amp;#39;{{route(&amp;#39;messages.sysstore&amp;#39;)}}&amp;#39;, data:{ &amp;#39;_token&amp;#39;:{{csrf_filed()}}, &amp;#39;type&amp;#39;:1, &amp;#39;title&amp;#39;:$(&amp;#39;#title_2&amp;#39;).val(), &amp;#39;timing&amp;#39;:$(&amp;#34;#timing_input2&amp;#34;).val(), &amp;#39;images&amp;#39;: JSON.stringify( images_arr ) }, success:function(msg){ if(msg.code == 0){ layer.msg(&amp;#39;ok！&amp;#39;,{icon:6,time:1500},function(){ location.href = &amp;#34;{{route(&amp;#39;messages.index&amp;#39;)}}&amp;#34;; }); }else{ layer.msg(msg.error,{icon:5,time:1500}); } } }); return false; }) ajax请求修改数据 $.ajax({ url: &amp;#39;/registerAgreement/&amp;#39; + _id, type: &amp;#39;PATCH&amp;#39;, success: function (data) { console.</description>
			<content type="html"><![CDATA[<h3 id="ajax请求验证添加数据">ajax请求验证,添加数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#submit2&#34;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">_error</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&#34;.addtit&#34;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">_error</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="nx">_error</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">layer</span><span class="p">.</span><span class="nx">msg</span><span class="p">(</span><span class="s1">&#39;所有信息必须填写&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">icon</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">time</span><span class="o">:</span> <span class="mi">980</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;post&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">url</span><span class="o">:</span><span class="s1">&#39;{{route(&#39;</span><span class="nx">messages</span><span class="p">.</span><span class="nx">sysstore</span><span class="s1">&#39;)}}&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nx">data</span><span class="o">:</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;_token&#39;</span><span class="o">:</span><span class="p">{{</span><span class="nx">csrf_filed</span><span class="p">()}},</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;type&#39;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;title&#39;</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#title_2&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;timing&#39;</span><span class="o">:</span><span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#timing_input2&#34;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;images&#39;</span><span class="o">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span> <span class="nx">images_arr</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">code</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">                <span class="nx">layer</span><span class="p">.</span><span class="nx">msg</span><span class="p">(</span><span class="s1">&#39;ok！&#39;</span><span class="p">,{</span><span class="nx">icon</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">time</span><span class="o">:</span><span class="mi">1500</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">                    <span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="s2">&#34;{{route(&#39;messages.index&#39;)}}&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">});</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">layer</span><span class="p">.</span><span class="nx">msg</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">error</span><span class="p">,{</span><span class="nx">icon</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">time</span><span class="o">:</span><span class="mi">1500</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span></code></pre></div><h3 id="ajax请求修改数据">ajax请求修改数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">     <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/registerAgreement/&#39;</span> <span class="o">+</span> <span class="nx">_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">     <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;PATCH&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="kd">var</span> <span class="nx">_img</span> <span class="o">=</span> <span class="nx">data</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">?</span> <span class="s1">&#39;watch1&#39;</span> <span class="o">:</span> <span class="s1">&#39;watch01&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="nx">_this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&#34;.watch&#34;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;src&#34;</span><span class="p">,</span> <span class="s2">&#34;/assets/images/&#34;</span> <span class="o">+</span> <span class="nx">_img</span> <span class="o">+</span> <span class="s2">&#34;.png&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="nx">layer</span><span class="p">.</span><span class="nx">msg</span><span class="p">(</span><span class="s2">&#34;启用成功！&#34;</span><span class="p">,</span> <span class="p">{</span><span class="nx">icon</span><span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">time</span><span class="o">:</span> <span class="mi">1500</span><span class="p">},</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">             <span class="nx">location</span><span class="p">.</span><span class="nx">reload</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">         <span class="p">})</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">           <span class="k">return</span> <span class="nx">layer</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;启用失败！&#34;</span><span class="p">,</span> <span class="p">{</span><span class="nx">icon</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">time</span><span class="o">:</span> <span class="mi">3000</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">     <span class="p">}</span>
</span></span><span class="line"><span class="cl"> <span class="p">});</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel Carbon函数</title>
			<link>https://blog.gookm.cn/posts/2017/20171021-laravel-carbon/</link>
			<pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20171021-laravel-carbon/</guid>
			<description>快速切换前后日期 &amp;lt;?php use Carbon\Carbon; $now = Carbon::now(); echo $now; // 2015-03-26 00:36:47 $today = Carbon::today(); echo $today; // 2015-03-26 00:00:00 $tomorrow = Carbon::tomorrow(&amp;#39;Europe/London&amp;#39;); echo $tomorrow; // 2015-03-27 00:00:00 $yesterday = Carbon::yesterday(); echo $yesterday; // 2015-03-25 00:00:00 建立特定日期的时间 &amp;lt;?php use Carbon\Carbon; $timezone = &amp;#39;Asia/Taipei&amp;#39;; // 從「年月日」建立 Carbon::createFromDate($year, $month, $day, $timezone); // 從「時分秒」建立 Carbon::createFromTime($hour, $minute, $second, $timezone); // 從完整的「年月日時分秒」建立 Carbon::create($year, $month, $day, $hour, $minute, $second, $timezone); // 從指定的格式建立 Carbon::createFromFormat($format, $time, $tz); echo Carbon::createFromFormat(&amp;#39;Y-m-d H&amp;#39;, &amp;#39;1975-05-21 22&amp;#39;)-&amp;gt;toDateTimeString(); // 1975-05-21 22:00:00 // 從時間戳記建立 echo Carbon::createFromTimeStamp(-1)-&amp;gt;toDateTimeString(); // 1969-12-31 18:59:59 echo Carbon::createFromTimeStamp(-1, &amp;#39;Europe/London&amp;#39;)-&amp;gt;toDateTimeString(); // 1970-01-01 00:59:59 echo Carbon::createFromTimeStampUTC(-1)-&amp;gt;toDateTimeString(); 转换日期 &amp;lt;?</description>
			<content type="html"><![CDATA[<h3 id="快速切换前后日期">快速切换前后日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$now</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$now</span><span class="p">;</span>                               <span class="c1">// 2015-03-26 00:36:47
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$today</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">today</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$today</span><span class="p">;</span>                             <span class="c1">// 2015-03-26 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$tomorrow</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">tomorrow</span><span class="p">(</span><span class="s1">&#39;Europe/London&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$tomorrow</span><span class="p">;</span>                          <span class="c1">// 2015-03-27 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$yesterday</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">yesterday</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$yesterday</span><span class="p">;</span>                         <span class="c1">// 2015-03-25 00:00:00
</span></span></span></code></pre></div><h3 id="建立特定日期的时间">建立特定日期的时间</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$timezone</span> <span class="o">=</span> <span class="s1">&#39;Asia/Taipei&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 從「年月日」建立
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$day</span><span class="p">,</span> <span class="nv">$timezone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 從「時分秒」建立
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTime</span><span class="p">(</span><span class="nv">$hour</span><span class="p">,</span> <span class="nv">$minute</span><span class="p">,</span> <span class="nv">$second</span><span class="p">,</span> <span class="nv">$timezone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 從完整的「年月日時分秒」建立
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$day</span><span class="p">,</span> <span class="nv">$hour</span><span class="p">,</span> <span class="nv">$minute</span><span class="p">,</span> <span class="nv">$second</span><span class="p">,</span> <span class="nv">$timezone</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 從指定的格式建立
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromFormat</span><span class="p">(</span><span class="nv">$format</span><span class="p">,</span> <span class="nv">$time</span><span class="p">,</span> <span class="nv">$tz</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromFormat</span><span class="p">(</span><span class="s1">&#39;Y-m-d H&#39;</span><span class="p">,</span> <span class="s1">&#39;1975-05-21 22&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span> <span class="c1">// 1975-05-21 22:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 從時間戳記建立
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimeStamp</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>                        <span class="c1">// 1969-12-31 18:59:59
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimeStamp</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;Europe/London&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>       <span class="c1">// 1970-01-01 00:59:59
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimeStampUTC</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="转换日期">转换日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 透過文字移動日期
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$knownDate</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">12</span><span class="p">);</span>          <span class="c1">// create testing date
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Carbon</span><span class="o">::</span><span class="na">setTestNow</span><span class="p">(</span><span class="nv">$knownDate</span><span class="p">);</span>                        <span class="c1">// set the mock
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="k">new</span> <span class="nx">Carbon</span><span class="p">(</span><span class="s1">&#39;tomorrow&#39;</span><span class="p">);</span>                           <span class="c1">// 2001-05-22 00:00:00  ... notice the time !
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="k">new</span> <span class="nx">Carbon</span><span class="p">(</span><span class="s1">&#39;yesterday&#39;</span><span class="p">);</span>                          <span class="c1">// 2001-05-20 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="k">new</span> <span class="nx">Carbon</span><span class="p">(</span><span class="s1">&#39;next wednesday&#39;</span><span class="p">);</span>                     <span class="c1">// 2001-05-23 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="k">new</span> <span class="nx">Carbon</span><span class="p">(</span><span class="s1">&#39;last friday&#39;</span><span class="p">);</span>                        <span class="c1">// 2001-05-18 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="k">new</span> <span class="nx">Carbon</span><span class="p">(</span><span class="s1">&#39;this thursday&#39;</span><span class="p">);</span>                      <span class="c1">// 2001-05-24 00:00:00
</span></span></span></code></pre></div><h3 id="取得日期资料">取得日期资料</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">parse</span><span class="p">(</span><span class="s1">&#39;2012-9-5 23:26:11.123789&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 取的指定時間資料的資訊（整數）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">year</span><span class="p">);</span>                                         <span class="c1">// int(2012)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">month</span><span class="p">);</span>                                        <span class="c1">// int(9)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">day</span><span class="p">);</span>                                          <span class="c1">// int(5)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">hour</span><span class="p">);</span>                                         <span class="c1">// int(23)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">minute</span><span class="p">);</span>                                       <span class="c1">// int(26)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">second</span><span class="p">);</span>                                       <span class="c1">// int(11)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">micro</span><span class="p">);</span>                                        <span class="c1">// int(123789)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">dayOfWeek</span><span class="p">);</span>                                    <span class="c1">// int(3)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">dayOfYear</span><span class="p">);</span>                                    <span class="c1">// int(248)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">weekOfMonth</span><span class="p">);</span>                                  <span class="c1">// int(1)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">weekOfYear</span><span class="p">);</span>                                   <span class="c1">// int(36)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">daysInMonth</span><span class="p">);</span>                                  <span class="c1">// int(30)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">timestamp</span><span class="p">);</span>                                    <span class="c1">// int(1346901971)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">1975</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">21</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">age</span><span class="p">);</span>          <span class="c1">// int(39) calculated vs now in the same tz
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">quarter</span><span class="p">);</span>                                      <span class="c1">// int(3)季度
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 回傳與 UTC 差異的秒數
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimestampUTC</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">offset</span><span class="p">);</span>         <span class="c1">// int(0)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimestamp</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">offset</span><span class="p">);</span>            <span class="c1">// int(-18000)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 回傳與 UTC 差異的時數
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimestamp</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">offsetHours</span><span class="p">);</span>       <span class="c1">// int(-5)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 找出當天日否有日光節約時間
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">dst</span><span class="p">);</span>           <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">dst</span><span class="p">);</span>           <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 判斷指定的的時區是否與預設的時區相同
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">local</span><span class="p">);</span>                              <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">(</span><span class="s1">&#39;America/Vancouver&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">local</span><span class="p">);</span>           <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 判斷是否為 UTC 的時區時間
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">utc</span><span class="p">);</span>                                <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">(</span><span class="s1">&#39;Europe/London&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">utc</span><span class="p">);</span>                 <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimestampUTC</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">utc</span><span class="p">);</span>            <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 取得時區實例
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">get_class</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">timezone</span><span class="p">);</span>                     <span class="c1">// DateTimeZone
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">get_class</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">tz</span><span class="p">);</span>                           <span class="c1">// DateTimeZone
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 取得時區實例的名稱
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">timezoneName</span><span class="p">;</span>                            <span class="c1">// America/Toronto
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">tzName</span><span class="p">;</span>                                  <span class="c1">// America/Toronto
</span></span></span></code></pre></div><h3 id="设定时间资料">设定时间资料</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">year</span> <span class="o">=</span> <span class="mi">1975</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">month</span> <span class="o">=</span> <span class="mi">13</span><span class="p">;</span>             <span class="c1">// 年份會強制 +1，且月份變為 1 月
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">month</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">day</span> <span class="o">=</span> <span class="mi">21</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">hour</span> <span class="o">=</span> <span class="mi">22</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">minute</span> <span class="o">=</span> <span class="mi">32</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">second</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">timestamp</span> <span class="o">=</span> <span class="mi">169957925</span><span class="p">;</span>  <span class="c1">// 這個設定不會變更時區
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 透過字串或是 DateTimeZone 實例去設定時區
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">timezone</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DateTimeZone</span><span class="p">(</span><span class="s1">&#39;Europe/London&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">timezone</span> <span class="o">=</span> <span class="s1">&#39;Europe/London&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">tz</span> <span class="o">=</span> <span class="s1">&#39;Europe/London&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 鏈結設定方式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">year</span><span class="p">(</span><span class="mi">1975</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">month</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">day</span><span class="p">(</span><span class="mi">21</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">hour</span><span class="p">(</span><span class="mi">22</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">minute</span><span class="p">(</span><span class="mi">32</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">second</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">setDate</span><span class="p">(</span><span class="mi">1975</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">21</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">setTime</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">setDateTime</span><span class="p">(</span><span class="mi">1975</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">timestamp</span><span class="p">(</span><span class="mi">169957925</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">timezone</span><span class="p">(</span><span class="s1">&#39;Europe/London&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">tz</span><span class="p">(</span><span class="s1">&#39;America/Toronto&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">setTimezone</span><span class="p">(</span><span class="s1">&#39;America/Vancouver&#39;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="格式化时间资料">格式化时间资料</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">1975</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">16</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">()</span> <span class="o">==</span> <span class="nv">$dt</span><span class="p">);</span>          <span class="c1">// bool(true) =&gt; uses __toString()
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toDateString</span><span class="p">();</span>                          <span class="c1">// 1975-12-25
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toFormattedDateString</span><span class="p">();</span>                 <span class="c1">// Dec 25, 1975
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toTimeString</span><span class="p">();</span>                          <span class="c1">// 14:15:16
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>                      <span class="c1">// 1975-12-25 14:15:16
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toDayDateTimeString</span><span class="p">();</span>                   <span class="c1">// Thu, Dec 25, 1975 2:15 PM
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 仍可以使用 format() 函式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;l jS \\of F Y h:i:s A&#39;</span><span class="p">);</span>         <span class="c1">// Thursday 25th of December 1975 02:15:16 PM
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 常用的時間格式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toAtomString</span><span class="p">();</span>      <span class="c1">// in 1 Jahr
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toCookieString</span><span class="p">();</span>    <span class="c1">// Thursday, 25-Dec-1975 14:15:16 EST
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toIso8601String</span><span class="p">();</span>   <span class="c1">// 1975-12-25T14:15:16-0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc822String</span><span class="p">();</span>    <span class="c1">// Thu, 25 Dec 75 14:15:16 -0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc850String</span><span class="p">();</span>    <span class="c1">// Thursday, 25-Dec-75 14:15:16 EST
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc1036String</span><span class="p">();</span>   <span class="c1">// Thu, 25 Dec 75 14:15:16 -0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc1123String</span><span class="p">();</span>   <span class="c1">// Thu, 25 Dec 1975 14:15:16 -0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc2822String</span><span class="p">();</span>   <span class="c1">// Thu, 25 Dec 1975 14:15:16 -0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRfc3339String</span><span class="p">();</span>   <span class="c1">// 1975-12-25T14:15:16-05:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toRssString</span><span class="p">();</span>       <span class="c1">// Thu, 25 Dec 1975 14:15:16 -0500
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toW3cString</span><span class="p">();</span>       <span class="c1">// 1975-12-25T14:15:16-05:00
</span></span></span></code></pre></div><h3 id="比较时间差值">比较时间差值</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">tzName</span><span class="p">;</span>                        <span class="c1">// America/Toronto
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$first</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">11</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$second</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">&#39;America/Vancouver&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$first</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>                   <span class="c1">// 2012-09-05 23:26:11
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$first</span><span class="o">-&gt;</span><span class="na">tzName</span><span class="p">;</span>                               <span class="c1">// America/Toronto
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$second</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>                  <span class="c1">// 2012-09-05 20:26:11
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$second</span><span class="o">-&gt;</span><span class="na">tzName</span><span class="p">;</span>                              <span class="c1">// America/Vancouver
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 大於、等於、小於
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">eq</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">ne</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">gt</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">gte</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                    <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">lt</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">lte</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                    <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">setDateTime</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$second</span><span class="o">-&gt;</span><span class="na">setDateTime</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>         <span class="c1">// Remember tz is &#39;America/Vancouver&#39;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">eq</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">ne</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">gt</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">gte</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                    <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">lt</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                     <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$first</span><span class="o">-&gt;</span><span class="na">lte</span><span class="p">(</span><span class="nv">$second</span><span class="p">));</span>                    <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 時間區間比較
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$first</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$second</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">between</span><span class="p">(</span><span class="nv">$first</span><span class="p">,</span> <span class="nv">$second</span><span class="p">));</span>          <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">between</span><span class="p">(</span><span class="nv">$first</span><span class="p">,</span> <span class="nv">$second</span><span class="p">));</span>          <span class="c1">// bool(true)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">between</span><span class="p">(</span><span class="nv">$first</span><span class="p">,</span> <span class="nv">$second</span><span class="p">,</span> <span class="k">false</span><span class="p">));</span>   <span class="c1">// bool(false)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 時間大小比較
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$dt1</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt2</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt1</span><span class="o">-&gt;</span><span class="na">min</span><span class="p">(</span><span class="nv">$dt2</span><span class="p">);</span>                              <span class="c1">// 2012-01-01 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt1</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt2</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt1</span><span class="o">-&gt;</span><span class="na">max</span><span class="p">(</span><span class="nv">$dt2</span><span class="p">);</span>                              <span class="c1">// 2014-01-30 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// now is the default param
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$dt1</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt1</span><span class="o">-&gt;</span><span class="na">max</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 時間差異運算
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">(</span><span class="s1">&#39;America/Vancouver&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">diffInSeconds</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">(</span><span class="s1">&#39;Europe/London&#39;</span><span class="p">));</span> <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dtOttawa</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;America/Toronto&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dtVancouver</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;America/Vancouver&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dtOttawa</span><span class="o">-&gt;</span><span class="na">diffInHours</span><span class="p">(</span><span class="nv">$dtVancouver</span><span class="p">);</span>                             <span class="c1">// 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dtOttawa</span><span class="o">-&gt;</span><span class="na">diffInHours</span><span class="p">(</span><span class="nv">$dtVancouver</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>                      <span class="c1">// 3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dtVancouver</span><span class="o">-&gt;</span><span class="na">diffInHours</span><span class="p">(</span><span class="nv">$dtOttawa</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>                      <span class="c1">// -3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInDays</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addMonth</span><span class="p">());</span>                         <span class="c1">// 31
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInDays</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subMonth</span><span class="p">(),</span> <span class="k">false</span><span class="p">);</span>                  <span class="c1">// -31
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInDays</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addMonth</span><span class="p">());</span>                         <span class="c1">// 30
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInDays</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addWeek</span><span class="p">());</span>                          <span class="c1">// 7
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInMinutes</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">59</span><span class="p">));</span>                  <span class="c1">// 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInMinutes</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">60</span><span class="p">));</span>                  <span class="c1">// 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInMinutes</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">119</span><span class="p">));</span>                 <span class="c1">// 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffInMinutes</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">120</span><span class="p">));</span>                 <span class="c1">// 2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">120</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">secondsSinceMidnight</span><span class="p">();</span>                     <span class="c1">// 120
</span></span></span></code></pre></div><h3 id="时间状态">时间状态</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isWeekday</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isWeekend</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isYesterday</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isToday</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isTomorrow</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isFuture</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isPast</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isLeapYear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">isSameDay</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="nv">$born</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">1987</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">23</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$noCake</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">26</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$yesCake</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">23</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$born</span><span class="o">-&gt;</span><span class="na">isBirthday</span><span class="p">(</span><span class="nv">$noCake</span><span class="p">));</span>              <span class="c1">// bool(false)  
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nv">$born</span><span class="o">-&gt;</span><span class="na">isBirthday</span><span class="p">(</span><span class="nv">$yesCake</span><span class="p">));</span>             <span class="c1">// bool(true)
</span></span></span></code></pre></div><h3 id="时间运算">时间运算</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="mi">2012</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">();</span>            <span class="c1">// 2012-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addYears</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>                   <span class="c1">// 2017-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addYear</span><span class="p">();</span>                     <span class="c1">// 2018-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subYear</span><span class="p">();</span>                     <span class="c1">// 2017-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subYears</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>                   <span class="c1">// 2012-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addMonths</span><span class="p">(</span><span class="mi">60</span><span class="p">);</span>                 <span class="c1">// 2017-01-31 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addMonth</span><span class="p">();</span>                    <span class="c1">// 2017-03-03 00:00:00 equivalent of $dt-&gt;month($dt-&gt;month + 1); so it wraps
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subMonth</span><span class="p">();</span>                    <span class="c1">// 2017-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subMonths</span><span class="p">(</span><span class="mi">60</span><span class="p">);</span>                 <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addDays</span><span class="p">(</span><span class="mi">29</span><span class="p">);</span>                   <span class="c1">// 2012-03-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addDay</span><span class="p">();</span>                      <span class="c1">// 2012-03-04 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subDay</span><span class="p">();</span>                      <span class="c1">// 2012-03-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subDays</span><span class="p">(</span><span class="mi">29</span><span class="p">);</span>                   <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addWeekdays</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>                <span class="c1">// 2012-02-09 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addWeekday</span><span class="p">();</span>                  <span class="c1">// 2012-02-10 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subWeekday</span><span class="p">();</span>                  <span class="c1">// 2012-02-09 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subWeekdays</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>                <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addWeeks</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>                   <span class="c1">// 2012-02-24 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addWeek</span><span class="p">();</span>                     <span class="c1">// 2012-03-02 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subWeek</span><span class="p">();</span>                     <span class="c1">// 2012-02-24 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subWeeks</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>                   <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addHours</span><span class="p">(</span><span class="mi">24</span><span class="p">);</span>                  <span class="c1">// 2012-02-04 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addHour</span><span class="p">();</span>                     <span class="c1">// 2012-02-04 01:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subHour</span><span class="p">();</span>                     <span class="c1">// 2012-02-04 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subHours</span><span class="p">(</span><span class="mi">24</span><span class="p">);</span>                  <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addMinutes</span><span class="p">(</span><span class="mi">61</span><span class="p">);</span>                <span class="c1">// 2012-02-03 01:01:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addMinute</span><span class="p">();</span>                   <span class="c1">// 2012-02-03 01:02:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subMinute</span><span class="p">();</span>                   <span class="c1">// 2012-02-03 01:01:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subMinutes</span><span class="p">(</span><span class="mi">61</span><span class="p">);</span>                <span class="c1">// 2012-02-03 00:00:00
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">61</span><span class="p">);</span>                <span class="c1">// 2012-02-03 00:01:01
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">addSecond</span><span class="p">();</span>                   <span class="c1">// 2012-02-03 00:01:02
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subSecond</span><span class="p">();</span>                   <span class="c1">// 2012-02-03 00:01:01
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">subSeconds</span><span class="p">(</span><span class="mi">61</span><span class="p">);</span>                <span class="c1">// 2012-02-03 00:00:00
</span></span></span></code></pre></div><h3 id="人类阅读时间格式">人类阅读时间格式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 通常會用在留言的時間顯示
</span></span></span><span class="line"><span class="cl"><span class="c1">// 該時間會比較與現在的時間的差異
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subDays</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">();</span>               <span class="c1">// 5 days ago
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subYear</span><span class="p">());</span>   <span class="c1">// 1 year after
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nv">$dt</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromDate</span><span class="p">(</span><span class="mi">2011</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addMonth</span><span class="p">());</span>              <span class="c1">// 1 month before
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">(</span><span class="nv">$dt</span><span class="o">-&gt;</span><span class="na">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subMonth</span><span class="p">());</span>              <span class="c1">// 1 month after
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">addSeconds</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">();</span>            <span class="c1">// 5 seconds from now
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subDays</span><span class="p">(</span><span class="mi">24</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">();</span>              <span class="c1">// 3 weeks ago
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">now</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">subDays</span><span class="p">(</span><span class="mi">24</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">diffForHumans</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>    <span class="c1">// 3 weeks
</span></span></span></code></pre></div><h3 id="时间常数">时间常数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Carbon\Carbon</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">SUNDAY</span><span class="p">);</span>                          <span class="c1">// int(0)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">MONDAY</span><span class="p">);</span>                          <span class="c1">// int(1)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">TUESDAY</span><span class="p">);</span>                         <span class="c1">// int(2)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">WEDNESDAY</span><span class="p">);</span>                       <span class="c1">// int(3)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">THURSDAY</span><span class="p">);</span>                        <span class="c1">// int(4)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">FRIDAY</span><span class="p">);</span>                          <span class="c1">// int(5)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">SATURDAY</span><span class="p">);</span>                        <span class="c1">// int(6)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">YEARS_PER_CENTURY</span><span class="p">);</span>               <span class="c1">// int(100)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">YEARS_PER_DECADE</span><span class="p">);</span>                <span class="c1">// int(10)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">MONTHS_PER_YEAR</span><span class="p">);</span>                 <span class="c1">// int(12)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">WEEKS_PER_YEAR</span><span class="p">);</span>                  <span class="c1">// int(52)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">DAYS_PER_WEEK</span><span class="p">);</span>                   <span class="c1">// int(7)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">HOURS_PER_DAY</span><span class="p">);</span>                   <span class="c1">// int(24)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">MINUTES_PER_HOUR</span><span class="p">);</span>                <span class="c1">// int(60)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">(</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">SECONDS_PER_MINUTE</span><span class="p">);</span>              <span class="c1">// int(60)
</span></span></span></code></pre></div><h3 id="参考资料">参考资料</h3>
<p><a href="https://blog.csdn.net/lbwo001/article/details/53063867">https://blog.csdn.net/lbwo001/article/details/53063867</a></p>
<ul>
<li>Carbon - A simple PHP API extension for DateTime.</li>
<li>Carbon - docs</li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>Laravel中间件👽</title>
			<link>https://blog.gookm.cn/posts/2017/20170913-laravel-middleware/</link>
			<pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170913-laravel-middleware/</guid>
			<description>如：laravel自带的用户认证如何在注册前执行中间件？
可以使用自定义中间件来解决。
大致流程：
第一步 运行Artisan 命令 make:middleware 创建新的中间件： php artisan make:middleware CheckIpIsRegistered 第二步 编写中间件 &amp;lt;?php namespace App\Http\Middleware; use Closure; class CheckIpIsRegistered { /** * 处理传入的请求 * * @param \Illuminate\Http\Request $request * @param \Closure $next * @return mixed */ public function handle($request, Closure $next) { if (false) { //添加的你逻辑 return redirect(&amp;#39;home&amp;#39;); } return $next($request); } } 第三步 再 app/Http/Kernel.php 注册中间件： protected $routeMiddleware = [ &amp;#39;auth&amp;#39; =&amp;gt; \Illuminate\Auth\Middleware\Authenticate::class, &amp;#39;auth.basic&amp;#39; =&amp;gt; \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class, &amp;#39;bindings&amp;#39; =&amp;gt; \Illuminate\Routing\Middleware\SubstituteBindings::class, &amp;#39;can&amp;#39; =&amp;gt; \Illuminate\Auth\Middleware\Authorize::class, &amp;#39;guest&amp;#39; =&amp;gt; \App\Http\Middleware\RedirectIfAuthenticated::class, &amp;#39;throttle&amp;#39; =&amp;gt; \Illuminate\Routing\Middleware\ThrottleRequests::class, &amp;#39;checkip&amp;#39; =&amp;gt; CheckIpIsRegistered::class, ]; 第四步 -添加中间件到路由</description>
			<content type="html"><![CDATA[<p>如：laravel自带的用户认证如何在注册前执行中间件？</p>
<p>可以使用自定义中间件来解决。</p>
<p><strong>大致流程：</strong></p>
<h3 id="第一步">第一步</h3>
<ul>
<li>运行Artisan 命令 make:middleware 创建新的中间件：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan make:middleware CheckIpIsRegistered
</span></span></code></pre></div><h3 id="第二步">第二步</h3>
<ul>
<li>编写中间件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App\Http\Middleware</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Closure</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">CheckIpIsRegistered</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 处理传入的请求
</span></span></span><span class="line"><span class="cl"><span class="sd">     *
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param  \Illuminate\Http\Request  $request
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @param  \Closure  $next
</span></span></span><span class="line"><span class="cl"><span class="sd">     * @return mixed
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">handle</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="nx">Closure</span> <span class="nv">$next</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="k">false</span><span class="p">)</span> <span class="p">{</span>  <span class="c1">//添加的你逻辑
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="k">return</span> <span class="nx">redirect</span><span class="p">(</span><span class="s1">&#39;home&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$next</span><span class="p">(</span><span class="nv">$request</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="第三步">第三步</h3>
<ul>
<li>再 app/Http/Kernel.php 注册中间件：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">protected</span> <span class="nv">$routeMiddleware</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;auth&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Illuminate\Auth\Middleware\Authenticate</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;auth.basic&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Illuminate\Auth\Middleware\AuthenticateWithBasicAuth</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;bindings&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Illuminate\Routing\Middleware\SubstituteBindings</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;can&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Illuminate\Auth\Middleware\Authorize</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;guest&#39;</span> <span class="o">=&gt;</span> <span class="nx">\App\Http\Middleware\RedirectIfAuthenticated</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;throttle&#39;</span> <span class="o">=&gt;</span> <span class="nx">\Illuminate\Routing\Middleware\ThrottleRequests</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;checkip&#39;</span> <span class="o">=&gt;</span> <span class="nx">CheckIpIsRegistered</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div><h3 id="第四步">第四步</h3>
<p>-添加中间件到路由</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;user/register&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">})</span><span class="o">-&gt;</span><span class="na">middleware</span><span class="p">(</span><span class="s1">&#39;checkip&#39;</span><span class="p">);</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel关联模型</title>
			<link>https://blog.gookm.cn/posts/2017/20170806-laravel-model/</link>
			<pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170806-laravel-model/</guid>
			<description>laravel关联关系
以多对多为例 一个用户有多个角色，可以是普通管理员，也可以是超级管理员
一个超级管理员也可以被多个用户拥有
多对多关联比 hasOne 和 hasMany 关联稍微复杂些。这种关联的一个例子就是具有许多角色的用户，而角色也被其他用户共享。例如，许多用户都可以有「管理员」角色。要定义这种关联，需要用到三个数据库表：users、roles 和 role_user。role_user 表是以相关联的两个模型数据表、依照字母顺序排列命名的，并且包含 user_id 和 role_id 字段。
多对多关联是通过写一个方法定义的，在方法内部调用 belongsToMany 方法并返回其结果。例如，我们在 User 模型中定义一个 roles 方法：
&amp;lt;?php namespace App; use Illuminate\Database\Eloquent\Model; class User extends Model { /** * 获得此用户的角色。 */ public function roles() { return $this-&amp;gt;belongsToMany(&amp;#39;App\Role&amp;#39;, &amp;#39;role_user&amp;#39;, &amp;#39;user_id&amp;#39;, &amp;#39;role_id&amp;#39;);//要新建好Role模型 } } 关联关系定义好后，我们就可以通过 roles 动态属性获得用户的角色了：
$roles = App\User::find(1)-&amp;gt;roles()-&amp;gt;orderBy(&amp;#39;name&amp;#39;)-&amp;gt;get(); 中间表相关：
1、获得中间表字段 $user = App\User::find(1); foreach ($user-&amp;gt;roles as $role) { echo $role-&amp;gt;pivot-&amp;gt;created_at; } 2、默认情况下，pivot 对象只包含两个关联模型的键。如果中间表里还有额外字段，则必须在定义关联时明确指出： return $this-&amp;gt;belongsToMany(&amp;#39;App\Role&amp;#39;)-&amp;gt;withPivot(&amp;#39;column1&amp;#39;, &amp;#39;column2&amp;#39;); 3、如果您想让中间表自动维护 created_at 和 updated_at 时间戳，那么在定义关联时加上 withTimestamps 方法即可： return $this-&amp;gt;belongsToMany(&amp;#39;App\Role&amp;#39;)-&amp;gt;withTimestamps(); 4、通过中间表过滤关联数据： return $this-&amp;gt;belongsToMany(&amp;#39;App\Role&amp;#39;)-&amp;gt;wherePivot(&amp;#39;approved&amp;#39;, 1); return $this-&amp;gt;belongsToMany(&amp;#39;App\Role&amp;#39;)-&amp;gt;wherePivotIn(&amp;#39;priority&amp;#39;, [1, 2]); 预加载 当作为属性访问 Eloquent 关联时，关联数据是「懒加载」的。意味着在你第一次访问该属性时，才会加载关联数据。不过，是当你查询父模型时，Eloquent 可以「预加载」关联数据。预加载避免了 N + 1 查询问题。要说明 N + 1 查询问题，试想一个 Book 模型关联到 Author 模型：</description>
			<content type="html"><![CDATA[<p><strong>laravel关联关系</strong></p>
<h3 id="以多对多为例">以多对多为例</h3>
<ul>
<li>
<p>一个用户有多个角色，可以是普通管理员，也可以是超级管理员</p>
</li>
<li>
<p>一个超级管理员也可以被多个用户拥有</p>
</li>
</ul>
<p>多对多关联比 hasOne 和 hasMany 关联稍微复杂些。这种关联的一个例子就是具有许多角色的用户，而角色也被其他用户共享。例如，许多用户都可以有「管理员」角色。要定义这种关联，需要用到三个数据库表：users、roles 和 role_user。role_user 表是以相关联的两个模型数据表、依照字母顺序排列命名的，并且包含 user_id 和 role_id 字段。</p>
<p>多对多关联是通过写一个方法定义的，在方法内部调用 belongsToMany 方法并返回其结果。例如，我们在 User 模型中定义一个 roles 方法：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Database\Eloquent\Model</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">User</span> <span class="k">extends</span> <span class="nx">Model</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 获得此用户的角色。
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">roles</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsToMany</span><span class="p">(</span><span class="s1">&#39;App\Role&#39;</span><span class="p">,</span> <span class="s1">&#39;role_user&#39;</span><span class="p">,</span> <span class="s1">&#39;user_id&#39;</span><span class="p">,</span> <span class="s1">&#39;role_id&#39;</span><span class="p">);</span><span class="c1">//要新建好Role模型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>关联关系定义好后，我们就可以通过 roles 动态属性获得用户的角色了：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$roles</span> <span class="o">=</span> <span class="nx">App\User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">roles</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span></code></pre></div><p>中间表相关：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="mi">1</span><span class="nx">、获得中间表字段</span>
</span></span><span class="line"><span class="cl"><span class="nv">$user</span> <span class="o">=</span> <span class="nx">App\User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="nv">$user</span><span class="o">-&gt;</span><span class="na">roles</span> <span class="k">as</span> <span class="nv">$role</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nv">$role</span><span class="o">-&gt;</span><span class="na">pivot</span><span class="o">-&gt;</span><span class="na">created_at</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="mi">2</span><span class="nx">、默认情况下，pivot</span> <span class="nx">对象只包含两个关联模型的键。如果中间表里还有额外字段，则必须在定义关联时明确指出：</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsToMany</span><span class="p">(</span><span class="s1">&#39;App\Role&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">withPivot</span><span class="p">(</span><span class="s1">&#39;column1&#39;</span><span class="p">,</span> <span class="s1">&#39;column2&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="mi">3</span><span class="nx">、如果您想让中间表自动维护</span> <span class="nx">created_at</span> <span class="nx">和</span> <span class="nx">updated_at</span> <span class="nx">时间戳，那么在定义关联时加上</span> <span class="nx">withTimestamps</span> <span class="nx">方法即可：</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsToMany</span><span class="p">(</span><span class="s1">&#39;App\Role&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">withTimestamps</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="mi">4</span><span class="nx">、通过中间表过滤关联数据：</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsToMany</span><span class="p">(</span><span class="s1">&#39;App\Role&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">wherePivot</span><span class="p">(</span><span class="s1">&#39;approved&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsToMany</span><span class="p">(</span><span class="s1">&#39;App\Role&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">wherePivotIn</span><span class="p">(</span><span class="s1">&#39;priority&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]);</span>
</span></span></code></pre></div><h3 id="预加载">预加载</h3>
<p>当作为属性访问 Eloquent 关联时，关联数据是「懒加载」的。意味着在你第一次访问该属性时，才会加载关联数据。不过，是当你查询父模型时，Eloquent 可以「预加载」关联数据。预加载避免了 N + 1 查询问题。要说明 N + 1 查询问题，试想一个 Book 模型关联到 Author 模型：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">namespace</span> <span class="nx">App</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Database\Eloquent\Model</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Book</span> <span class="k">extends</span> <span class="nx">Model</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="sd">/**
</span></span></span><span class="line"><span class="cl"><span class="sd">     * 获得此书的作者。
</span></span></span><span class="line"><span class="cl"><span class="sd">     */</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span> <span class="k">function</span> <span class="nf">author</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">belongsTo</span><span class="p">(</span><span class="s1">&#39;App\Author&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>现在，让我们来获得所有书籍和作者数据：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span> <span class="o">=</span> <span class="nx">App\Book</span><span class="o">::</span><span class="na">all</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="nv">$books</span> <span class="k">as</span> <span class="nv">$book</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nv">$book</span><span class="o">-&gt;</span><span class="na">author</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>这个循环会运行一次查询取回所有数据表上的书籍数据，然后又运行一次查询获得每本书的作者数据。如果我们有 25 本书，则循环就会执行 26 次查询：1 次是获得所有书籍数据，另外 25 条查询用来获得每本书的作者数据。</p>
<p>谢天谢地，我们使用预加载让整个查询减少到 2 次。这是通过指定关联给 with 方法办到的：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span> <span class="o">=</span> <span class="nx">App\Book</span><span class="o">::</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;author&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">foreach</span> <span class="p">(</span><span class="nv">$books</span> <span class="k">as</span> <span class="nv">$book</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nv">$book</span><span class="o">-&gt;</span><span class="na">author</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>整个操作，只执行了两条查询：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">books</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">authors</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="p">...)</span><span class="w">
</span></span></span></code></pre></div><h3 id="预加载相关">预加载相关</h3>
<p>1、预加载多个关联：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span> <span class="o">=</span> <span class="nx">App\Book</span><span class="o">::</span><span class="na">with</span><span class="p">([</span><span class="s1">&#39;author&#39;</span><span class="p">,</span> <span class="s1">&#39;publisher&#39;</span><span class="p">])</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span></code></pre></div><p>2、预加载嵌套关联，可以使用「点」语法。例如，在一个 Eloquent 语句中，预加载所有书籍作者和这些作者的联系信息：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span> <span class="o">=</span> <span class="nx">App\Book</span><span class="o">::</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;author.contacts&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span></code></pre></div><p>3、为预加载添加约束条件：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$users</span> <span class="o">=</span> <span class="nx">App\User</span><span class="o">::</span><span class="na">with</span><span class="p">([</span><span class="s1">&#39;posts&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$query</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="s1">&#39;like&#39;</span><span class="p">,</span> <span class="s1">&#39;%first%&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}])</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span></code></pre></div><p>4、延迟预加载。有时，您可能需要在获得父级模型后才去预加载关联数据。例如，当你需要来动态决定是否加载关联模型时，这可能很有帮助：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span> <span class="o">=</span> <span class="nx">App\Book</span><span class="o">::</span><span class="na">all</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$someCondition</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$books</span><span class="o">-&gt;</span><span class="na">load</span><span class="p">(</span><span class="s1">&#39;author&#39;</span><span class="p">,</span> <span class="s1">&#39;publisher&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>如果您想设置预加载查询的额外约束条件，可以通过给 load 添加数组键的形式达到目的，数组值是接收查询实例的闭包：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$books</span><span class="o">-&gt;</span><span class="na">load</span><span class="p">([</span><span class="s1">&#39;author&#39;</span> <span class="o">=&gt;</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$query</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;published_date&#39;</span><span class="p">,</span> <span class="s1">&#39;asc&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}]);</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Nginx与PHP交互🐤</title>
			<link>https://blog.gookm.cn/posts/2017/20170721-nginx-php/</link>
			<pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170721-nginx-php/</guid>
			<description>定义CGI，FastCGI，PHP-FPM 1. 什么是CGI？ &amp;gt;CGI是一种通用网关协议。为了解决不同的语言解释器(如php、python解释器)与WebServer的通信而产生的一种协议。只要遵守这种协议就能实现语言与WebServer通讯。CGI是规定了要传什么数据／以什么格式传输给php解析器的协议。 2. 什么是FastCGI? &amp;gt;是一种对CGI协议升华的一种协议。FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute 模式)。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。。 3. 什么是PHP-FPM? &amp;gt;(PHP FastCGI Process Manager)，PHP-FPM是一个实现了Fastcgi协议的程序,用来管理Fastcgi起的进程的,即能够调度php-cgi进程的程序。并提供了进程管理的功能。进程包含 master 进程和 worker 进程两种进程。master进程只有一个，负责监听端口(默认9000)，接收来自 WebServer的请求，而 worker 进程则一般有多个(具体数量根据实际需要配置)，每个进程内部都嵌入了一个 PHP 解释器，是PHP代码真正执行的地方。 4. FastCGI好在哪里？ &amp;gt;Fastcgi则会先fork一个master，解析配置文件，初始化执行环境，然后再fork多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是Fastcgi的对进程的管理。大多数Fastcgi实现都会维护一个进程池。注：swoole作为httpserver，实际上也是类似这样的工作方式。 Nginx与PHP交互过程 我们以用户访问index.php为，服务器环境为LNMP: 1. 用户请求index.php时，首先到Nginx 2.Nginx流程步骤： - 根据配置查找路由 - 加载nginx的fast-cgi模块(FastCGI的Client),将根据fastcgi.conf文件中fastcgi_*配置参数值也一并加入转发任务中 - 根据nginx.conf文件fastcgi_pass配置将请求转发到127.0.0.1:9000。 3.PHP-FPM操作： - PHP-FPM的master进程监听9000端口。 - 收到请求后调用子进程来处理逻辑，PHP解释器解释PHP语法并返回给Nginx。 4.Nginx操作： - 将响应返回给用户 </description>
			<content type="html"><![CDATA[<h3 id="定义cgifastcgiphp-fpm">定义CGI，FastCGI，PHP-FPM</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 什么是CGI？
</span></span><span class="line"><span class="cl">   &gt;CGI是一种通用网关协议。为了解决不同的语言解释器(如php、python解释器)与WebServer的通信而产生的一种协议。只要遵守这种协议就能实现语言与WebServer通讯。CGI是规定了要传什么数据／以什么格式传输给php解析器的协议。
</span></span><span class="line"><span class="cl">2. 什么是FastCGI?
</span></span><span class="line"><span class="cl">   &gt;是一种对CGI协议升华的一种协议。FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute 模式)。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。。
</span></span><span class="line"><span class="cl">3. 什么是PHP-FPM?
</span></span><span class="line"><span class="cl">   &gt;(PHP FastCGI Process Manager)，PHP-FPM是一个实现了Fastcgi协议的程序,用来管理Fastcgi起的进程的,即能够调度php-cgi进程的程序。并提供了进程管理的功能。进程包含 master 进程和 worker 进程两种进程。master进程只有一个，负责监听端口(默认9000)，接收来自 WebServer的请求，而 worker 进程则一般有多个(具体数量根据实际需要配置)，每个进程内部都嵌入了一个 PHP 解释器，是PHP代码真正执行的地方。
</span></span><span class="line"><span class="cl">4. FastCGI好在哪里？
</span></span><span class="line"><span class="cl">   &gt;Fastcgi则会先fork一个master，解析配置文件，初始化执行环境，然后再fork多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是Fastcgi的对进程的管理。大多数Fastcgi实现都会维护一个进程池。注：swoole作为httpserver，实际上也是类似这样的工作方式。
</span></span></code></pre></div><h3 id="nginx与php交互过程">Nginx与PHP交互过程</h3>
<ul>
<li>我们以用户访问index.php为，服务器环境为LNMP:</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1. 用户请求index.php时，首先到Nginx
</span></span><span class="line"><span class="cl">2.Nginx流程步骤：
</span></span><span class="line"><span class="cl">   - 根据配置查找路由
</span></span><span class="line"><span class="cl">   - 加载nginx的fast-cgi模块(FastCGI的Client),将根据fastcgi.conf文件中fastcgi_*配置参数值也一并加入转发任务中
</span></span><span class="line"><span class="cl">   - 根据nginx.conf文件fastcgi_pass配置将请求转发到127.0.0.1:9000。
</span></span><span class="line"><span class="cl">3.PHP-FPM操作：
</span></span><span class="line"><span class="cl">   - PHP-FPM的master进程监听9000端口。
</span></span><span class="line"><span class="cl">   - 收到请求后调用子进程来处理逻辑，PHP解释器解释PHP语法并返回给Nginx。
</span></span><span class="line"><span class="cl">4.Nginx操作：
</span></span><span class="line"><span class="cl">   - 将响应返回给用户
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Guzzle基本使用</title>
			<link>https://blog.gookm.cn/posts/2017/20170702-guzzle-basic/</link>
			<pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170702-guzzle-basic/</guid>
			<description>Guzzle是一个PHP的HTTP客户端，用来轻而易举地发送请求，并集成到我们的WEB服务上。 类似于curl发送http请求的类。
Guzzle官方文档
安装Guzzle 使用composer安装
php composer.phar require guzzlehttp/guzzle:~6.0 或者编辑项目的composer.json文件，添加Guzzle作为依赖
{ &amp;#34;require&amp;#34;: { &amp;#34;guzzlehttp/guzzle&amp;#34;: &amp;#34;~6.0&amp;#34; } } 执行 composer update Guzzle基本使用 发送请求 use GuzzleHttp\Client; $client = new Client([ // Base URI is used with relative requests &amp;#39;base_uri&amp;#39; =&amp;gt; &amp;#39;http://httpbin.org&amp;#39;, // You can set any number of default request options. &amp;#39;timeout&amp;#39; =&amp;gt; 2.0, ]); $response = $client-&amp;gt;get(&amp;#39;http://httpbin.org/get&amp;#39;); $response = $client-&amp;gt;delete(&amp;#39;http://httpbin.org/delete&amp;#39;); $response = $client-&amp;gt;head(&amp;#39;http://httpbin.org/get&amp;#39;); $response = $client-&amp;gt;options(&amp;#39;http://httpbin.org/get&amp;#39;); $response = $client-&amp;gt;patch(&amp;#39;http://httpbin.org/patch&amp;#39;); $response = $client-&amp;gt;post(&amp;#39;http://httpbin.</description>
			<content type="html"><![CDATA[<blockquote>
<p>Guzzle是一个PHP的HTTP客户端，用来轻而易举地发送请求，并集成到我们的WEB服务上。
类似于curl发送http请求的类。</p>
</blockquote>
<p><a href="https://guzzle-cn.readthedocs.io/zh_CN/latest/quickstart.html">Guzzle官方文档</a></p>
<h3 id="安装guzzle">安装Guzzle</h3>
<p>使用composer安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php composer.phar require guzzlehttp/guzzle:~6.0
</span></span></code></pre></div><p>或者编辑项目的composer.json文件，添加Guzzle作为依赖</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;require&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;guzzlehttp/guzzle&#34;</span><span class="p">:</span> <span class="s2">&#34;~6.0&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>执行 composer update</li>
</ul>
<h3 id="guzzle基本使用">Guzzle基本使用</h3>
<ul>
<li>发送请求</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">GuzzleHttp\Client</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">([</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Base URI is used with relative requests
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;base_uri&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;http://httpbin.org&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// You can set any number of default request options.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;timeout&#39;</span>  <span class="o">=&gt;</span> <span class="mf">2.0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">]);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/get&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/delete&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">head</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/get&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">options</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/get&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">patch</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/patch&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/post&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/put&#39;</span><span class="p">);</span>
</span></span></code></pre></div><ul>
<li>设置查询字符串</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;http://httpbin.org?foo=bar&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>或使用 query 请求参数来声明查询字符串参数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;http://httpbin.org&#39;</span><span class="p">,</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;query&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;foo&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">]);</span>
</span></span></code></pre></div><ul>
<li>设置POST表单</li>
</ul>
<p>传入 form_params 数组参数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="s1">&#39;http://httpbin.org/post&#39;</span><span class="p">,</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;form_params&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;field_name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;abc&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;other_field&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;123&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;nested_field&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;nested&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;hello&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">]);</span>
</span></span></code></pre></div><ul>
<li>使用响应</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">### 状态码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$code</span> <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getStatusCode</span><span class="p">();</span> <span class="c1">// 200
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$reason</span> <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getReasonPhrase</span><span class="p">();</span> <span class="c1">// OK
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">### header
</span></span></span><span class="line"><span class="cl"><span class="c1">// Check if a header exists.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">hasHeader</span><span class="p">(</span><span class="s1">&#39;Content-Length&#39;</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="s2">&#34;It exists&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Get a header from the response.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getHeader</span><span class="p">(</span><span class="s1">&#39;Content-Length&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Get all of the response headers.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">foreach</span> <span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getHeaders</span><span class="p">()</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&gt;</span> <span class="nv">$values</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">echo</span> <span class="nv">$name</span> <span class="o">.</span> <span class="s1">&#39;: &#39;</span> <span class="o">.</span> <span class="nx">implode</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">,</span> <span class="nv">$values</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&#34;</span><span class="se">\r\n</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="响应体">响应体</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$body</span> <span class="o">=</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Implicitly cast the body to a string and echo it
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">echo</span> <span class="nv">$body</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Explicitly cast the body to a string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$stringBody</span> <span class="o">=</span> <span class="p">(</span><span class="nx">string</span><span class="p">)</span> <span class="nv">$body</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Read 10 bytes from the body
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$tenBytes</span> <span class="o">=</span> <span class="nv">$body</span><span class="o">-&gt;</span><span class="na">read</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Read the remaining contents of the body as a string
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$remainingBytes</span> <span class="o">=</span> <span class="nv">$body</span><span class="o">-&gt;</span><span class="na">getContents</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="简单案例">简单案例</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">GuzzleHttp\Client</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//use GuzzleHttp\Psr7\Request;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    
</span></span><span class="line"><span class="cl"><span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$request</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span><span class="s1">&#39;http://xxxx.com/test&#39;</span><span class="p">,[</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;query&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">&#39;key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;f66748648e4deddcba65ad9504776b74&#39;</span> <span class="p">,</span> <span class="s1">&#39;v&#39;</span> <span class="o">=&gt;</span> <span class="mf">1.0</span> <span class="p">,</span> <span class="s1">&#39;month&#39;</span> <span class="o">=&gt;</span> <span class="mi">11</span> <span class="p">,</span> <span class="s1">&#39;day&#39;</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">]);</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">public</span> <span class="k">function</span> <span class="nf">decoding</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$cipher</span><span class="o">=</span><span class="nv">$request</span><span class="o">-&gt;</span><span class="na">decode_value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$res</span><span class="o">=</span><span class="nx">Md5</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;cipher&#39;</span><span class="p">,</span><span class="nv">$cipher</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;plain&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$res</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$plain</span><span class="o">=</span><span class="nv">$res</span><span class="p">[</span><span class="s1">&#39;0&#39;</span><span class="p">][</span><span class="s1">&#39;plain&#39;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$url</span><span class="o">=</span><span class="s2">&#34;http://www.test.com/do.php?c=Api&amp;m=crack&amp;uid=&#34;</span><span class="o">.</span><span class="nv">$uid</span><span class="o">.</span><span class="s2">&#34;&amp;token=&#34;</span><span class="o">.</span><span class="nv">$token</span><span class="o">.</span><span class="s2">&#34;&amp;cipher=&#34;</span><span class="o">.</span><span class="nv">$cipher</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$request</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$result</span> <span class="o">=</span> <span class="nx">json_decode</span><span class="p">(</span><span class="nv">$result</span><span class="p">,</span><span class="k">true</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>PHPStorm中使用FTP功能步骤🍔</title>
			<link>https://blog.gookm.cn/posts/2017/20170611-phpstorm-ftp/</link>
			<pubDate>Sun, 11 Jun 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170611-phpstorm-ftp/</guid>
			<description>phpStorm中使用FTP功能步骤
PHPStorm拥有FTP功能，因此无需下载其他FTP软件
FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：&amp;ldquo;下载&amp;rdquo;（Download）和&amp;quot;上传&amp;quot;（Upload）。&amp;ldquo;下载&amp;quot;文件就是从远程主机拷贝文件至自己的计算机上；&amp;ldquo;上传&amp;quot;文件就是将文件从自己的计算机中拷贝至远程主机上。用通俗语言来说，用户可通过客户机程序向远程主机上传文件或者从远程主机下载文件。
第一步 找到头部的工具栏，点击 Tool（工具），选择 Deployment下的 Configuration... 第二步 点击左上角的 + 号，添加一个 web server，在弹窗中填写相关信息 第三步 填写 Host、Port、User Name、Password 等信息，与服务器链接 第四步 切换到 Mappings，选择根路径 </description>
			<content type="html"><![CDATA[<p>phpStorm中使用FTP功能步骤</p>
<p><strong>PHPStorm拥有FTP功能，因此无需下载其他FTP软件</strong></p>
<blockquote>
<p>FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：&ldquo;下载&rdquo;（Download）和&quot;上传&quot;（Upload）。&ldquo;下载&quot;文件就是从远程主机拷贝文件至自己的计算机上；&ldquo;上传&quot;文件就是将文件从自己的计算机中拷贝至远程主机上。用通俗语言来说，用户可通过客户机程序向远程主机上传文件或者从远程主机下载文件。</p>
</blockquote>
<h3 id="第一步">第一步</h3>
<ul>
<li>找到头部的工具栏，点击 <code>Tool（工具）</code>，选择 <code>Deployment</code>下的 <code>Configuration...</code></li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2017/20170611-phpstorm-ftp01.jpg" alt="图一"></p>
<h3 id="第二步">第二步</h3>
<ul>
<li>点击左上角的 <code>+</code> 号，添加一个 <code>web server</code>，在弹窗中填写相关信息</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2017/20170611-phpstorm-ftp02.jpg" alt="图二"></p>
<h3 id="第三步">第三步</h3>
<ul>
<li>填写 <code>Host</code>、<code>Port</code>、<code>User Name</code>、<code>Password</code> 等信息，与服务器链接</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2017/20170611-phpstorm-ftp03.jpg" alt="图三"></p>
<h3 id="第四步">第四步</h3>
<ul>
<li>切换到 <code>Mappings</code>，选择根路径</li>
</ul>
<p><img src="https://qiniu.zkilm.cn/blog/posts/2017/20170611-phpstorm-ftp04.jpg" alt="图四"></p>
]]></content>
		</item>
		
		<item>
			<title>Laravel操作上传文件的方法</title>
			<link>https://blog.gookm.cn/posts/2017/20170604-laravel-upload/</link>
			<pubDate>Sun, 04 Jun 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170604-laravel-upload/</guid>
			<description>1、获取上传的文件
$file = $request-&amp;gt;file(&amp;#39;file&amp;#39;); 2、获取上传文件的文件名（带后缀，如test.png）
$filename = $file-&amp;gt;getClientOriginalName(); 3、获取上传文件的后缀（如test.png，获取到的为png）
$fileextension = $file-&amp;gt;getClientOriginalExtension(); 4、获取上传文件的大小
$filesize = $file-&amp;gt;getClientSize(); 5、获取缓存在tmp目录下的文件名（带后缀，如php1234.tmp）
$filaname = $file-&amp;gt;getFilename(); 6、获取上传的文件缓存在tmp文件夹下的绝对路径
$realpath = $file-&amp;gt;getRealPath(); 7、将缓存在tmp目录下的文件移到某个位置，返回的是这个文件移动过后的路径
$path = $file-&amp;gt;move(path,newname); //move()方法有两个参数，第一个参数是文件移到哪个文件夹下的路径，第二个参数是将上传的文件重新命名的文件名 8、检测上传的文件是否合法，返回值为true或false
$file-&amp;gt;isValid() </description>
			<content type="html"><![CDATA[<p>1、获取上传的文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$file</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">file</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">);</span>
</span></span></code></pre></div><p>2、获取上传文件的文件名（带后缀，如test.png）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$filename</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">getClientOriginalName</span><span class="p">();</span>
</span></span></code></pre></div><p>3、获取上传文件的后缀（如test.png，获取到的为png）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$fileextension</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">getClientOriginalExtension</span><span class="p">();</span>
</span></span></code></pre></div><p>4、获取上传文件的大小</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$filesize</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">getClientSize</span><span class="p">();</span>
</span></span></code></pre></div><p>5、获取缓存在tmp目录下的文件名（带后缀，如php1234.tmp）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$filaname</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">getFilename</span><span class="p">();</span>
</span></span></code></pre></div><p>6、获取上传的文件缓存在tmp文件夹下的绝对路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$realpath</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">getRealPath</span><span class="p">();</span>
</span></span></code></pre></div><p>7、将缓存在tmp目录下的文件移到某个位置，返回的是这个文件移动过后的路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$path</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">move</span><span class="p">(</span><span class="nx">path</span><span class="p">,</span><span class="nx">newname</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">//move()方法有两个参数，第一个参数是文件移到哪个文件夹下的路径，第二个参数是将上传的文件重新命名的文件名
</span></span></span></code></pre></div><p>8、检测上传的文件是否合法，返回值为true或false</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$file</span><span class="o">-&gt;</span><span class="na">isValid</span><span class="p">()</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel学习笔记（四）🍖</title>
			<link>https://blog.gookm.cn/posts/2017/20170527-laravel-study04/</link>
			<pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170527-laravel-study04/</guid>
			<description>以下都是个人在学习或是工作中的部分记录：
laravel连表额外添加条件 Product::query()-&amp;gt;from(&amp;#39;products as p&amp;#39;) -&amp;gt;leftJoin(&amp;#39;user_has_products as uhp&amp;#39;, function ($join){ $join-&amp;gt;on(&amp;#39;p.id&amp;#39;, &amp;#39;=&amp;#39;, &amp;#39;uhp.product_id&amp;#39;)-&amp;gt;where(&amp;#39;uhp.user_role&amp;#39;,&amp;#39;=&amp;#39;,&amp;#39;1&amp;#39;); }) laravel中的多条件 Notice::where([&amp;#39;cate&amp;#39;=&amp;gt;2,&amp;#39;is_show&amp;#39;=&amp;gt;1]) laravel carbon 时间戳转日期 $date=Carbon::createFromTimestamp(&amp;#34;时间戳&amp;#34;)-&amp;gt;toDateTimeString() ; //获取昨天的时间戳 $ts = Carbon::yesterday()-&amp;gt;timestamp; laravel时区设置 config/app.php //协调世界时(UTC, Universal Time Coordinated)，又称世界统一时间，世界标准时间，国际协调时间。 &amp;#39;timezone&amp;#39; =&amp;gt; &amp;#39;UTC&amp;#39;,//// //中国标准时间 &amp;#39;timezone&amp;#39; =&amp;gt; &amp;#39;PRC&amp;#39;, laravel中自带bootstrap的字体路径 //(解决找不到glyphicons-halflings-regular.woff问题) vendor-&amp;gt;phpunit-&amp;gt;php-code-coverage-&amp;gt;src-&amp;gt;Report-&amp;gt;Html-&amp;gt;Renderer-&amp;gt;Template-&amp;gt;fonts //找不到fontawesome-webfont.woff及？v=4.2.0问题 下载地址（http://www.xz7.com/dir/329345.html），更改相应js代码可将？后部分去掉，因为文件不能带&amp;#39;?&amp;#39;等字符 线上服务器执行 composer du 报错 [Symfony\Component\Process\Exception\RuntimeException] The Process class relies on proc_open, which is not available on your PHP installation. 解决办法： 修改php.ini配置文件，并搜索disable_functions指令，找到类似如下内容： disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_get_status,proc_open，popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server 找到proc_open并删除即可。 执行composer artisan config clear 后项目运行报错或执行php artisan报错 Uncaught ReflectionException: Class config does not exist in /www/wwwroot/larabbs/vendor/laravel/framework/src/Illuminate/Container/Container.</description>
			<content type="html"><![CDATA[<p><strong>以下都是个人在学习或是工作中的部分记录：</strong></p>
<h3 id="laravel连表额外添加条件">laravel连表额外添加条件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Product</span><span class="o">::</span><span class="na">query</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;products as p&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">-&gt;</span><span class="na">leftJoin</span><span class="p">(</span><span class="s1">&#39;user_has_products as uhp&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$join</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$join</span><span class="o">-&gt;</span><span class="na">on</span><span class="p">(</span><span class="s1">&#39;p.id&#39;</span><span class="p">,</span> <span class="s1">&#39;=&#39;</span><span class="p">,</span> <span class="s1">&#39;uhp.product_id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;uhp.user_role&#39;</span><span class="p">,</span><span class="s1">&#39;=&#39;</span><span class="p">,</span><span class="s1">&#39;1&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span></code></pre></div><h3 id="laravel中的多条件">laravel中的多条件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Notice</span><span class="o">::</span><span class="na">where</span><span class="p">([</span><span class="s1">&#39;cate&#39;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span><span class="s1">&#39;is_show&#39;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">])</span>
</span></span></code></pre></div><h3 id="laravel-carbon-时间戳转日期">laravel carbon 时间戳转日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$date</span><span class="o">=</span><span class="nx">Carbon</span><span class="o">::</span><span class="na">createFromTimestamp</span><span class="p">(</span><span class="s2">&#34;时间戳&#34;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">toDateTimeString</span><span class="p">()</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">//获取昨天的时间戳
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$ts</span> <span class="o">=</span> <span class="nx">Carbon</span><span class="o">::</span><span class="na">yesterday</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">timestamp</span><span class="p">;</span>
</span></span></code></pre></div><h3 id="laravel时区设置">laravel时区设置</h3>
<ul>
<li><code>config/app.php</code></li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//协调世界时(UTC, Universal Time Coordinated)，又称世界统一时间，世界标准时间，国际协调时间。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="s1">&#39;timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;UTC&#39;</span><span class="p">,</span><span class="c1">////
</span></span></span><span class="line"><span class="cl"><span class="c1">//中国标准时间
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="s1">&#39;timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;PRC&#39;</span><span class="p">,</span>
</span></span></code></pre></div><h3 id="laravel中自带bootstrap的字体路径">laravel中自带bootstrap的字体路径</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">//(解决找不到glyphicons-halflings-regular.woff问题)
</span></span><span class="line"><span class="cl">vendor-&gt;phpunit-&gt;php-code-coverage-&gt;src-&gt;Report-&gt;Html-&gt;Renderer-&gt;Template-&gt;fonts
</span></span><span class="line"><span class="cl">//找不到fontawesome-webfont.woff及？v=4.2.0问题
</span></span><span class="line"><span class="cl">下载地址（http://www.xz7.com/dir/329345.html），更改相应js代码可将？后部分去掉，因为文件不能带&#39;?&#39;等字符
</span></span></code></pre></div><h3 id="线上服务器执行-composer-du-报错">线上服务器执行 composer du 报错</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[Symfony\Component\Process\Exception\RuntimeException]                       
</span></span><span class="line"><span class="cl">The Process class relies on proc_open, which is not available on your PHP installation. 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">解决办法：
</span></span><span class="line"><span class="cl">修改php.ini配置文件，并搜索disable_functions指令，找到类似如下内容：
</span></span><span class="line"><span class="cl">disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_get_status,proc_open，popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server
</span></span><span class="line"><span class="cl">找到proc_open并删除即可。
</span></span></code></pre></div><h3 id="执行composer-artisan-config-clear-后项目运行报错或执行php-artisan报错">执行composer artisan config clear 后项目运行报错或执行php artisan报错</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Uncaught ReflectionException: Class config does not exist in /www/wwwroot/larabbs/vendor/laravel/framework/src/Illuminate/Container/Container.php
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">解决方法就是删除bootstrap/cache/config.php文件；或者检测你的.env文件是否含有空格
</span></span></code></pre></div><h3 id="当本地项目邮箱可以发送线上却报报错">当本地项目邮箱可以发送，线上却报报错</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Connection could not be established with host smtp.qq.com [Connection timed out #110]
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">此时可以将MAIL_PORT=25 改为MAIL_PORT=587,换个端口试试
</span></span></code></pre></div><h3 id="laravel多次排序--orderby">laravel多次排序  orderBy</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">return</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;order&#39;</span><span class="p">,</span><span class="s1">&#39;desc&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">orderBy</span><span class="p">(</span><span class="s1">&#39;updated_at&#39;</span><span class="p">,</span> <span class="s1">&#39;desc&#39;</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="注册用户名-正则验证">注册用户名 正则验证</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string|between:3,25|regex:/^[A-Za-z0-9\-\_\x{4e00}-\x{9fa5}]+$/u|unique:users,name,&#39;</span> <span class="o">.</span> <span class="nx">Auth</span><span class="o">::</span><span class="na">id</span><span class="p">(),</span>
</span></span></code></pre></div><h3 id="laravel使用save或update更新数据时created_at和updated_at-字段都更新问题">laravel使用save()或update()更新数据时，created_at和updated_at 字段都更新问题：</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">timestamp</span><span class="p">(</span><span class="s1">&#39;created_at&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">useCurrent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span><span class="o">-&gt;</span><span class="na">timestamp</span><span class="p">(</span><span class="s1">&#39;updated_at&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">useCurrent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="nx">也可将</span> <span class="nx">设计表时的</span> <span class="nx">更具当前时间戳更新</span> <span class="nx">关闭</span>
</span></span></code></pre></div><h3 id="消息通知邮件数据库">消息通知（邮件，数据库）</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//Observers/ReplyObserver.php
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">public</span> <span class="k">function</span> <span class="nf">created</span><span class="p">(</span><span class="nx">Reply</span> <span class="nv">$reply</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$topic</span><span class="o">=</span><span class="nv">$reply</span><span class="o">-&gt;</span><span class="na">topic</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$topic</span><span class="o">-&gt;</span><span class="na">increment</span><span class="p">(</span><span class="s1">&#39;reply_count&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nx">preg_match_all</span><span class="p">(</span><span class="s1">&#39;/@(.*?) /&#39;</span><span class="p">,</span><span class="nv">$reply</span><span class="o">-&gt;</span><span class="na">content</span><span class="p">,</span><span class="nv">$userName</span><span class="p">)){</span>
</span></span><span class="line"><span class="cl">         <span class="nv">$atUsers</span><span class="o">=</span><span class="nv">$userName</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$users</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">whereIn</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span><span class="nv">$atUsers</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;!=&#39;</span><span class="p">,</span><span class="nx">Auth</span><span class="o">::</span><span class="na">id</span><span class="p">())</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Notification</span><span class="o">::</span><span class="na">send</span><span class="p">(</span><span class="nv">$users</span><span class="p">,</span> <span class="k">new</span> <span class="nx">TopicReplied</span><span class="p">(</span><span class="nv">$reply</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 通知作者话题被回复了
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nv">$topic</span><span class="o">-&gt;</span><span class="na">user</span><span class="o">-&gt;</span><span class="na">notify</span><span class="p">(</span><span class="k">new</span> <span class="nx">TopicReplied</span><span class="p">(</span><span class="nv">$reply</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="laravel-自建全局辅助函数">laravel 自建全局辅助函数</h3>
<ul>
<li>在composer.json中的autoload下增加如下代码加载自动文件</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s2">&#34;autoload&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;classmap&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;database&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;psr-4&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;App</span><span class="se">\\</span><span class="s2">&#34;</span><span class="o">:</span> <span class="s2">&#34;app/&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;files&#34;</span><span class="o">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;app/helpers/functions.php&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span></code></pre></div><ul>
<li>然后执行composer命令让其自动加载：composer dump-auto    composer du</li>
</ul>
<h3 id="composer--install--报错">composer  install  报错</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Your requirements could not be resolved to an installable set of packages.
</span></span><span class="line"><span class="cl">提示我的PHP 7版本太高，不符合composer.json需要的版本，但是在PHP 7下应该也是可以运行的，composer可以设置忽略版本匹配，命令是：
</span></span><span class="line"><span class="cl">composerinstall --ignore-platform-reqs
</span></span></code></pre></div><h3 id="禁止更新数据表的默认时间字段created_at-updated_at">禁止更新数据表的默认时间字段created_at updated_at</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">在对应模型文件头部    如：
</span></span><span class="line"><span class="cl">Models\User.php
</span></span><span class="line"><span class="cl">public $timestamps=false;
</span></span></code></pre></div><h3 id="用postman修改数据">用postman修改数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">在用postman修改数据时，用的patch请求，但要注意，不能用form-data格式去传参了，而要用x-www-form-urlencoded
</span></span></code></pre></div><h3 id="laravel插入数据并返回成功数据id">laravel插入数据并返回成功数据id</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$id</span><span class="o">=</span><span class="nx">Photo</span><span class="o">::</span><span class="na">insertGetId</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
</span></span></code></pre></div><h3 id="laravel模型选取指定字段数据">laravel模型选取指定字段数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$allSources</span> <span class="o">=</span> <span class="nx">HouseSource</span><span class="o">::</span><span class="na">with</span><span class="p">([</span><span class="s1">&#39;poi&#39;</span><span class="o">=&gt;</span><span class="k">function</span> <span class="p">(</span><span class="nv">$query</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;house_source_id&#39;</span><span class="p">,</span><span class="s1">&#39;poi_id&#39;</span><span class="p">,</span><span class="s1">&#39;name&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}])</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;type&#39;</span><span class="p">,</span><span class="s1">&#39;!=&#39;</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">([</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;lng&#39;</span><span class="p">,</span><span class="s1">&#39;lat&#39;</span><span class="p">,</span><span class="s1">&#39;type&#39;</span><span class="p">]);</span>
</span></span></code></pre></div><h3 id="laravel排除关联模型为空的数据-has">laravel排除关联模型为空的数据 has</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// 获得所有至少有一条评论的文章...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$posts</span> <span class="o">=</span> <span class="nx">App\Post</span><span class="o">::</span><span class="na">has</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 获得所有至少有一条评论内容满足 foo% 条件的文章
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$posts</span> <span class="o">=</span> <span class="nx">Post</span><span class="o">::</span><span class="na">whereHas</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$query</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;content&#39;</span><span class="p">,</span> <span class="s1">&#39;like&#39;</span><span class="p">,</span> <span class="s1">&#39;foo%&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span></span></code></pre></div><h3 id="可以在应用程序的任何位置使用全局-config-函数来访问配置值">可以在应用程序的任何位置使用全局 config 函数来访问配置值</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$value</span> <span class="o">=</span> <span class="nx">config</span><span class="p">(</span><span class="s1">&#39;app.timezone&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">//运行时设置配置值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">config</span><span class="p">([</span><span class="s1">&#39;app.timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;America/Chicago&#39;</span><span class="p">]);</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel学习笔记（三）</title>
			<link>https://blog.gookm.cn/posts/2017/20170520-laravel-study03/</link>
			<pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170520-laravel-study03/</guid>
			<description>git命令 git add -A git commit -m &amp;#34;Add captcha&amp;#34; git push origin master git clean -f -d 命令 git clean 作用是清理项目，-f 是强制清理文件的设置，-d 选项命令连文件夹一并清除 git status Not a git repository错误解决方法 ： 运行git init就可以了 error: src refspec master does not match any. error: failed to push some refs to &amp;#39;git@github.com:zhukang0704/larabbs02.git&amp;#39; 本地仓库为空 解决办法：git add -A git commit -m &amp;#34;init files&amp;#34; Warning: Permanently added the RSA host key for IP address &amp;#39;13.250.177.223&amp;#39; to the list of known hosts.</description>
			<content type="html"><![CDATA[<h3 id="git命令">git命令</h3>
<pre tabindex="0"><code class="language-git" data-lang="git">git add -A
git commit -m &#34;Add captcha&#34;
git push origin master
git clean -f -d
命令 git clean 作用是清理项目，-f 是强制清理文件的设置，-d 选项命令连文件夹一并清除
git status


Not a git repository错误解决方法  ： 运行git init就可以了


error: src refspec master does not match any.
error: failed to push some refs to &#39;git@github.com:zhukang0704/larabbs02.git&#39;
本地仓库为空
解决办法：git add -A          git commit -m &#34;init files&#34;


Warning: Permanently added the RSA host key for IP address &#39;13.250.177.223&#39; to the list of known hosts.
提示使用 git pull 之后在 push
git pull --rebase origin master
git push -u origin master
</code></pre><h3 id="homestead常用">homestead常用</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.运行 Laravel Mix      npm run watch-poll
</span></span><span class="line"><span class="cl">2.启动 Homestead        vagrant up   vagrant ssh  exit   vagrant halt
</span></span><span class="line"><span class="cl">3.vagrant provision 是命令 Vagrant 重新加载 Homestead.yaml 配置；
</span></span><span class="line"><span class="cl">  vagrant reload 是重启虚拟机使更改生效。
</span></span></code></pre></div><h3 id="样式调整运行laravel-mix">样式调整,运行Laravel Mix</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">方法1
</span></span><span class="line"><span class="cl">    yarn config set registry https://registry.npm.taobao.org
</span></span><span class="line"><span class="cl">    yarn install
</span></span><span class="line"><span class="cl">    npm run watch-poll
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">方法2
</span></span><span class="line"><span class="cl">    rm -rf node_modules
</span></span><span class="line"><span class="cl">    yarn config set registry http://registry.cnpmjs.org
</span></span><span class="line"><span class="cl">    yarn install --no-bin-links
</span></span><span class="line"><span class="cl">    接下来打开 pakage.json 修改【去掉四处 cross-env 】
</span></span><span class="line"><span class="cl">    执行 $ npm run watch-poll 或者 npm run dev（我是执行的后者）
</span></span></code></pre></div><h3 id="windows安装composer">Windows：安装composer</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">直接下载 composer.phar，地址：https://dl.laravel-china.org/composer.phar
</span></span><span class="line"><span class="cl">把下载的 composer.phar 放到 PHP 安装目录
</span></span><span class="line"><span class="cl">新建 composer.bat, 添加如下内容，并保存：
</span></span><span class="line"><span class="cl">@php &#34;%~dp0composer.phar&#34; %*
</span></span></code></pre></div><h3 id="使用-composer-镜像加速有两种选项">使用 Composer 镜像加速有两种选项</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">- 选项一：全局配置，这样所有项目都能惠及（推荐）；
</span></span><span class="line"><span class="cl">      composer config -g repo.packagist composer https://packagist.laravel-china.org
</span></span><span class="line"><span class="cl">- 选项二：单独项目配置；
</span></span><span class="line"><span class="cl">      composer config repo.packagist composer https://packagist.laravel-china.org
</span></span><span class="line"><span class="cl">  取消镜像
</span></span><span class="line"><span class="cl">      composer config -g --unset repos.packagist
</span></span><span class="line"><span class="cl">  composer 命令后面加上 -vvv （是3个v）可以打印出调错信息
</span></span><span class="line"><span class="cl">      $ composer -vvv create-project laravel/laravel blog
</span></span><span class="line"><span class="cl">      $ composer -vvv require psr/log
</span></span></code></pre></div><h3 id="新增站点">新增站点</h3>
<ul>
<li>在 Homestead.yaml 文件中新增 larabbs 应用的 sites 和 databases 的相关设置：</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10.1.1.33&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">memory</span><span class="p">:</span><span class="w"> </span><span class="m">2048</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">cpus</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">virtualbox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">authorize</span><span class="p">:</span><span class="w"> </span><span class="l">~/.ssh/id_rsa.pub</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">keys</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">~/.ssh/id_rsa</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">folders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">D:/Homestead/Code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/Code</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sites</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">local.larabbs.com</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/Code/larabbs/public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">map</span><span class="p">:</span><span class="w"> </span><span class="l">larabbs02.test</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">/home/vagrant/Code/larabbs02/public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">databases</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">larabbs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">larabbs02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># blackfire:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - id: foo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       token: bar</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       client-id: foo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       client-token: bar</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># ports:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - send: 50000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       to: 5000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#     - send: 7777</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       to: 777</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#       protocol: udp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    
</span></span></span></code></pre></div><ul>
<li>
<p>主要设置了 sites 和 databases 两项。 sites 会将域名 larabbs.test 映射到虚拟机的 <code>/home/vagrant/Code/larabbs/public</code> 文件夹上，而 databases 则为新创建的项目指定数据库名</p>
</li>
<li>
<p>重启虚拟机</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> ~/Homestead <span class="o">&amp;&amp;</span> vagrant provision <span class="o">&amp;&amp;</span> vagrant reload
</span></span></code></pre></div><h3 id="小知识点">小知识点</h3>
<ul>
<li>
<p><code>app()-&gt;getLocale()</code> 获取的是 <code>config/app.php</code> 中的 locale 选项  zh-CN</p>
</li>
<li>
<p><code>@yield('title', 'LaraBBS')</code> 继承此模板的页面，如果没有定制 title 区域的话，就会自动使用第二个参数 LaraBBS 作为标题前缀</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;csrf-token&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;{{ csrf_token() }}&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></div><ul>
<li>
<p><code>asset('css/app.css')</code> 使用当前请求的协议（ HTTP 或 HTTPS ）为资源文件生成一个 URL，以我们的情况，会生成 <a href="http://larabbs.test/css/app.css">http://larabbs.test/css/app.css</a></p>
</li>
<li>
<p>辅助函数  需要新建一个空文件 <code>bootstrap/helpers.php</code> ，在 <code>bootstrap/app.php</code> 文件的最顶部进行加载：<code>&lt;?php require_once __DIR__ . '/helpers.php'</code>;</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">function</span> <span class="nf">route_class</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">str_replace</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="nx">Route</span><span class="o">::</span><span class="na">currentRouteName</span><span class="p">());</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">//此方法会将当前请求的路由名称转换为 CSS 类名称，作用是允许我们针对某个页面做页面样式定制
</span></span></span></code></pre></div><ul>
<li>可以在应用程序的任何位置使用全局 config 函数来访问配置值</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nv">$value</span> <span class="o">=</span> <span class="nx">config</span><span class="p">(</span><span class="s1">&#39;app.timezone&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">//运行时设置配置值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">config</span><span class="p">([</span><span class="s1">&#39;app.timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;America/Chicago&#39;</span><span class="p">]);</span>
</span></span></code></pre></div><ul>
<li>使用 env() 方法可知其优先读取 .env 文件中的 APP_NAME 选项</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;APP_NAME&#39;</span><span class="p">,</span> <span class="s1">&#39;Laravel&#39;</span><span class="p">),</span>  <span class="c1">//config/app.php
</span></span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Laravel学习笔记（二）🍉</title>
			<link>https://blog.gookm.cn/posts/2017/20170512-laravel-study02/</link>
			<pubDate>Fri, 12 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170512-laravel-study02/</guid>
			<description>路由问题 // 资源路由 Route::resource(&amp;#39;user&amp;#39;, &amp;#39;UserController&amp;#39;); // 分组路由 Route::group([&amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;user&amp;#39;], function(){ Route::get(&amp;#39;showByName&amp;#39;, &amp;#39;UserController@showByName&amp;#39;); }); // 正确的写法： 把所有路由写在资源路由前面 // 分组路由 Route::group([&amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;user&amp;#39;], function(){ Route::get(&amp;#39;showByName&amp;#39;, &amp;#39;UserController@showByName&amp;#39;); }); // 资源路由 Route::resource(&amp;#39;user&amp;#39;, &amp;#39;UserController&amp;#39;); `asset()`会去找相对于`index.php`目录下的文件, 默认是 `laravel/public`的绝对路径 `url()` 参数是路由名字 `route()`参数是路由的别名 `return redirect(&amp;#39;&amp;#39;)`参数是路由或者完整url, `return redirect()-&amp;gt;route(&amp;#39;&amp;#39;)`参数是路由别名 Model Model::all() //取得所有记录 Model::where(&amp;#39;id&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, 9)-&amp;gt;get() //取得符合条件的所有记录 Model::where(&amp;#39;id&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, 9)-&amp;gt;first() //取得符合条件的第一条记录 Model::save //不生效，如果你数据库的主键是`Id`改成`id`即可 php artisan `php artisan make:controller Controller --resource` 加上`--resource` 可以自动创建资源控制器默认的方法 `php artisan route:list` 查看所有路由 `php artisan make:auto` 生成一个登录注册 `php artisan serve --port=80` 用80端口开启服务环境 `php artisan make:Postcontroller --model=Post` 生成模型控制器 `php artisan make:model User -a` 会生成`Resource Controller`,`Migration`,`Factory`,`Model` php artisan make:model User -a 会生成Resource Controller,Migration,Factory,Model 表单提交后保留旧数据 控制器：return back()-&amp;gt;withInput(); 视图层：&amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;username&amp;#34; value=&amp;#34;{{ old(&amp;#39;username&amp;#39;) }}&amp;#34; /&amp;gt; 登陆后跳转到登录前的页面?</description>
			<content type="html"><![CDATA[<h3 id="路由问题">路由问题</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// 资源路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="nx">Route</span><span class="o">::</span><span class="na">resource</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="s1">&#39;UserController&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// 分组路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span><span class="s1">&#39;prefix&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;user&#39;</span><span class="p">],</span> <span class="k">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">     <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;showByName&#39;</span><span class="p">,</span> <span class="s1">&#39;UserController@showByName&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> <span class="p">});</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// 正确的写法： 把所有路由写在资源路由前面
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="c1">// 分组路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="nx">Route</span><span class="o">::</span><span class="na">group</span><span class="p">([</span><span class="s1">&#39;prefix&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;user&#39;</span><span class="p">],</span> <span class="k">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">     <span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;showByName&#39;</span><span class="p">,</span> <span class="s1">&#39;UserController@showByName&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> <span class="p">});</span>
</span></span><span class="line"><span class="cl"> <span class="c1">// 资源路由
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="nx">Route</span><span class="o">::</span><span class="na">resource</span><span class="p">(</span><span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="s1">&#39;UserController&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="sb">`asset()`</span><span class="nx">会去找相对于</span><span class="sb">`index.php`</span><span class="nx">目录下的文件</span><span class="p">,</span> <span class="nx">默认是</span>   <span class="sb">`laravel/public`</span><span class="nx">的绝对路径</span>
</span></span><span class="line"><span class="cl"><span class="sb">`url()`</span>  <span class="nx">参数是路由名字</span>
</span></span><span class="line"><span class="cl"><span class="sb">`route()`</span><span class="nx">参数是路由的别名</span>
</span></span><span class="line"><span class="cl"><span class="sb">`return redirect(&#39;&#39;)`</span><span class="nx">参数是路由或者完整url</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl"><span class="sb">`return redirect()-&gt;route(&#39;&#39;)`</span><span class="nx">参数是路由别名</span>
</span></span></code></pre></div><h3 id="model">Model</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">Model</span><span class="o">::</span><span class="na">all</span><span class="p">()</span> <span class="c1">//取得所有记录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Model</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;&#39;</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span> <span class="c1">//取得符合条件的所有记录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Model</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;&#39;</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">()</span> <span class="c1">//取得符合条件的第一条记录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">Model</span><span class="o">::</span><span class="na">save</span> <span class="c1">//不生效，如果你数据库的主键是`Id`改成`id`即可
</span></span></span></code></pre></div><h3 id="php-artisan">php artisan</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="sb">`</span>php artisan make:controller Controller --resource<span class="sb">`</span> 加上<span class="sb">`</span>--resource<span class="sb">`</span> 可以自动创建资源控制器默认的方法
</span></span><span class="line"><span class="cl"><span class="sb">`</span>php artisan route:list<span class="sb">`</span> 查看所有路由
</span></span><span class="line"><span class="cl"><span class="sb">`</span>php artisan make:auto<span class="sb">`</span> 生成一个登录注册
</span></span><span class="line"><span class="cl"><span class="sb">`</span>php artisan serve --port<span class="o">=</span>80<span class="sb">`</span> 用80端口开启服务环境
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="sb">`</span>php artisan make:Postcontroller --model<span class="o">=</span>Post<span class="sb">`</span> 生成模型控制器
</span></span><span class="line"><span class="cl"><span class="sb">`</span>php artisan make:model User -a<span class="sb">`</span> 会生成<span class="sb">`</span>Resource Controller<span class="sb">`</span>,<span class="sb">`</span>Migration<span class="sb">`</span>,<span class="sb">`</span>Factory<span class="sb">`</span>,<span class="sb">`</span>Model<span class="sb">`</span>
</span></span><span class="line"><span class="cl"> php artisan make:model User -a 会生成Resource Controller,Migration,Factory,Model
</span></span></code></pre></div><h3 id="表单提交后保留旧数据">表单提交后保留旧数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">控制器：return back()-&gt;withInput();
</span></span><span class="line"><span class="cl">视图层：<span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;username&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;{{ old(&#39;username&#39;) }}&#34;</span> <span class="p">/&gt;</span>
</span></span></code></pre></div><p>登陆后跳转到登录前的页面?</p>
<ul>
<li>跳转之前，获取当前URL，拼接到GET参数，跳转到登录页面时就变成 <code>http://domain.com/login.php?url=detail.php</code>, 到登录页面时， 判断有没有GET参数， 如果有， 登录成功后就跳转到之前的页面</li>
</ul>
<p>Laravel 是怎么实现路由不用带命名空间调用的？</p>
<ul>
<li>使用 <code>class_alias()</code> 函数，可以为类起别名，通过别名调用类。</li>
</ul>
]]></content>
		</item>
		
		<item>
			<title>Laravel学习笔记（一）</title>
			<link>https://blog.gookm.cn/posts/2017/20170508-laravel-study01/</link>
			<pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170508-laravel-study01/</guid>
			<description>laravel项目初始 1.复制.env.example为.env，配置数据库信息，并自行在mysql中建一个对应的数据库。 cp .env.example .env 2.composer install 安装相关包。 3.php artisan key:generate 生成应用Key。 4.php artisan migrate 运行迁移生成数据表。 进行数据库迁移，如果有seeder的话，运行php artisan db:seed 5.配置虚拟机或者使用php artisan serve启动服务。 通过Composer创建项目 或者，你还可以通过在终端中运行 create-project 命令来安装 Laravel： composer create-project --prefer-dist laravel/laravel blog &amp;#34;5.5.*&amp;#34; captcha（验证码） 先来用这个命令，将包装上 composer require mews/captcha 再来跑这个命令，生成验证码的配置文件 php artisan vendor:publish 修改html i18n语言包 composer require caouecs/laravel-lang:~3.0 1. 找到vendor/caouecs/laravel-lang/src/zh-CN，整个文件夹复制到resources/lang。 2. 修改app/config.php &amp;#39;locale&amp;#39; =&amp;gt; &amp;#39;zh-CN&amp;#39;, 删除一个资源 &amp;lt;script src=&amp;#34;/assets/js/laravel.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;a href=&amp;#34;{{route(&amp;#39;issues.destroy&amp;#39;, $issue-&amp;gt;id)}}&amp;#34; data-method=&amp;#34;delete&amp;#34; data-token=&amp;#34;{{csrf_token()}}&amp;#34; data-confirm=&amp;#34;Are you sure?&amp;#34; ...&amp;gt;Destroy&amp;lt;/a&amp;gt; 待更新&amp;hellip;</description>
			<content type="html"><![CDATA[<h3 id="laravel项目初始">laravel项目初始</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.复制.env.example为.env，配置数据库信息，并自行在mysql中建一个对应的数据库。
</span></span><span class="line"><span class="cl">  cp .env.example .env
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.composer install 安装相关包。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.php artisan key:generate 生成应用Key。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4.php artisan migrate 运行迁移生成数据表。
</span></span><span class="line"><span class="cl">进行数据库迁移，如果有seeder的话，运行php artisan db:seed
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">5.配置虚拟机或者使用php artisan serve启动服务。
</span></span></code></pre></div><h3 id="通过composer创建项目">通过Composer创建项目</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">或者，你还可以通过在终端中运行 create-project 命令来安装 Laravel：
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">composer create-project --prefer-dist laravel/laravel blog &#34;5.5.*&#34;
</span></span></code></pre></div><h3 id="captcha验证码">captcha（验证码）</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">先来用这个命令，将包装上
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">composer require mews/captcha
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">再来跑这个命令，生成验证码的配置文件
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">php artisan vendor:publish
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">修改html
</span></span></code></pre></div><h3 id="i18n语言包">i18n语言包</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">composer require caouecs/laravel-lang:~3.0
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">1. 找到vendor/caouecs/laravel-lang/src/zh-CN，整个文件夹复制到resources/lang。
</span></span><span class="line"><span class="cl">2. 修改app/config.php  &#39;locale&#39; =&gt; &#39;zh-CN&#39;,
</span></span></code></pre></div><h3 id="删除一个资源">删除一个资源</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;/assets/js/laravel.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{route(&#39;issues.destroy&#39;, $issue-&gt;id)}}&#34;</span> <span class="na">data-method</span><span class="o">=</span><span class="s">&#34;delete&#34;</span> <span class="na">data-token</span><span class="o">=</span><span class="s">&#34;{{csrf_token()}}&#34;</span> <span class="na">data-confirm</span><span class="o">=</span><span class="s">&#34;Are you sure?&#34;</span> <span class="err">...</span><span class="p">&gt;</span>Destroy<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>待更新&hellip;</p>
]]></content>
		</item>
		
		<item>
			<title>Laravel之验证码</title>
			<link>https://blog.gookm.cn/posts/2017/20170426-laravel-captcha/</link>
			<pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170426-laravel-captcha/</guid>
			<description>将包装上 composer require mews/captcha 生成验证码的配置文件 php artisan vendor:publish 屏幕提示：
Which provider or tag&amp;#39;s files would you like to publish?: [0 ] Publish files from all providers and tags listed below [1 ] Provider: Fideloper\Proxy\TrustedProxyServiceProvider [2 ] Provider: Illuminate\Mail\MailServiceProvider [3 ] Provider: Illuminate\Notifications\NotificationServiceProvider [4 ] Provider: Illuminate\Pagination\PaginationServiceProvider [5 ] Provider: Intervention\Image\ImageServiceProviderLaravel5 [6 ] Provider: Mews\Captcha\CaptchaServiceProvider [7 ] Tag: config [8 ] Tag: laravel-mail [9 ] Tag: laravel-notifications [10] Tag: laravel-pagination 这里选择 6，也就是Captcha这个包。</description>
			<content type="html"><![CDATA[<h3 id="将包装上">将包装上</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require mews/captcha
</span></span></code></pre></div><h3 id="生成验证码的配置文件">生成验证码的配置文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">php artisan vendor:publish
</span></span></code></pre></div><p>屏幕提示：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Which provider or tag<span class="err">&#39;</span>s files would you like to publish?:
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">0</span> <span class="o">]</span> Publish files from all providers and tags listed below
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">1</span> <span class="o">]</span> Provider: Fideloper<span class="se">\P</span>roxy<span class="se">\T</span>rustedProxyServiceProvider
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">2</span> <span class="o">]</span> Provider: Illuminate<span class="se">\M</span>ail<span class="se">\M</span>ailServiceProvider
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">3</span> <span class="o">]</span> Provider: Illuminate<span class="se">\N</span>otifications<span class="se">\N</span>otificationServiceProvider
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">4</span> <span class="o">]</span> Provider: Illuminate<span class="se">\P</span>agination<span class="se">\P</span>aginationServiceProvider
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">5</span> <span class="o">]</span> Provider: Intervention<span class="se">\I</span>mage<span class="se">\I</span>mageServiceProviderLaravel5
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">6</span> <span class="o">]</span> Provider: Mews<span class="se">\C</span>aptcha<span class="se">\C</span>aptchaServiceProvider
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">7</span> <span class="o">]</span> Tag: config
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">8</span> <span class="o">]</span> Tag: laravel-mail
</span></span><span class="line"><span class="cl">  <span class="o">[</span><span class="m">9</span> <span class="o">]</span> Tag: laravel-notifications
</span></span><span class="line"><span class="cl">  <span class="o">[</span>10<span class="o">]</span> Tag: laravel-pagination
</span></span></code></pre></div><p>这里选择 6，也就是Captcha这个包。</p>
<p>这样在config中，就会出现一个叫做captcha.php的配置文件。这里存放的都是跟验证码相关的配置了。这里有一个</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="s1">&#39;length&#39;</span>    <span class="o">=&gt;</span> <span class="mi">4</span><span class="p">,</span>
</span></span></code></pre></div><h3 id="修改html找到登录页面的验证码部分">修改html，找到登录页面的验证码部分</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;{{captcha_src()}}&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;cursor: pointer;&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></div><p>点击刷新验证码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;{{captcha_src()}}&#34;</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;cursor: pointer;&#34;</span> <span class="na">onclick</span><span class="o">=</span><span class="s">&#34;this.src=&#39;{{captcha_src()}}&#39;+ Math.random();&#34;</span><span class="p">&gt;</span>
</span></span></code></pre></div><h3 id="添加验证logincontroller">添加验证LoginController</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">LoginController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="k">protected</span> <span class="k">function</span> <span class="nf">validateLogin</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">validate</span><span class="p">(</span><span class="nv">$request</span><span class="p">,</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;captcha&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|captcha&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">username</span><span class="p">()</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|string&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="验证码信息提示汉化vendorcaouecslaravel-langsrczh-cn">验证码信息提示汉化vendor/caouecs/laravel-lang/src/zh-CN</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">return</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;captcha&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;:attribute 填写错误。&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;attributes&#39;</span>           <span class="o">=&gt;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;captcha&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;验证码&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">         <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>     <span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">];</span>
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>正则表达式学习归纳😪</title>
			<link>https://blog.gookm.cn/posts/2017/20170418-regex-study/</link>
			<pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170418-regex-study/</guid>
			<description>1、正则表达式
正则表达式(regular expression)描述了一种字符串匹配的模式， 可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。 模式：使用一种特殊符号来实现字符串的匹配 2、创建正则对象
①隐式创建 var 正则对象 = /正则表达式/匹配模式; ②直接实例化 var 正则对象 = new RegExp(‘正则表达式’, ‘匹配模式’); 两者之间的功能是完全一致的，都是为了获得正则对象。但是两者之间的区别主要在于语法的不同。 3、匹配模式
基本语法： var reg = /正则表达式/匹配模式; 在正则表达式中，匹配模式常用的有两种形式： g ：global缩写，代表全局匹配，匹配出所有满足条件的结果 i ：ignore缩写，代表忽略大小写，匹配时，会自动忽略字符串的大小写 4、与正则表达式相关的几个方法
① RegExp类下的方法(reg.test或reg.exec) test(str) ：判断字符串中是否具有指定模式的子串，返回结果是一个布尔类型的值 exec(str) ：返回字符串中指定模式的子串，一次只能获取一个与之匹配的结果 ② String类下的方法(str.方法(reg)) search(reg) ：与indexOf非常类似，返回指定模式的子串在字符串首次出现的位置 match(reg) ：以数组的形式返回指定模式的字符串，可以返回所有匹配的结果 replace(reg,’替换后的字符’) ：把指定模式的子串进行替换操作 split(reg) ：以指定模式分割字符串，返回结果为数组 5、几个重要概念
1.子表达式：在正则表达式中，通过一对圆括号括起来的内容，我们就称之为“子表达式”。 如：var reg = /\d(\d)\d/gi; 2.捕获：在正则表达式中，子表达式匹配到相应的内容时，系统会自动捕获这个行为， 然后将子表达式匹配到的内容放入系统的缓存区中。我们把这个过程就称之为“捕获”。 3.反向引用：在正则表达式中，我们可以使用\n（n&amp;gt;0，正整数，代表系统中的缓冲区编号）来获取缓冲区中的内容， 我们把这个过程就称之为“反向引用”。 6、编写正则表达式三步走
1.匹配符（查什么） 匹配符：字符匹配符用于匹配某个或某些字符 在正则表达式中，通过一对中括号括起来的内容，我们就称之为“字符簇”。 字符簇代表的是一个范围，但是匹配时，只能匹配某个固定的结果。 [a-z] ：匹配字符a到字符z之间的任一字符 [A-Z] ：匹配字符A到字符Z之间的任一字符 [0-9] ：匹配数字0到9之间的任一数字 [0-9a-z] ：匹配数字0到9或字符a到字符z之间的任一字符 [0-9a-zA-Z] ：匹配数字0到9或字符a到字符z或字符A到字符Z之间的任一字符 [abcd] ：匹配字符a或字符b或字符c或字符d [1234] ：匹配数字1或数字2或数字3或数字4 在字符簇中，通过一个^脱字节来表示取反的含义。 [^a-z] ：匹配除字符a到字符z以外的任一字符 [^0-9] ：匹配除数字0到9以外的任一字符 [^abcd] ：匹配除a、b、c、d以外的任一字符 几个比较特殊的匹配符: \d ：匹配一个数字字符，还可以使用[0-9] \D ：匹配一个非数字字符，还可以使用[^0-9] \w ：匹配包括下划线的任何单词字符，还可以使用[0-9a-zA-Z_] \W ：匹配任何非单词字符，还可以使用[^\w] \s ：匹配任何空白字符，space缩写 \S ：匹配任何非空白字符，还可以使用[^\s] .</description>
			<content type="html"><![CDATA[<p>1、正则表达式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">正则表达式(regular expression)描述了一种字符串匹配的模式，
</span></span><span class="line"><span class="cl">可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">模式：使用一种特殊符号来实现字符串的匹配
</span></span></code></pre></div><p>2、创建正则对象</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">①隐式创建
</span></span><span class="line"><span class="cl">var 正则对象 = /正则表达式/匹配模式;
</span></span><span class="line"><span class="cl">②直接实例化
</span></span><span class="line"><span class="cl">var 正则对象 = new RegExp(‘正则表达式’, ‘匹配模式’);
</span></span><span class="line"><span class="cl">两者之间的功能是完全一致的，都是为了获得正则对象。但是两者之间的区别主要在于语法的不同。
</span></span></code></pre></div><p>3、匹配模式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">基本语法：   var  reg = /正则表达式/匹配模式;
</span></span><span class="line"><span class="cl">在正则表达式中，匹配模式常用的有两种形式：
</span></span><span class="line"><span class="cl">g ：global缩写，代表全局匹配，匹配出所有满足条件的结果
</span></span><span class="line"><span class="cl">i ：ignore缩写，代表忽略大小写，匹配时，会自动忽略字符串的大小写
</span></span></code></pre></div><p>4、与正则表达式相关的几个方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① RegExp类下的方法(reg.test或reg.exec)
</span></span><span class="line"><span class="cl">  test(str) ：判断字符串中是否具有指定模式的子串，返回结果是一个布尔类型的值
</span></span><span class="line"><span class="cl">  exec(str) ：返回字符串中指定模式的子串，一次只能获取一个与之匹配的结果
</span></span><span class="line"><span class="cl">② String类下的方法(str.方法(reg))
</span></span><span class="line"><span class="cl">  search(reg) ：与indexOf非常类似，返回指定模式的子串在字符串首次出现的位置
</span></span><span class="line"><span class="cl">  match(reg) ：以数组的形式返回指定模式的字符串，可以返回所有匹配的结果
</span></span><span class="line"><span class="cl">  replace(reg,’替换后的字符’) ：把指定模式的子串进行替换操作
</span></span><span class="line"><span class="cl">  split(reg) ：以指定模式分割字符串，返回结果为数组
</span></span></code></pre></div><p>5、几个重要概念</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.子表达式：在正则表达式中，通过一对圆括号括起来的内容，我们就称之为“子表达式”。
</span></span><span class="line"><span class="cl">如：var reg = /\d(\d)\d/gi;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.捕获：在正则表达式中，子表达式匹配到相应的内容时，系统会自动捕获这个行为，
</span></span><span class="line"><span class="cl">然后将子表达式匹配到的内容放入系统的缓存区中。我们把这个过程就称之为“捕获”。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.反向引用：在正则表达式中，我们可以使用\n（n&gt;0，正整数，代表系统中的缓冲区编号）来获取缓冲区中的内容，
</span></span><span class="line"><span class="cl">我们把这个过程就称之为“反向引用”。
</span></span></code></pre></div><p>6、编写正则表达式三步走</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.匹配符（查什么）
</span></span><span class="line"><span class="cl">匹配符：字符匹配符用于匹配某个或某些字符
</span></span><span class="line"><span class="cl">在正则表达式中，通过一对中括号括起来的内容，我们就称之为“字符簇”。
</span></span><span class="line"><span class="cl">字符簇代表的是一个范围，但是匹配时，只能匹配某个固定的结果。
</span></span><span class="line"><span class="cl">[a-z] ：匹配字符a到字符z之间的任一字符
</span></span><span class="line"><span class="cl">[A-Z] ：匹配字符A到字符Z之间的任一字符
</span></span><span class="line"><span class="cl">[0-9] ：匹配数字0到9之间的任一数字
</span></span><span class="line"><span class="cl">[0-9a-z] ：匹配数字0到9或字符a到字符z之间的任一字符
</span></span><span class="line"><span class="cl">[0-9a-zA-Z] ：匹配数字0到9或字符a到字符z或字符A到字符Z之间的任一字符
</span></span><span class="line"><span class="cl">[abcd] ：匹配字符a或字符b或字符c或字符d
</span></span><span class="line"><span class="cl">[1234] ：匹配数字1或数字2或数字3或数字4
</span></span><span class="line"><span class="cl">在字符簇中，通过一个^脱字节来表示取反的含义。
</span></span><span class="line"><span class="cl">[^a-z] ：匹配除字符a到字符z以外的任一字符
</span></span><span class="line"><span class="cl">[^0-9] ：匹配除数字0到9以外的任一字符
</span></span><span class="line"><span class="cl">[^abcd] ：匹配除a、b、c、d以外的任一字符
</span></span><span class="line"><span class="cl">几个比较特殊的匹配符:
</span></span><span class="line"><span class="cl">\d ：匹配一个数字字符，还可以使用[0-9]
</span></span><span class="line"><span class="cl">\D ：匹配一个非数字字符，还可以使用[^0-9]
</span></span><span class="line"><span class="cl">\w ：匹配包括下划线的任何单词字符，还可以使用[0-9a-zA-Z_]
</span></span><span class="line"><span class="cl">\W ：匹配任何非单词字符，还可以使用[^\w]
</span></span><span class="line"><span class="cl">\s ：匹配任何空白字符，space缩写
</span></span><span class="line"><span class="cl">\S ：匹配任何非空白字符，还可以使用[^\s]
</span></span><span class="line"><span class="cl">.(我是一个点号)  ：匹配除 &#34;\n&#34; 之外的任何单个字符
</span></span><span class="line"><span class="cl">[\u4e00-\u9fa5] ：匹配中文字符中的任一字符
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.限定符（查多少）
</span></span><span class="line"><span class="cl">限定符可以指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。
</span></span><span class="line"><span class="cl">* ：匹配前面的子表达式零次或多次，0到多，{0,}
</span></span><span class="line"><span class="cl">+ ：匹配前面的子表达式一次或多次，1到多，{1,}
</span></span><span class="line"><span class="cl">? ：匹配前面的子表达式零次或一次，0或1，{0,1}
</span></span><span class="line"><span class="cl">{n} ：匹配确定的 n 次
</span></span><span class="line"><span class="cl">{n,} ：至少匹配n 次
</span></span><span class="line"><span class="cl">{n,m} ：最少匹配 n 次且最多匹配 m 次
</span></span><span class="line"><span class="cl">  //特别说明：
</span></span><span class="line"><span class="cl">贪婪匹配
</span></span><span class="line"><span class="cl">在正则表达式中，默认情况下，能匹配多的就不匹配少的，我们把这种匹配模式就称之为“贪婪匹配。
</span></span><span class="line"><span class="cl">所有的正则表达式，默认情况下采用的都是贪婪匹配原则。
</span></span><span class="line"><span class="cl">非贪婪匹配
</span></span><span class="line"><span class="cl">在限定符的后面添加一个问号？，那我们的贪婪匹配原则就会转化为非贪婪匹配原则，优先匹配少的。
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">3.定位符（从哪查）
</span></span><span class="line"><span class="cl">定位符可以将一个正则表达式固定在一行的开始或结束。也可以创建只在单词内或只在单词的开始或结尾处出现的正则表达式。
</span></span><span class="line"><span class="cl">^ ：匹配输入字符串的开始位置
</span></span><span class="line"><span class="cl">$ ：匹配输入字符串的结束位置
</span></span><span class="line"><span class="cl">\b ：匹配一个单词边界
</span></span><span class="line"><span class="cl">\B ：匹配非单词边界
</span></span></code></pre></div><p>7、几个需要注意的点</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.转义符
</span></span><span class="line"><span class="cl">在正则表达式中，我们可以使用反斜杠\对某些特殊字符进行转义操作。需要转义的字符：
</span></span><span class="line"><span class="cl">点号.
</span></span><span class="line"><span class="cl">小括号()
</span></span><span class="line"><span class="cl">中括号[]
</span></span><span class="line"><span class="cl">左斜杠/
</span></span><span class="line"><span class="cl">右斜杠\
</span></span><span class="line"><span class="cl">选择匹配符|
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.选择匹配符：在正则表达式中，我们可以通过一个竖线|代表选择匹配符。可以理解成“或”。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3.特殊用法：
</span></span><span class="line"><span class="cl">(?=) ：正向预查；
</span></span><span class="line"><span class="cl">(?!) ：负向预查；
</span></span><span class="line"><span class="cl">特别说明：在正则表达式中，如果子表达式遇到了exec就会产生上面的结果。其返回结果是一个数组。
</span></span><span class="line"><span class="cl">第一组元素，索引为0的数据hellophp，代表正则匹配到的结果;索引为1的数据php，代表是第一个子表达式匹配到的结果
</span></span><span class="line"><span class="cl">第二组元素，索引为0的数据hellojavascript，代表正则表达式匹配到的结果;索引为1的数据javascript，代表是第一个子表达式匹配到的结果
</span></span><span class="line"><span class="cl">如何解决以上问题呢？答：可以使用(?:)的形式，让正则表达式中的子表达式只输出内容，但不捕获。
</span></span><span class="line"><span class="cl"> (?:)：输出内容但不捕获（要用到的知识点：子表达式与exec方法）
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>mysqldump导出数据库各参数说明</title>
			<link>https://blog.gookm.cn/posts/2017/20170321-mysqldump/</link>
			<pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170321-mysqldump/</guid>
			<description>mysqldump是mysql用于转存储数据库的实用程序。它主要产生一个SQL脚本，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。
下面我们详细介绍一下mysqldump导出的各种实例： 👇👇👇👇👇👇
导出数据 1 导出一个数据库的结构
mysqldump -d dbname -uroot -p &amp;gt; dbname.sql 2 导出多个数据库的结构
mysqldump -d -B dbname1 dbname2 -uroot -p &amp;gt; dbname.sql 3 导出一个数据库中数据（不包含结构）
mysqldump -t dbname -uroot -p &amp;gt; dbname.sql 4 导出多个数据库中数据（不包含结构）
mysqldump -t -B dbname1 dbname2 -uroot -p &amp;gt; dbname.sql 5 导出一个数据库的结构以及数据
mysqldump dbname -uroot -p &amp;gt; dbname.sql 6 导出多个数据库的结构以及数据
mysqldump -B dbname1 dbname2 -uroot -p &amp;gt; dbname.sql 7 导出一个数据库中一个表的结构
mysqldump -d dbname1 tablename -uroot -p &amp;gt; tablename.</description>
			<content type="html"><![CDATA[<blockquote>
<p>mysqldump是mysql用于转存储数据库的实用程序。它主要产生一个SQL脚本，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。</p>
</blockquote>
<p>下面我们详细介绍一下mysqldump导出的各种实例：
👇👇👇👇👇👇</p>
<h3 id="导出数据">导出数据</h3>
<p>1 导出一个数据库的结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">d</span><span class="w"> </span><span class="n">dbname</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>2 导出多个数据库的结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">d</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">dbname2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>3 导出一个数据库中数据（不包含结构）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="n">dbname</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>4 导出多个数据库中数据（不包含结构）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">dbname2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>5 导出一个数据库的结构以及数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="n">dbname</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>6 导出多个数据库的结构以及数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">dbname2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>7 导出一个数据库中一个表的结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">d</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">tablename</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>8 导出一个数据库中多个表的结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">d</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="o">--</span><span class="kp">tables</span><span class="w"> </span><span class="n">tablename1</span><span class="w"> </span><span class="n">tablename2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>9 导出一个数据库中一个表的数据（不包含结构）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">tablename</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>10 导出一个数据库中多个表的数据（不包含结构）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="o">--</span><span class="kp">tables</span><span class="w"> </span><span class="n">tablename1</span><span class="w"> </span><span class="n">tablename2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>11 导出一个数据库中一个表的结构以及数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="n">tablename</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>12 导出一个数据库中多个表的结构以及数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">B</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="o">--</span><span class="kp">tables</span><span class="w"> </span><span class="n">tablename1</span><span class="w"> </span><span class="n">tablename2</span><span class="w"> </span><span class="o">-</span><span class="n">uroot</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">tablename</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><h3 id="存储过程函数操作">存储过程&amp;函数操作</h3>
<p>1 只导出存储过程和函数(不导出结构和数据，要同时导出结构的话，需要同时使用-d)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">R</span><span class="w"> </span><span class="o">-</span><span class="n">ndt</span><span class="w"> </span><span class="n">dbname</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>2 只导出事件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">-</span><span class="n">E</span><span class="w"> </span><span class="o">-</span><span class="n">ndt</span><span class="w"> </span><span class="n">dbname</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><p>3 不导出触发器（触发器是默认导出的–triggers，使用–skip-triggers屏蔽导出触发器）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysqldump</span><span class="w"> </span><span class="o">--</span><span class="n">skip</span><span class="o">-</span><span class="n">triggers</span><span class="w"> </span><span class="n">dbname1</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><h3 id="把导出的数据导入到数据库">把导出的数据导入到数据库</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="o">&gt;</span><span class="n">mysql</span><span class="w"> </span><span class="o">-</span><span class="n">u</span><span class="w"> </span><span class="n">root</span><span class="w"> </span><span class="o">-</span><span class="n">p</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">&gt;</span><span class="k">use</span><span class="w"> </span><span class="n">dbname</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">&gt;</span><span class="n">source</span><span class="w"> </span><span class="n">dbname</span><span class="p">.</span><span class="k">sql</span><span class="w">
</span></span></span></code></pre></div><h3 id="总结一下">总结一下</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">-d 结构(--no-data:不导出任何数据，只导出数据库表结构)
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">-t 数据(--no-create-info:只导出数据，而不添加CREATE TABLE 语句)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-n (--no-create-db:只导出数据，而不添加CREATE DATABASE 语句）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-R (--routines:导出存储过程以及自定义函数)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-E (--events:导出事件)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--triggers (默认导出触发器，使用--skip-triggers屏蔽导出)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-B (--databases:导出数据库列表，单个库时可省略）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--tables 表列表（单个表时可省略）
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">①同时导出结构以及数据时可同时省略-d和-t
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">②同时 不 导出结构和数据可使用-ntd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">③只导出存储过程和函数可使用-R -ntd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">④导出所有(结构&amp;数据&amp;存储过程&amp;函数&amp;事件&amp;触发器)使用-R -E(相当于①，省略了-d -t;触发器默认导出)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑤只导出结构&amp;函数&amp;事件&amp;触发器使用 -R -E -d
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>MySQL高级操作🥗</title>
			<link>https://blog.gookm.cn/posts/2017/20170106-mysql-advanced/</link>
			<pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2017/20170106-mysql-advanced/</guid>
			<description>增加内容（基础命令） 1.表后增加主键alter table 表名 add primary key(字段); 在所有字段之后增加primary key选项：primary key(字段信息) 直接在需要当做主键的字段之后，增加primary key属性来确定主键 2.删除主键alter table 表名 drop primary key; 3.自动增长在字段之后增加一个属性auto_increment 4.修改自动增长 alter table 表名auto_increment = 值; 5.删除自动增长 如：alter table 表名 modify id int 6.查看自增长初始变量 show variables like &amp;#39;auto_increment%&amp;#39;; 7.添加唯一键（与主键基本一样）alter table 表名add unique key(字段列表); 8.删除唯一键 alter table 表名drop unique key; - - 错误的 唯一键可以有多个 alter table 表名drop index 唯一键名字; 高级数据操作 1.多数据插入 insert into 表名 [(字段列表)] values(值列表), (值列表)…; 2.主键冲突更新insert into 表名 [(字段列表)] values(值列表) on duplicate key update字段 = 新值; 3.</description>
			<content type="html"><![CDATA[<h3 id="增加内容基础命令">增加内容（基础命令）</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="mi">1</span><span class="p">.</span><span class="err">表后增加主键</span><span class="n">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">add</span><span class="w"> </span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">(</span><span class="err">字段</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">在所有字段之后增加</span><span class="n">primary</span><span class="w"> </span><span class="n">key选项</span><span class="err">：</span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">(</span><span class="err">字段信息</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">直接在需要当做主键的字段之后，增加</span><span class="n">primary</span><span class="w"> </span><span class="n">key属性来确定主键</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">2</span><span class="p">.</span><span class="err">删除主键</span><span class="n">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">drop</span><span class="w"> </span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">3</span><span class="p">.</span><span class="err">自动增长在字段之后增加一个属性</span><span class="n">auto_increment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">4</span><span class="p">.</span><span class="err">修改自动增长</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="n">auto_increment</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">值</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">5</span><span class="p">.</span><span class="err">删除自动增长</span><span class="w"> </span><span class="err">如：</span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="n">modify</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="kt">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">6</span><span class="p">.</span><span class="err">查看自增长初始变量</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="n">variables</span><span class="w"> </span><span class="k">like</span><span class="w"> </span><span class="s1">&#39;auto_increment%&#39;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">7</span><span class="p">.</span><span class="err">添加唯一键（与主键基本一样）</span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="n">add</span><span class="w"> </span><span class="k">unique</span><span class="w"> </span><span class="k">key</span><span class="p">(</span><span class="err">字段列表</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">8</span><span class="p">.</span><span class="err">删除唯一键</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="n">drop</span><span class="w"> </span><span class="k">unique</span><span class="w"> </span><span class="k">key</span><span class="p">;</span><span class="w">  </span><span class="o">-</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="err">错误的</span><span class="w"> </span><span class="err">唯一键可以有多个</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="n">drop</span><span class="w"> </span><span class="k">index</span><span class="w"> </span><span class="err">唯一键名字</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h3 id="高级数据操作">高级数据操作</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="mi">1</span><span class="p">.</span><span class="err">多数据插入</span><span class="w"> </span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="p">[(</span><span class="err">字段列表</span><span class="p">)]</span><span class="w"> </span><span class="k">values</span><span class="p">(</span><span class="err">值列表</span><span class="p">),</span><span class="w"> </span><span class="p">(</span><span class="err">值列表</span><span class="p">)</span><span class="err">…</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">2</span><span class="p">.</span><span class="err">主键冲突更新</span><span class="n">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="p">[(</span><span class="err">字段列表</span><span class="p">)]</span><span class="w"> </span><span class="k">values</span><span class="p">(</span><span class="err">值列表</span><span class="p">)</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">duplicate</span><span class="w"> </span><span class="k">key</span><span class="w"> </span><span class="n">update字段</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">新值</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">3</span><span class="p">.</span><span class="err">主键冲突替换</span><span class="n">replace</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="p">[(</span><span class="err">字段列表</span><span class="p">)]</span><span class="w"> </span><span class="k">values</span><span class="p">(</span><span class="err">值列表</span><span class="p">);</span><span class="w">  </span><span class="err">干掉原来的数据，重新插入进去</span><span class="w"> </span><span class="err">与</span><span class="n">insert有点像</span><span class="w"> </span><span class="err">比</span><span class="n">insert效率低</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">4</span><span class="p">.</span><span class="err">蠕虫复制</span><span class="n">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="p">[(</span><span class="err">字段列表</span><span class="p">)]</span><span class="w"> </span><span class="k">select</span><span class="w">  </span><span class="o">*/</span><span class="err">字段列表</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表</span><span class="p">;</span><span class="w"> </span><span class="err">测试表的压力</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">5</span><span class="p">.</span><span class="err">更新数据</span><span class="n">update表名</span><span class="w"> </span><span class="kt">set</span><span class="w"> </span><span class="err">字段名</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">新值</span><span class="w"> </span><span class="p">[</span><span class="k">where</span><span class="w"> </span><span class="err">判断条件</span><span class="p">]</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="err">数量</span><span class="p">;</span><span class="err">（没有</span><span class="n">where是全表更新</span><span class="err">）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">6</span><span class="p">.</span><span class="err">删除数据</span><span class="n">delete</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="p">[</span><span class="k">where</span><span class="w"> </span><span class="err">条件</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="k">limit</span><span class="w"> </span><span class="err">数量</span><span class="p">];</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">7</span><span class="p">.</span><span class="err">重置自增长</span><span class="n">truncate</span><span class="w"> </span><span class="err">表名</span><span class="p">;</span><span class="w"> </span><span class="o">---&gt;</span><span class="w"> </span><span class="err">相当于</span><span class="n">drop</span><span class="w"> </span><span class="o">---&gt;</span><span class="w"> </span><span class="err">再</span><span class="n">create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">8</span><span class="p">.</span><span class="err">查询数据</span><span class="w"> </span><span class="k">select</span><span class="w">  </span><span class="p">[</span><span class="n">select的选项</span><span class="w"> </span><span class="p">]</span><span class="w">  </span><span class="err">字段列表</span><span class="w">   </span><span class="k">from</span><span class="w"> </span><span class="err">数据源</span><span class="w">   </span><span class="n">where条件</span><span class="w">   </span><span class="k">group</span><span class="w"> </span><span class="n">by分组</span><span class="w">  </span><span class="n">having条件</span><span class="w"> </span><span class="k">order</span><span class="w"> </span><span class="n">by排序</span><span class="w">   </span><span class="n">limit限制</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">Select选项</span><span class="err">：默认</span><span class="n">all</span><span class="w">   </span><span class="err">字段列表：字段名</span><span class="w"> </span><span class="p">[</span><span class="k">as</span><span class="p">]</span><span class="w"> </span><span class="err">别名</span><span class="w">  </span><span class="n">from数据源</span><span class="err">：</span><span class="k">from</span><span class="w"> </span><span class="p">(</span><span class="k">select</span><span class="w"> </span><span class="err">字段列表</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表</span><span class="p">)</span><span class="w">  </span><span class="k">as</span><span class="w"> </span><span class="err">别名</span><span class="p">;</span><span class="w">  </span><span class="err">聚合函数：</span><span class="nf">group_concat</span><span class="p">()</span><span class="err">为了将分组中指定的字段进行合并（字符串拼接）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">9</span><span class="p">.</span><span class="err">分组排序</span><span class="n">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="err">字段</span><span class="w"> </span><span class="p">[</span><span class="k">asc</span><span class="o">|</span><span class="k">desc</span><span class="p">]</span><span class="err">，字段</span><span class="w"> </span><span class="p">[</span><span class="k">asc</span><span class="o">|</span><span class="k">desc</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">10</span><span class="p">.</span><span class="err">回溯统计</span><span class="n">group</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="err">字段</span><span class="w"> </span><span class="p">[</span><span class="k">asc</span><span class="o">|</span><span class="k">desc</span><span class="p">]</span><span class="w"> </span><span class="n">withrollup</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">11</span><span class="p">.</span><span class="err">联合查询</span><span class="n">select</span><span class="w"> </span><span class="err">语句</span><span class="w"> </span><span class="err">默认：</span><span class="k">distinct</span><span class="w"> </span><span class="k">union</span><span class="w"> </span><span class="p">[</span><span class="k">union</span><span class="w"> </span><span class="err">选项</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">规则</span><span class="mi">1</span><span class="p">:</span><span class="w"> </span><span class="err">在联合查询中，如果要使用</span><span class="n">order</span><span class="w"> </span><span class="k">by</span><span class="err">，那么对应的</span><span class="n">select语句必须使用括号括起来</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">规则</span><span class="mi">2</span><span class="p">:</span><span class="w"> </span><span class="n">orderby在联合查询中若要生效</span><span class="err">，必须配合使用</span><span class="n">limit</span><span class="err">：而</span><span class="n">limit后面必须跟对应的限制数量</span><span class="err">（通常可以使用一个较大的值：大于对应表的记录数的值）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">12</span><span class="p">.</span><span class="err">连接查询</span><span class="w"> </span><span class="k">cross</span><span class="w"> </span><span class="k">join</span><span class="p">:</span><span class="err">表</span><span class="mi">1</span><span class="w"> </span><span class="k">cross</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="err">表</span><span class="mi">2</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="k">inner</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="err">表</span><span class="mi">1</span><span class="w"> </span><span class="p">[</span><span class="k">inner</span><span class="p">]</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="err">表</span><span class="mi">2</span><span class="w">  </span><span class="n">on匹配条件</span><span class="p">;</span><span class="w"> </span><span class="err">不带条件就是交叉查询（避免）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="k">outer</span><span class="w"> </span><span class="k">join</span><span class="err">：主表</span><span class="w"> </span><span class="k">left</span><span class="w"> </span><span class="k">join</span><span class="w"> </span><span class="err">从表</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="err">连接条件</span><span class="p">;</span><span class="w">  </span><span class="c1">-- 外连接必须有on条件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">   </span><span class="err">外连接的特点：</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="mi">1</span><span class="err">、外连接中主表数据记录一定会保存：连接之后不会出现记录数少于主表的情况（但内连接可能少）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="mi">2</span><span class="err">、左连接和右连接其实可以互相转换，但是数据对应的位置（表顺序）会改变。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">13</span><span class="p">.</span><span class="err">标量子查询</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">数据源</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="err">条件判断</span><span class="w"> </span><span class="o">=/&lt;&gt;</span><span class="w"> </span><span class="p">(</span><span class="k">select</span><span class="w"> </span><span class="err">字段名</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">数据源</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="err">条件判断</span><span class="p">);</span><span class="w"> </span><span class="o">//</span><span class="err">注意，括号中标量子查询得到的结果只有一个值</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">14</span><span class="p">.</span><span class="err">列子查询</span><span class="w"> </span><span class="err">主查询</span><span class="n">where</span><span class="w"> </span><span class="err">条件</span><span class="nf">in</span><span class="w">  </span><span class="p">(</span><span class="err">列子查询</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">15</span><span class="p">.</span><span class="err">行子查询</span><span class="w"> </span><span class="err">主查询</span><span class="n">where</span><span class="w"> </span><span class="err">条件</span><span class="p">[</span><span class="err">（构造一个行元素）</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="err">行子查询</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="err">行元素：行元素对应的就是多个字段，把多个字段“合起来”作为一个元素参与运算，把这种情况称之为行元素。</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">16</span><span class="p">.</span><span class="err">表子查询</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="err">字段列表</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="p">(</span><span class="err">表子查询</span><span class="p">)</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="err">别名</span><span class="w"> </span><span class="p">[</span><span class="k">where</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="k">group</span><span class="w"> </span><span class="k">by</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="k">having</span><span class="p">][</span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="k">limit</span><span class="p">];</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">17</span><span class="p">.</span><span class="n">exists子查询</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="k">exists</span><span class="p">(</span><span class="err">查询语句</span><span class="p">)</span><span class="err">；</span><span class="w"> </span><span class="err">查询返回的结果只有</span><span class="mi">0</span><span class="err">或者</span><span class="mi">1</span><span class="err">，</span><span class="mi">1</span><span class="err">代表成立，</span><span class="mi">0</span><span class="err">代表不成立</span><span class="w">
</span></span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>Linux学习归纳哈哈🚀</title>
			<link>https://blog.gookm.cn/posts/2016/20160703-linux-study/</link>
			<pubDate>Sun, 03 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2016/20160703-linux-study/</guid>
			<description>系统中常用Shell指令 ①指令单独存在 ② 指令带选项 ③ 指令带选项带参数 ls指令：显示当前目录的所有文件 相关选项： -l ：list缩写，代表以列表形式显示所有文件 -a ：all缩写，代表显示所有文件（包括隐藏文件） ① ls指令 ② ls指令 -l，这个指令还可以进一步简写为ll ③ ls指令 -a ④ ls指令 -al ：以列表形式显示所有文件（包括隐藏文件） Ls –l /var/www *.php 列出当前目录下，以.php结尾的文件 ls –al *.php pwd指令：显示当前工作目录 cd指令：跳转到指定目录 ① cd + 路径：跳转到指定的目录 ② cd .. ：跳转到上一级目录 ③ cd + ~ ：跳转到自己的家中，普通用户就跳转到/home/用户名目录下，超级管理员/root clear ：清屏指令 logout ：退出指令 普及小知识：Linux操作系统中，存在两种界面，一个是图形界面，一个字符界面。 Ctrl + Alt + F1 ：切换到图形界面 Ctrl + Alt + F2~F6 ：切换到字符界面 shutdown ：关机指令 相关选项： ① shutdown -h 分钟数：多少分钟后关机（真实关机） ② shutdown -r 分钟数：多少分钟后重启 ③ shutdown -k 分钟数：多少分钟后关机（只发出警告，不关机） ④ shutdown -c ：取消关机，也可以使用快捷键Ctrl + C 但是特别注意：shutdown指令只能是超级管理员使用，使用su root切换超级管理员 halt指令：立即关机 reboot指令：立即重启 VI编辑器的基本操作 ① vi filename ：打开指定的文件，如果文件不存在会自动创建该文件 ② vi + filename ：打开文件并将光标置于最后一行 ③ vi +n filename ：打开文件并将光标置于第n行 ④ vi +/string filename ：打开文件并高亮显示string关键词 提示：可以使用快捷键小n会切换到下一个关键词，输入 # 或者大 N 会切换到上一个关键词。 ⑤ vi filename1 filename2 ：同时打开多个文件 提示：在末行模式下使用:next或:n切换下一个文件，使用:prev切换到上一个文件。 普及小知识：Linux自动补全（非常重要） 当输入某个指令或某个文件名称时，如果指令或名称过长，我们只需要输入前几个字母+Tab按键就可以实现自动补全。 VI编辑器的命令模式与末行模式 命令模式： ① yy ：复制当前行 nyy ：从当前行开始复制n行，例如：复制3行内容，3yy ② p ：粘贴 ③ dd ：删除当前行 ndd ：从当前行开始删除n行，例如：删除3行内容，3dd。 ④ u ：撤销，相当于Windows中的Ctrl + Z ⑤ d$：删除光标所在位置到行末的所有内容。 ⑥ $：把光标移动到行末。 ⑦ ^：把光标移动到行首。 末行模式： :set nu ：显示行号 :set nonu ：取消行号 /关键词：高亮显示所有关键词 :noh ：取消所有关键词高亮 num1,num2 co num3 ：把从num1行到num2行的代码插入到num3行的后面 :w ：保存文件 :q ：退出 :wq ：保存并退出 特别注意：有些情况下，有些系统文件不允许保存，这个时候可以使用强制保存或强制退出指令。 :w!</description>
			<content type="html"><![CDATA[<h3 id="系统中常用shell指令">系统中常用Shell指令</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">①指令单独存在  ② 指令带选项 ③ 指令带选项带参数
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">ls指令：显示当前目录的所有文件
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-l ：list缩写，代表以列表形式显示所有文件
</span></span><span class="line"><span class="cl">-a ：all缩写，代表显示所有文件（包括隐藏文件）
</span></span><span class="line"><span class="cl">① ls指令
</span></span><span class="line"><span class="cl">② ls指令 -l，这个指令还可以进一步简写为ll
</span></span><span class="line"><span class="cl">③ ls指令 -a
</span></span><span class="line"><span class="cl">④ ls指令 -al ：以列表形式显示所有文件（包括隐藏文件）
</span></span><span class="line"><span class="cl">Ls –l /var/www *.php
</span></span><span class="line"><span class="cl">列出当前目录下，以.php结尾的文件  ls  –al *.php
</span></span><span class="line"><span class="cl">pwd指令：显示当前工作目录
</span></span><span class="line"><span class="cl">cd指令：跳转到指定目录
</span></span><span class="line"><span class="cl">① cd + 路径：跳转到指定的目录
</span></span><span class="line"><span class="cl">② cd .. ：跳转到上一级目录
</span></span><span class="line"><span class="cl">③ cd + ~ ：跳转到自己的家中，普通用户就跳转到/home/用户名目录下，超级管理员/root
</span></span><span class="line"><span class="cl">clear ：清屏指令
</span></span><span class="line"><span class="cl">logout ：退出指令
</span></span><span class="line"><span class="cl">普及小知识：Linux操作系统中，存在两种界面，一个是图形界面，一个字符界面。
</span></span><span class="line"><span class="cl">Ctrl + Alt + F1 ：切换到图形界面
</span></span><span class="line"><span class="cl">Ctrl + Alt + F2~F6 ：切换到字符界面
</span></span><span class="line"><span class="cl">shutdown ：关机指令
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">① shutdown  -h  分钟数：多少分钟后关机（真实关机）
</span></span><span class="line"><span class="cl">② shutdown  -r  分钟数：多少分钟后重启
</span></span><span class="line"><span class="cl">③ shutdown  -k  分钟数：多少分钟后关机（只发出警告，不关机）
</span></span><span class="line"><span class="cl">④ shutdown  -c ：取消关机，也可以使用快捷键Ctrl + C
</span></span><span class="line"><span class="cl">但是特别注意：shutdown指令只能是超级管理员使用，使用su  root切换超级管理员
</span></span><span class="line"><span class="cl">halt指令：立即关机
</span></span><span class="line"><span class="cl">reboot指令：立即重启
</span></span></code></pre></div><h3 id="vi编辑器的基本操作">VI编辑器的基本操作</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① vi filename ：打开指定的文件，如果文件不存在会自动创建该文件
</span></span><span class="line"><span class="cl">② vi + filename ：打开文件并将光标置于最后一行
</span></span><span class="line"><span class="cl">③ vi +n filename ：打开文件并将光标置于第n行
</span></span><span class="line"><span class="cl">④ vi +/string filename  ：打开文件并高亮显示string关键词
</span></span><span class="line"><span class="cl">提示：可以使用快捷键小n会切换到下一个关键词，输入 # 或者大 N 会切换到上一个关键词。
</span></span><span class="line"><span class="cl">⑤ vi filename1 filename2 ：同时打开多个文件
</span></span><span class="line"><span class="cl">提示：在末行模式下使用:next或:n切换下一个文件，使用:prev切换到上一个文件。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">普及小知识：Linux自动补全（非常重要）
</span></span><span class="line"><span class="cl">当输入某个指令或某个文件名称时，如果指令或名称过长，我们只需要输入前几个字母+Tab按键就可以实现自动补全。
</span></span></code></pre></div><h3 id="vi编辑器的命令模式与末行模式">VI编辑器的命令模式与末行模式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">命令模式：
</span></span><span class="line"><span class="cl">① yy ：复制当前行
</span></span><span class="line"><span class="cl">   nyy ：从当前行开始复制n行，例如：复制3行内容，3yy
</span></span><span class="line"><span class="cl">② p ：粘贴
</span></span><span class="line"><span class="cl">③ dd ：删除当前行
</span></span><span class="line"><span class="cl">   ndd ：从当前行开始删除n行，例如：删除3行内容，3dd。
</span></span><span class="line"><span class="cl">④ u ：撤销，相当于Windows中的Ctrl + Z
</span></span><span class="line"><span class="cl">⑤ d$：删除光标所在位置到行末的所有内容。
</span></span><span class="line"><span class="cl">⑥ $：把光标移动到行末。
</span></span><span class="line"><span class="cl">⑦ ^：把光标移动到行首。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">末行模式：
</span></span><span class="line"><span class="cl">:set nu ：显示行号
</span></span><span class="line"><span class="cl">:set nonu ：取消行号
</span></span><span class="line"><span class="cl">/关键词：高亮显示所有关键词
</span></span><span class="line"><span class="cl">:noh ：取消所有关键词高亮
</span></span><span class="line"><span class="cl">num1,num2 co num3 ：把从num1行到num2行的代码插入到num3行的后面
</span></span><span class="line"><span class="cl">:w ：保存文件
</span></span><span class="line"><span class="cl">:q ：退出
</span></span><span class="line"><span class="cl">:wq ：保存并退出
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">特别注意：有些情况下，有些系统文件不允许保存，这个时候可以使用强制保存或强制退出指令。
</span></span><span class="line"><span class="cl">:w! ：强制保存
</span></span><span class="line"><span class="cl">:q! ：强制退出
</span></span><span class="line"><span class="cl">:wq! ：强制保存并退出
</span></span><span class="line"><span class="cl">:n : 将光标放到指定的行
</span></span></code></pre></div><h3 id="linux系统软件的安装与卸载">Linux系统软件的安装与卸载</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">1.查询已安装的Linux软件：
</span></span><span class="line"><span class="cl">    1、rpm -qa
</span></span><span class="line"><span class="cl">    2、选项说明：
</span></span><span class="line"><span class="cl">    3、-q ：query缩写，代表查询
</span></span><span class="line"><span class="cl">    4、-a ：all缩写，代表查询所有已安装的软件
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">2、管道命令
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">rpm  -qa | grep  vim
</span></span><span class="line"><span class="cl">管道命令操作符是：”|”。
</span></span><span class="line"><span class="cl">作用：将“|”左边命令的结果信息作为下一个命令的输入信息
</span></span><span class="line"><span class="cl">文本搜索命令：grep
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">3、卸载已安装的软件
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">rpm  -e  软件名称
</span></span><span class="line"><span class="cl">如：rpm –e vim-common
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">4、安装Linux软件（rpm包）
</span></span><span class="line"><span class="cl">①装载系统镜像1（DVD1）
</span></span><span class="line"><span class="cl">②选择已连接，启动光驱
</span></span><span class="line"><span class="cl">③到/media目录下寻找DVD光驱中的内容
</span></span><span class="line"><span class="cl">④安装rpm软件包，要用到的知识点：
</span></span><span class="line"><span class="cl">rpm  -ivh  软件名称：安装软件
</span></span><span class="line"><span class="cl">-i ：install缩写，安装
</span></span><span class="line"><span class="cl">-vh ：显示安装进度
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">5、返回上级目录后，单击小b重启计算机
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">6、更改超级管理员root密码
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">passwd  用户名名称 ：重置密码
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">7、设置密码后，重启操作系统
</span></span></code></pre></div><h3 id="与组相关的shell指令">与组相关的Shell指令</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① groupadd 组名：添加组
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-g ：添加组时，指定组id
</span></span><span class="line"><span class="cl">② groupmod 组名
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-n ：修改组名称
</span></span><span class="line"><span class="cl">-g ：修改组id
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">③ groupdel 组名
</span></span><span class="line"><span class="cl">VIM使用小技巧：在末行模式下
</span></span><span class="line"><span class="cl">使用:0代表跳转到第1行
</span></span><span class="line"><span class="cl">使用:$代表调整到最后1行
</span></span><span class="line"><span class="cl">tail指令：在不打开文件的前提下，查看文件的内容
</span></span><span class="line"><span class="cl">tail -n 显示最后几行（纯数字） 文件名称
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">④添加或删除组成员（针对附属组）
</span></span><span class="line"><span class="cl">gpasswd  [选项]  组名
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-a user_name ：添加用户到附属组中
</span></span><span class="line"><span class="cl">-d user_name ：从附属组中删除用户
</span></span></code></pre></div><h3 id="与用户的相关的shell指令">与用户的相关的Shell指令</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① useradd指令：添加用户
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-g group_name ：代表添加用户时指定用户的所属组
</span></span><span class="line"><span class="cl">-d  home_dir  -m：添加用户时指定用户的家，如果不指定默认/home/用户名
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">② usermod 指令：修改用户信息
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-c comment ：修改用户的备注信息
</span></span><span class="line"><span class="cl">-l login_name ：修改用户的名称
</span></span><span class="line"><span class="cl">-d home_dir ：修改用户的家
</span></span><span class="line"><span class="cl">-g group_name ：修改用户的所属组
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">③ userdel 指令：删除用户
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-r ：删除用户时同时删除用户的家
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">④设置用户口令（密码）
</span></span><span class="line"><span class="cl">基本语法：passwd [选项] 用户
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-S ：Status缩写，查看用户口令状态
</span></span><span class="line"><span class="cl">特别说明：如果一个用户没有密码，也会显示密码已被锁定。
</span></span><span class="line"><span class="cl">-l ：lock缩写，代表锁定用户，不能登录操作系统
</span></span><span class="line"><span class="cl">-u ：unlock缩写，代表解锁用户
</span></span><span class="line"><span class="cl">-d ：del缩写，代表删除用户密码
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑤用户的相关指令
</span></span><span class="line"><span class="cl"> su指令：切换用户
</span></span><span class="line"><span class="cl">特别说明：如果从普通用户切换到超级管理员，需要密码
</span></span><span class="line"><span class="cl">如果从超级管理员切换到普通用户，不需要密码
</span></span><span class="line"><span class="cl"> newgrp：切换所属组
</span></span><span class="line"><span class="cl"> whoami：我是谁
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑥查看用户信息
</span></span><span class="line"><span class="cl">id ：查看的内容比较多，查看用户信息
</span></span><span class="line"><span class="cl">groups ：查看的内容比较少，只能查看用户的所属组
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑦设置与查看用户资料信息
</span></span><span class="line"><span class="cl"> chfn [用户名称] ：更改用户的资料信息
</span></span><span class="line"><span class="cl"> finger [用户名称] ：查看用户的资料信息
</span></span><span class="line"><span class="cl">安装finger需要依赖的软件
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑧批量添加用户
</span></span><span class="line"><span class="cl"> 1.编辑用户文件
</span></span><span class="line"><span class="cl">vim user.txt
</span></span><span class="line"><span class="cl">2. 编辑用户密码（明文）
</span></span><span class="line"><span class="cl">vim pass.txt
</span></span><span class="line"><span class="cl">3. 使用newusers指令到user.txt中的用户信息到/etc/passwd文件中
</span></span><span class="line"><span class="cl">4. 使用pwunconv指令把/etc/shadow文件中的密码都倒回到/etc/passwd文件中
</span></span><span class="line"><span class="cl">5. 使用chpasswd指令把pass.txt文件中的密码导入/etc/passwd文件中
</span></span><span class="line"><span class="cl">6. 使用pwconv指令把加密后的密码存储在/etc/shadow文件中
</span></span></code></pre></div><h3 id="目录管理">目录管理</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① mkdir ：创建目录
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-p ：递归创建
</span></span><span class="line"><span class="cl">-m ：创建目录时指定目录权限
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">② rmdir ：删除目录
</span></span><span class="line"><span class="cl">相关参数：
</span></span><span class="line"><span class="cl">-p ：递归删除
</span></span></code></pre></div><h3 id="文件相关">文件相关</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">① touch指令：创建文件
</span></span><span class="line"><span class="cl">ouch指令与vim指令创建文件有何区别呢？
</span></span><span class="line"><span class="cl">vim指令打开文件，但是如果文件不存在，则自动创建该文件
</span></span><span class="line"><span class="cl">touch指令只能创建文件而没有打开功能
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">② rm指令删除文件
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-r ：递归删除（主要用于删除文件夹）
</span></span><span class="line"><span class="cl">-f ：关闭删除确认
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">④文件统计
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">wc  [选项]  &lt;文件列表&gt;
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-c ：统计文件的字节数
</span></span><span class="line"><span class="cl">-l ：lines缩写，统计文件的行数
</span></span><span class="line"><span class="cl">-w ：word缩写，统计文件的单词数
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑤grep搜索匹配行
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">grep  [选项]  &lt;字符串&gt;  &lt;源文件&gt;
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-n ：显示匹配的行号
</span></span><span class="line"><span class="cl">-c ：统计一共有多少行
</span></span><span class="line"><span class="cl">-i ：ignore缩写，代表匹配时忽略大小写
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑥显示文件内容
</span></span><span class="line"><span class="cl">1. cat指令：正序显示文件内容
</span></span><span class="line"><span class="cl">2. tac指令：倒序显示文件内容
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑦更改文件的权限
</span></span><span class="line"><span class="cl">1. 更改文件的权限
</span></span><span class="line"><span class="cl">chmod  -R（递归修改） 777
</span></span><span class="line"><span class="cl">2. 更改文件的拥有者
</span></span><span class="line"><span class="cl">chown  -R（递归修改） root
</span></span><span class="line"><span class="cl">3. 更改文件的所属组
</span></span><span class="line"><span class="cl">chgrp  -R（递归修改） itcast
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑧创建链接文件
</span></span><span class="line"><span class="cl">软链接创建步骤：
</span></span><span class="line"><span class="cl">ln  [-s]  &lt;源文件或目录&gt;  &lt;链接文件或目录&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">⑨复制与移动文件或文件夹
</span></span><span class="line"><span class="cl">1. cp  [选项]   &lt;源文件路径&gt;   &lt;目标文件路径&gt;
</span></span><span class="line"><span class="cl">相关选项：
</span></span><span class="line"><span class="cl">-v : 显示进度条
</span></span><span class="line"><span class="cl">-R : 递归复制
</span></span><span class="line"><span class="cl">-p : 复制时保持文件的原有属性
</span></span><span class="line"><span class="cl">-vRp ：递归复制，保存文件的原有属性，显示进度条
</span></span><span class="line"><span class="cl">还可以复制文件时更改文件名称
</span></span><span class="line"><span class="cl">2. mv指令：剪切或移动
</span></span><span class="line"><span class="cl">相关指令：
</span></span><span class="line"><span class="cl">-v ：移动时显示进度条
</span></span><span class="line"><span class="cl">3. mv指令：文件或文件夹重命名
</span></span><span class="line"><span class="cl">基本语法：
</span></span><span class="line"><span class="cl">mv  旧文件名 新文件名
</span></span></code></pre></div>]]></content>
		</item>
		
		<item>
			<title>MySQL基础操作🍕</title>
			<link>https://blog.gookm.cn/posts/2016/20160511-mysql-basic/</link>
			<pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2016/20160511-mysql-basic/</guid>
			<description>数据库基本操作 1.创建数据库 create database 数据库名字 charset 字符集名称; 2.显示数据库 show databases; show databases like ‘匹配模式’; 3.显示数据库创建语句 show create database 数据库名字; 4.选择数据 use 数据库名字; 5.修改数据库 alter database 数据库名字 charset = 字符集;（等号可以省） 6.删除数据库 drop database 数据库名字; 数据表操作 1.创建数据表 create table 表名( 字段名1字段类型 [字段属性], -- 字段与字段之间使用逗号分隔 … 字段名N字段类型 [字段属性] -- 最后一个字段后面不需要逗号) [表选项] 2.复制已有表结构 create table 新表名 like 表名; 3.显示数据表 show tables; show tables like ‘匹配模式’; 4.显示表结构 describe 表名 desc 表名(推荐) show columns from 表名 5.</description>
			<content type="html"><![CDATA[<h3 id="数据库基本操作">数据库基本操作</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="mi">1</span><span class="p">.</span><span class="err">创建数据库</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="err">数据库名字</span><span class="w"> </span><span class="kp">charset</span><span class="w"> </span><span class="err">字符集名称</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">2</span><span class="p">.</span><span class="err">显示数据库</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="k">databases</span><span class="p">;</span><span class="w">  </span><span class="k">show</span><span class="w"> </span><span class="k">databases</span><span class="w"> </span><span class="k">like</span><span class="w"> </span><span class="err">‘匹配模式’</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">3</span><span class="p">.</span><span class="err">显示数据库创建语句</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="err">数据库名字</span><span class="p">;</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">4</span><span class="p">.</span><span class="err">选择数据</span><span class="w"> </span><span class="k">use</span><span class="w"> </span><span class="err">数据库名字</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">5</span><span class="p">.</span><span class="err">修改数据库</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="err">数据库名字</span><span class="w"> </span><span class="kp">charset</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">字符集</span><span class="p">;</span><span class="err">（等号可以省）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">6</span><span class="p">.</span><span class="err">删除数据库</span><span class="w"> </span><span class="k">drop</span><span class="w"> </span><span class="k">database</span><span class="w"> </span><span class="err">数据库名字</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></div><h3 id="数据表操作">数据表操作</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="mi">1</span><span class="p">.</span><span class="err">创建数据表</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">字段名</span><span class="mi">1</span><span class="err">字段类型</span><span class="w"> </span><span class="p">[</span><span class="err">字段属性</span><span class="p">],</span><span class="w"> </span><span class="c1">-- 字段与字段之间使用逗号分隔
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">  </span><span class="err">…</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="err">字段名</span><span class="n">N字段类型</span><span class="w"> </span><span class="p">[</span><span class="err">字段属性</span><span class="p">]</span><span class="w"> </span><span class="c1">-- 最后一个字段后面不需要逗号) [表选项]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">2</span><span class="p">.</span><span class="err">复制已有表结构</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">新表名</span><span class="w"> </span><span class="k">like</span><span class="w"> </span><span class="err">表名</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">3</span><span class="p">.</span><span class="err">显示数据表</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="kp">tables</span><span class="p">;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="kp">tables</span><span class="w"> </span><span class="k">like</span><span class="w">  </span><span class="err">‘匹配模式’</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">4</span><span class="p">.</span><span class="err">显示表结构</span><span class="w"> </span><span class="k">describe</span><span class="w"> </span><span class="err">表名</span><span class="w">   </span><span class="k">desc</span><span class="w"> </span><span class="err">表名</span><span class="p">(</span><span class="err">推荐</span><span class="p">)</span><span class="w">  </span><span class="k">show</span><span class="w"> </span><span class="n">columns</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">5</span><span class="p">.</span><span class="err">显示表创建语句</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="p">;</span><span class="w"> </span><span class="n">Mysql中有多种语句结束符</span><span class="p">:</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="err">\</span><span class="n">g</span><span class="w"> </span><span class="err">\</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">6</span><span class="p">.</span><span class="err">设置表属性（表选项）</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="err">表选项</span><span class="w"> </span><span class="p">[</span><span class="o">=</span><span class="p">]</span><span class="w"> </span><span class="err">值</span><span class="p">;</span><span class="w">  </span><span class="kp">engine</span><span class="err">，</span><span class="n">charset和collate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">7</span><span class="p">.</span><span class="err">修改表名字</span><span class="w"> </span><span class="k">rename</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">旧表名</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="err">新表名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">8</span><span class="p">.</span><span class="err">修改表选项</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="err">表选项</span><span class="w"> </span><span class="p">[</span><span class="o">=</span><span class="p">]</span><span class="w"> </span><span class="err">新值</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">9</span><span class="p">.</span><span class="err">新增字段</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">add</span><span class="w"> </span><span class="p">[</span><span class="k">column</span><span class="p">]</span><span class="w"> </span><span class="err">新字段名</span><span class="w"> </span><span class="err">列类型</span><span class="w"> </span><span class="p">[</span><span class="err">列属性</span><span class="p">][</span><span class="err">位置</span><span class="n">first</span><span class="o">/</span><span class="n">after</span><span class="w"> </span><span class="err">字段名</span><span class="w">       </span><span class="err">字段类型</span><span class="w"> </span><span class="err">必须有</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">10</span><span class="p">.</span><span class="err">修改字段名</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">change</span><span class="w"> </span><span class="err">旧字段名</span><span class="w"> </span><span class="err">新字段名</span><span class="w"> </span><span class="err">字段类型</span><span class="w"> </span><span class="p">[</span><span class="err">列属性</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="err">新位置</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">11</span><span class="p">.</span><span class="err">修改字段类型</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="n">modify</span><span class="w"> </span><span class="err">字段名</span><span class="w"> </span><span class="err">新类型</span><span class="w"> </span><span class="p">[</span><span class="err">新属性</span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="err">新位置</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">12</span><span class="p">.</span><span class="err">删除字段</span><span class="w"> </span><span class="k">alter</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">drop</span><span class="w"> </span><span class="err">字段名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">13</span><span class="p">.</span><span class="err">删除表结构</span><span class="w"> </span><span class="k">drop</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="err">表名</span><span class="p">[,</span><span class="err">表名</span><span class="mi">2</span><span class="err">…</span><span class="p">]</span><span class="err">，</span><span class="w">
</span></span></span></code></pre></div><h3 id="数据基础操作">数据基础操作</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="mi">1</span><span class="p">.</span><span class="err">向表中指定字段插入数据</span><span class="n">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="err">表名</span><span class="p">[(</span><span class="err">字段列表</span><span class="p">)]</span><span class="w"> </span><span class="k">values</span><span class="p">(</span><span class="err">对应字段列表</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">2</span><span class="p">.</span><span class="err">向表中所有字段插入数据</span><span class="n">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">values</span><span class="err">（对应表结构）</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">3</span><span class="p">.</span><span class="err">查询表中全部数据</span><span class="n">select</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">4</span><span class="p">.</span><span class="err">查询表中部分字段</span><span class="n">select</span><span class="w"> </span><span class="err">字段列表</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">5</span><span class="p">.</span><span class="err">简单条件查询语句</span><span class="n">select</span><span class="w"> </span><span class="err">字段列表</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="err">字段名</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="err">值</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">6</span><span class="p">.</span><span class="err">删除操作</span><span class="n">delete</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="p">[</span><span class="k">where</span><span class="w"> </span><span class="err">条件</span><span class="p">];</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">7</span><span class="p">.</span><span class="err">更新操作</span><span class="n">update</span><span class="w"> </span><span class="err">表名</span><span class="w"> </span><span class="kt">set</span><span class="w">  </span><span class="err">字段名</span><span class="o">=</span><span class="err">新值</span><span class="w"> </span><span class="p">[</span><span class="k">where</span><span class="w"> </span><span class="err">条件</span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><p>后期会持续更新&hellip;&hellip;</p>
]]></content>
		</item>
		
		<item>
			<title>PHP基础函数🧁</title>
			<link>https://blog.gookm.cn/posts/2016/20160305-php-basic/</link>
			<pubDate>Sat, 05 Mar 2016 00:00:00 +0000</pubDate>
			
			<guid>https://blog.gookm.cn/posts/2016/20160305-php-basic/</guid>
			<description>有关输出的函数 print() //类似于echo输出提供的内容，返回1 print_r() //一般用于打印数组,不打印类型 var_dump() //打印数据的值,还有类型 有关时间的函数 date() //显示日期时间 举例：date(“Y-m-dH:i:s”) time() //时间戳（秒数） microtime() //返回时间戳和微秒数 strtotime() //将日期时间的字符串解析成时间戳 数学相关函数 max($v1,$v2,$v3…) //求最大值 min($v1,$v2,$v3…) //求最小值 rand() //随机数 mt_rand() //生成更好的随机数 round(变量 [,N]) //保留n位小 ceil() //向上取整 floor() //向下取整 pow(x,y) //求xY abs() //绝对值 sqrt() //求平方根 有关函数的函数 function_exists(函数名) //判断函数是否存在 func_get_arg(下标) //获取指定下标对应的参数 func_get_args() //在自定义函数中获取所有的参数（返回值是一个数组） func_num_args() //获取当前自定义函数的参数数量 字符串相关的函数 strlen() //得到字符串的长度 mb_strlen($字符串变量名 ，字符编码) implode(连接方式,数组) //连接成一个字符串 explode(分割字符,目标字符串) //变成数组 str_split(字符串,字符长度) //按照指定长度拆分字符串得到数组 trim(字符串[,指定字符]) //默认是用来去除字符串两边的空格 ltrim() //去除左边的 rtrim() //去除右边的 substr(字符串,起始位置从0开始[,长度]) strstr(字符串,匹配字符) //从指定位置开始，截取到最后（可以用来去文件后缀名） strtolower() //全部小写 strtoupper() //全部大写 ucfirst() //首字母大写 strpos(字符串，匹配字符) //判断字符在目标字符串中出现的位置（首次） strrpos(字符串，匹配字符) str_replace(匹配目标,替换的内容,字符串本身) printf/sprintf(输出字符串有占位符,顺序占位内容.</description>
			<content type="html"><![CDATA[<p><img src="https://qiniu.zkilm.cn/blog/posts/2016/php02.png" alt="封面"></p>
<h3 id="有关输出的函数">有关输出的函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">print</span><span class="p">()</span> <span class="c1">//类似于echo输出提供的内容，返回1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">print_r</span><span class="p">()</span>  <span class="c1">//一般用于打印数组,不打印类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">var_dump</span><span class="p">()</span> <span class="c1">//打印数据的值,还有类型
</span></span></span></code></pre></div><h3 id="有关时间的函数">有关时间的函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">date</span><span class="p">()</span> <span class="c1">//显示日期时间  举例：date(“Y-m-dH:i:s”)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">time</span><span class="p">()</span> <span class="c1">//时间戳（秒数）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">microtime</span><span class="p">()</span> <span class="c1">//返回时间戳和微秒数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">strtotime</span><span class="p">()</span> <span class="c1">//将日期时间的字符串解析成时间戳
</span></span></span></code></pre></div><h3 id="数学相关函数">数学相关函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">max</span><span class="p">(</span><span class="nv">$v1</span><span class="p">,</span><span class="nv">$v2</span><span class="p">,</span><span class="nv">$v3…</span><span class="p">)</span> <span class="c1">//求最大值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">min</span><span class="p">(</span><span class="nv">$v1</span><span class="p">,</span><span class="nv">$v2</span><span class="p">,</span><span class="nv">$v3…</span><span class="p">)</span> <span class="c1">//求最小值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">rand</span><span class="p">()</span> <span class="c1">//随机数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">mt_rand</span><span class="p">()</span> <span class="c1">//生成更好的随机数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">round</span><span class="p">(</span><span class="nx">变量</span> <span class="p">[,</span><span class="nx">N</span><span class="p">])</span> <span class="c1">//保留n位小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">ceil</span><span class="p">()</span> <span class="c1">//向上取整
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">floor</span><span class="p">()</span> <span class="c1">//向下取整
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">pow</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">)</span> <span class="c1">//求xY
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">abs</span><span class="p">()</span> <span class="c1">//绝对值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">sqrt</span><span class="p">()</span> <span class="c1">//求平方根
</span></span></span></code></pre></div><h3 id="有关函数的函数">有关函数的函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">function_exists</span><span class="p">(</span><span class="nx">函数名</span><span class="p">)</span>  <span class="c1">//判断函数是否存在
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">func_get_arg</span><span class="p">(</span><span class="nx">下标</span><span class="p">)</span>  <span class="c1">//获取指定下标对应的参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">func_get_args</span><span class="p">()</span> <span class="c1">//在自定义函数中获取所有的参数（返回值是一个数组）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">func_num_args</span><span class="p">()</span> <span class="c1">//获取当前自定义函数的参数数量
</span></span></span></code></pre></div><h3 id="字符串相关的函数">字符串相关的函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">strlen</span><span class="p">()</span> <span class="c1">//得到字符串的长度 mb_strlen($字符串变量名 ，字符编码)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">implode</span><span class="p">(</span><span class="nx">连接方式</span><span class="p">,</span><span class="nx">数组</span><span class="p">)</span> <span class="c1">//连接成一个字符串
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">explode</span><span class="p">(</span><span class="nx">分割字符</span><span class="p">,</span><span class="nx">目标字符串</span><span class="p">)</span> <span class="c1">//变成数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">str_split</span><span class="p">(</span><span class="nx">字符串</span><span class="p">,</span><span class="nx">字符长度</span><span class="p">)</span> <span class="c1">//按照指定长度拆分字符串得到数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">trim</span><span class="p">(</span><span class="nx">字符串</span><span class="p">[,</span><span class="nx">指定字符</span><span class="p">])</span> <span class="c1">//默认是用来去除字符串两边的空格
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">ltrim</span><span class="p">()</span> <span class="c1">//去除左边的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">rtrim</span><span class="p">()</span> <span class="c1">//去除右边的
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">substr</span><span class="p">(</span><span class="nx">字符串</span><span class="p">,</span><span class="nx">起始位置从0开始</span><span class="p">[,</span><span class="nx">长度</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="nx">strstr</span><span class="p">(</span><span class="nx">字符串</span><span class="p">,</span><span class="nx">匹配字符</span><span class="p">)</span> <span class="c1">//从指定位置开始，截取到最后（可以用来去文件后缀名）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">strtolower</span><span class="p">()</span> <span class="c1">//全部小写
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">strtoupper</span><span class="p">()</span> <span class="c1">//全部大写
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">ucfirst</span><span class="p">()</span> <span class="c1">//首字母大写
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">strpos</span><span class="p">(</span><span class="nx">字符串，匹配字符</span><span class="p">)</span> <span class="c1">//判断字符在目标字符串中出现的位置（首次）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">strrpos</span><span class="p">(</span><span class="nx">字符串，匹配字符</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">str_replace</span><span class="p">(</span><span class="nx">匹配目标</span><span class="p">,</span><span class="nx">替换的内容</span><span class="p">,</span><span class="nx">字符串本身</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">printf</span><span class="o">/</span><span class="nx">sprintf</span><span class="p">(</span><span class="nx">输出字符串有占位符</span><span class="p">,</span><span class="nx">顺序占位内容</span><span class="o">..</span><span class="p">)</span><span class="o">%</span><span class="nx">d</span>  <span class="o">%</span><span class="nx">s</span>
</span></span><span class="line"><span class="cl"><span class="nx">str_repeat</span><span class="p">()</span> <span class="c1">//重复某个字符串n次
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">str_shuffle</span><span class="p">()</span> <span class="c1">//随机打乱字符串
</span></span></span></code></pre></div><h3 id="数组相关的函数">数组相关的函数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">//数组排序的函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">sort</span><span class="p">()</span> <span class="c1">//按元素的值  升序排列（下标重排）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">rsort</span><span class="p">()</span> <span class="c1">//按元素的值降序排列（下标重排）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">asort</span><span class="p">()</span> <span class="c1">//按元素的值升序排列（下标保留）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">arsort</span><span class="p">()</span> <span class="c1">//按元素的值降序排列（下标保留）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">ksort</span><span class="p">()</span> <span class="c1">//数组按键名(下标) 升序排列，（下标保留）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">krsort</span><span class="p">()</span> <span class="c1">//按键名降序排列，（下标保留）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">shuffle</span><span class="p">()</span> <span class="c1">//随机打乱数组元素，数组下标会重排
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">排序：默认的是升序排列，有</span> <span class="nx">r就是降序排列</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">有a：就是保留索引关系</span> 
</span></span><span class="line"><span class="cl"><span class="nx">有k：就是按照键名排序</span>
</span></span><span class="line"><span class="cl"><span class="c1">//指针
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">reset</span><span class="p">()</span> <span class="c1">//重置指针，将数组指针回到首位
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">end</span><span class="p">()</span>  <span class="c1">//重置指针，将数组指针指到最后一个元素
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">next</span><span class="p">()</span>  <span class="c1">//指针下移，取得下一个元素的值
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">prev</span><span class="p">()</span>  <span class="c1">//指针上移，取得上一个元素的值                       
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">current</span><span class="p">()</span> <span class="c1">//获取当前指针对应的元素值  （不移动指针）      
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">key</span><span class="p">()</span> <span class="c1">//获取当前指针对应的下标值（不移动指针）
</span></span></span><span class="line"><span class="cl"><span class="c1">//数组其他函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">count</span><span class="p">()</span> <span class="c1">//统计数组中元素的数量
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_push</span><span class="p">()</span> <span class="c1">//往数组中加入一个元素（数组后面）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_pop</span><span class="p">()</span> <span class="c1">//从数组中取出一个元素（数组后面）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_shift</span><span class="p">()</span> <span class="c1">//从数组中取出一个元素（数组前面）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_unshift</span><span class="p">()</span> <span class="c1">//从数组中加入一个元素（数组前面）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_reverse</span><span class="p">()</span> <span class="c1">//数组元素反过来
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">in_array</span><span class="p">()</span> <span class="c1">//判断一个元素在数组中是否存在
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_keys</span><span class="p">()</span> <span class="c1">//获取一个数组的所有下标，返回一个索引数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_values</span><span class="p">()</span> <span class="c1">//获取一个数组的所有值，返回一个索引数组
</span></span></span></code></pre></div><p><a href="">后期会持续更新&hellip;..</a></p>
<h3 id="更新">更新</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="nx">array_merge</span><span class="p">()</span> <span class="c1">//合并一个或多个数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_merge</span><span class="p">(</span><span class="nv">$arr1</span><span class="p">,</span><span class="nv">$arr2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nx">array_splice</span><span class="p">()</span> <span class="c1">//把数组中的一部分去掉并用其它值取代
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$input</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&#34;red&#34;</span><span class="p">,</span> <span class="s2">&#34;green&#34;</span><span class="p">,</span> <span class="s2">&#34;blue&#34;</span><span class="p">,</span> <span class="s2">&#34;yellow&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">array_splice</span><span class="p">(</span><span class="nv">$input</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span><span class="c1">//$input is now array(“red”,” green”);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_chunk</span><span class="p">()</span> <span class="c1">//将一个数组分割成多个
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">shuffle</span><span class="p">()</span> <span class="c1">//将数组打乱
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">range</span><span class="p">()</span> <span class="c1">//建立一个包含指定范围单元的数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">is_file</span><span class="p">()</span> <span class="c1">//判断给定文件名是否为一个正常的文件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">define</span><span class="p">()</span> <span class="c1">//定义一个常量
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">defined</span><span class="p">()</span> <span class="c1">//检查某个名称的常量是否存在
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">ini_set</span><span class="p">()</span> <span class="c1">//为一个配置选项设置值  ini_set(&#39;display_errors&#39;, &#39;1&#39;);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">basename</span><span class="p">()</span> <span class="c1">//返回路径中的文件名部分
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">is_array</span><span class="p">()</span> <span class="c1">//检测变量是否是数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  
</span></span><span class="line"><span class="cl"><span class="k">list</span><span class="p">()</span> <span class="c1">//把数组中的值赋给一些变量
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$info</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;coffee&#39;</span><span class="p">,</span> <span class="s1">&#39;brown&#39;</span><span class="p">,</span> <span class="s1">&#39;caffeine&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">list</span><span class="p">(</span><span class="nv">$drink</span><span class="p">,</span> <span class="nv">$color</span><span class="p">,</span> <span class="nv">$power</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$info</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">echo</span> <span class="s2">&#34;</span><span class="si">$drink</span><span class="s2"> is </span><span class="si">$color</span><span class="s2"> and </span><span class="si">$power</span><span class="s2"> makes it special.</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">nl2br</span><span class="p">()</span> <span class="c1">//在字符串所有新行之前插入 HTML 换行标记
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">array_rand</span><span class="p">()</span> <span class="c1">//从数组中随机取出一个或多个单元
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">count</span><span class="p">()</span> <span class="c1">//计算数组中的单元数目或对象中的属性个数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">reset</span><span class="p">()</span> <span class="c1">//将数组的内部指针指向第一个单元
</span></span></span></code></pre></div>]]></content>
		</item>
		
	</channel>
</rss>
